(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{UQSp:function(D,B,t){"use strict";B.a={name:"VueRemarkRoot",render(D){return D("div",null,this.$slots.default)}}},zFza:function(D,B,t){"use strict";t.r(B);var i=t("KHd+"),n=t("UQSp"),a=t("oCYn");function o(D){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(D){return typeof D}:function(D){return D&&"function"==typeof Symbol&&D.constructor===Symbol&&D!==Symbol.prototype?"symbol":typeof D})(D)}a.a.config.optionMergeStrategies;var e={VueRemarkRoot:n.a},r=function(D){var B=D.options.components=D.options.components||{},t=D.options.computed=D.options.computed||{};Object.keys(e).forEach((function(D){"object"===o(e[D])&&"function"==typeof e[D].render||"function"==typeof e[D]&&"function"==typeof e[D].options.render?B[D]=e[D]:t[D]=function(){return e[D]}}))},s=a.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",p={excerpt:null,title:"Глава 1. Введение в объекты",description:"Глава 1. Введение в объекты",tags:["java","ооп"],icon:"fas fa-code",image:"null",date:"2024-02-04T00:00:00.000Z",keywords:"java, ооп",order:1,links:[{items:[{title:"Глава 1. Введение в объекты",link:"/glava-1-vvedenie-v-obekty/"},{title:"Глава 5. Инициализация и завершение",link:"/glava-5-iniczializacziya-i-zavershenie/"}]}]};var l=function(D){D.options[c]&&(D.options[c]=p),a.a.util.defineReactive(D.options,c,p),D.options.computed=s.computed({$frontmatter:function(){return D.options[c]}},D.options.computed)},u=Object(i.a)({},(function(){var D=this,B=D._self._c;return B("VueRemarkRoot",[B("h2",{attrs:{id:"развитие-абстракции"}},[B("a",{attrs:{href:"#%D1%80%D0%B0%D0%B7%D0%B2%D0%B8%D1%82%D0%B8%D0%B5-%D0%B0%D0%B1%D1%81%D1%82%D1%80%D0%B0%D0%BA%D1%86%D0%B8%D0%B8","aria-hidden":"true"}},[B("span",{staticClass:"icon icon-link"})]),D._v("Развитие абстракции")]),B("p",[D._v("Все языки программирования построены на "),B("u",[B("strong",[D._v("абстракции")])]),D._v(".")]),B("p",[D._v('Различают тип и качество абстракции. Под словом "Тип" имеется ввиду ответ на вопрос "Что конкретно мы абстрагируем?"')]),B("p",[D._v("Язык ассемблера - есть небольшая абстракция от компьютера, на базе которого он работает.")]),B("p",[D._v('"Командные" языки, созданные вслед за ним, такие как Fortran, BASIC и C представляют собой абстракции следующего уровня, но по-прежнему заставляли мыслить в контектсте структуры компьютера, а не решаемой задачи.')]),B("h3",{attrs:{id:"моделирование-машины"}},[B("a",{attrs:{href:"#%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BC%D0%B0%D1%88%D0%B8%D0%BD%D1%8B","aria-hidden":"true"}},[B("span",{staticClass:"icon icon-link"})]),D._v("Моделирование машины")]),B("p",[D._v('Нужно устанавливать связь между моделью машины(в "пространстве решения" - место, где реализуется решение, н-р компьютер) и моделью задачи(н-р прикладная область). В результате затрачиваются дополнительные усилия и появляются программы, которые трудно писать и тяжело поддерживать.')]),B("h3",{attrs:{id:"моделирование-решаемой-задачи"}},[B("a",{attrs:{href:"#%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D1%80%D0%B5%D1%88%D0%B0%D0%B5%D0%BC%D0%BE%D0%B9-%D0%B7%D0%B0%D0%B4%D0%B0%D1%87%D0%B8","aria-hidden":"true"}},[B("span",{staticClass:"icon icon-link"})]),D._v("Моделирование решаемой задачи")]),B("h4",{attrs:{id:"моделирование-окружающего-мира"}},[B("a",{attrs:{href:"#%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BE%D0%BA%D1%80%D1%83%D0%B6%D0%B0%D1%8E%D1%89%D0%B5%D0%B3%D0%BE-%D0%BC%D0%B8%D1%80%D0%B0","aria-hidden":"true"}},[B("span",{staticClass:"icon icon-link"})]),D._v("Моделирование окружающего мира")]),B("p",[D._v('Языки, подобные LISP и APL, имели особый подход к моделированию окружающего мира ("Все задачи решаются списками" или "Алгоритмы решают все") ')]),B("h4",{attrs:{id:"проблемы-как-цепочки-решений"}},[B("a",{attrs:{href:"#%D0%BF%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC%D1%8B-%D0%BA%D0%B0%D0%BA-%D1%86%D0%B5%D0%BF%D0%BE%D1%87%D0%BA%D0%B8-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D0%B9","aria-hidden":"true"}},[B("span",{staticClass:"icon icon-link"})]),D._v("Проблемы как цепочки решений")]),B("p",[D._v("PROLOG трактует все проблемы как цепочки решений. ")]),B("h4",{attrs:{id:"cистемs-ограничений-и-манипуляциb-с-графическими-конструкциями"}},[B("a",{attrs:{href:"#c%D0%B8%D1%81%D1%82%D0%B5%D0%BCs-%D0%BE%D0%B3%D1%80%D0%B0%D0%BD%D0%B8%D1%87%D0%B5%D0%BD%D0%B8%D0%B9-%D0%B8-%D0%BC%D0%B0%D0%BD%D0%B8%D0%BF%D1%83%D0%BB%D1%8F%D1%86%D0%B8b-%D1%81-%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%BC%D0%B8-%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%86%D0%B8%D1%8F%D0%BC%D0%B8","aria-hidden":"true"}},[B("span",{staticClass:"icon icon-link"})]),D._v("Cистемs ограничений и манипуляциb с графическими конструкциями")]),B("p",[D._v("Существовали языки для программирования, основанного на системе ограничений и специальные языки, в которых программирование осуществлялось посредством манипуляций с графическими конструкциями(областьприменения оказалась слишком узкой).")]),B("p",[D._v("Кадый из подходов хорош, но не позволяет выйти из области решаемых задач. Использование их вне их сферы становится затруднительно.")]),B("h4",{attrs:{id:"объектный-подход"}},[B("a",{attrs:{href:"#%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D1%8B%D0%B9-%D0%BF%D0%BE%D0%B4%D1%85%D0%BE%D0%B4","aria-hidden":"true"}},[B("span",{staticClass:"icon icon-link"})]),D._v("Объектный подход")]),B("p",[D._v("Объектный подход предоставляет средства для представления задачи в ее пространстве. Имеет общий характер и не накладывает ограничений на тип решаемой проблемы. ")]),B("p",[D._v('Элементы пространства задачи и их представления в пространстве решения называются "объектами".')]),B("p",[D._v("Программа может адаптироваться к специфике задачи посредством создания новых типов объектов. Т.о. ООП описывает задачу в контексте самой задачи. ")]),B("p",[D._v("Связь с компьютером однако сохранилась т.к. каждый объект похож на компьютер - у него есть состояние и операции, которые он позвояет проводить, что сочетается с реальным миром - "),B("i",[B("strong",[D._v('"реальность, данная нам в объектах"')])]),D._v(", обладающих характеристиками и поведением.")]),B("h3",{attrs:{id:"характеристики-академического-подхода-к-ооп"}},[B("a",{attrs:{href:"#%D1%85%D0%B0%D1%80%D0%B0%D0%BA%D1%82%D0%B5%D1%80%D0%B8%D1%81%D1%82%D0%B8%D0%BA%D0%B8-%D0%B0%D0%BA%D0%B0%D0%B4%D0%B5%D0%BC%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE-%D0%BF%D0%BE%D0%B4%D1%85%D0%BE%D0%B4%D0%B0-%D0%BA-%D0%BE%D0%BE%D0%BF","aria-hidden":"true"}},[B("span",{staticClass:"icon icon-link"})]),D._v("Характеристики академического подхода к ООП")]),B("ul",[B("li",[B("p",[D._v("Всё является объектом;"),B("br"),B("i",[D._v('Объект - это усовершенствованная переменная, он хранит данные, но к нему можно "обращаться с запросами", приказывая выполнить операции над собой. Любой компонент решаемой задачи может быть представлен в виде объекта.')])])]),B("li",[B("p",[D._v("Программа - это набор объектов, указывающих друг другу, что делать, посредством сообщений;"),B("br"),B("i",[D._v('Чтобы обратиться с запросом, вы "посылаете сообщение". Сообщение - это запрос на вызов метода, принадлежащего определенному объекту.')])])]),B("li",[B("p",[D._v('Каждый объект имеет собственную "память", состоящую из других объектов;'),B("br"),B("i",[D._v("Новый объект создается  путем встраивания в него уже существующих объектов, скрывая общую сложность за простотой отдельных объектов.")])])]),B("li",[B("p",[D._v("У каждого объекта есть тип;"),B("br"),B("i",[D._v('Каждый объект является экземпляром класса, "класс" - синоним слова "тип". Отличие классов друг от друга - ответ на вопрос "Какие сообщения можно объекту посылать?"')])])]),B("li",[B("p",[D._v("Все объекты определенного типа могут получать одинаковые сообщения;"),B("br"),B("i",[D._v('Объект типа "круг" также является объектом типа "фигура" и справедливо что "круг" также  может принимать сообщения для типа "фигура".')])])])]),B("h4",{attrs:{id:"описание-объекта-буч"}},[B("a",{attrs:{href:"#%D0%BE%D0%BF%D0%B8%D1%81%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%B0-%D0%B1%D1%83%D1%87","aria-hidden":"true"}},[B("span",{staticClass:"icon icon-link"})]),D._v("Описание объекта (Буч)")]),B("p",[B("i",[B("strong",[D._v("Объект обладает состоянием, поведением и индивидуальностью.")])]),D._v("\n Объект может иметь внутренние данные(состояние объекта), методы(определяют поведение) и каждый объект можно уникальным образом отличить от другого объекта(н-р уникальным адресом в памяти)")]),B("h2",{attrs:{id:"объект-обладает-интерфейсом"}},[B("a",{attrs:{href:"#%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82-%D0%BE%D0%B1%D0%BB%D0%B0%D0%B4%D0%B0%D0%B5%D1%82-%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D1%84%D0%B5%D0%B9%D1%81%D0%BE%D0%BC","aria-hidden":"true"}},[B("span",{staticClass:"icon icon-link"})]),D._v("Объект обладает интерфейсом")]),B("p",[D._v('Понятие типа можно сравнить с понятием Аристотеля о "классе рыб и классе птиц".')]),B("p",[D._v("Концепция, что все объекты будучи уникальными являются частью класса объектов со сходными характеристиками и поведением, использована в "),B("u",[D._v("первом")]),D._v(" объектно-ориентированном языке "),B("i",[D._v("Simula-67")]),D._v(", с введением слова class, которое вводило новый тип в прорамму.")])])}),[],!1,null,null,null);"function"==typeof r&&r(u),"function"==typeof l&&l(u);B.default=u.exports}}]);