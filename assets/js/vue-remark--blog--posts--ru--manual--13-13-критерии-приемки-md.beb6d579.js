(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{UQSp:function(e,t,i){"use strict";t.a={name:"VueRemarkRoot",render(e){return e("div",null,this.$slots.default)}}},uDD9:function(e,t,i){"use strict";i.r(t);var n=i("KHd+"),o=i("UQSp"),r=i("oCYn");function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r.a.config.optionMergeStrategies;var l={VueRemarkRoot:o.a},s=function(e){var t=e.options.components=e.options.components||{},i=e.options.computed=e.options.computed||{};Object.keys(l).forEach((function(e){"object"===a(l[e])&&"function"==typeof l[e].render||"function"==typeof l[e]&&"function"==typeof l[e].options.render?t[e]=l[e]:i[e]=function(){return l[e]}}))},c=r.a.config.optionMergeStrategies,p="__vueRemarkFrontMatter",u={excerpt:null,title:"Критерии приемки",category:"manual",description:"Критерии приемки",tags:["Тестовая документация"],icon:"fas fa-bug",image:"null",date:"2022-05-13T00:00:00.000Z",keywords:"qa, Тестовая документация",order:26,links:[{items:[{title:"13. Тестовая документация",link:"/testovaya-dokumentacziya/"},{title:"Тестовая политика и стратегия",link:"/testovaya-politika-i-strategiya/"},{title:"Международные стандарты тестовой документации",link:"/mezhdunarodnye-standarty-testovoj-dokumentaczii/"},{title:"Master Test Plan и тестовые планы для каждого уровня",link:"/master-test-plan-i-testovye-plany-dlya-kazhdogo-urovnya/"},{title:"Понятие Test Case и Test Suite",link:"/ponyatie-test-case-i-test-suite/"},{title:"Понятие Test Basis, Test Condition и Test Procedure",link:"/ponyatie-test-basis-test-condition-i-test-procedure/"},{title:"Check-list, как представитель Experience-Based",link:"/check-list-kak-predstavitel-experience-based/"},{title:"Bug Report",link:"/bug-report/"},{title:"Summary Report",link:"/summary-report/"},{title:"Requirements Tracebility Matrix",link:"/requirements-tracebility-matrix/"},{title:"Test Data Tables",link:"/test-data-tables/"},{title:"Test Scenario",link:"/test-scenario/"},{title:"External Test Reports",link:"/external-test-reports/"},{title:"Критерии приемки",link:"/kriterii-priemki/"},{title:"Метрики тестирования",link:"/metriki-testirovaniya/"},{title:"Требования",link:"/trebovaniya/"},{title:"Тестовый оракул",link:"/testovyj-orakul/"}]}]};var v=function(e){e.options[p]&&(e.options[p]=u),r.a.util.defineReactive(e.options,p,u),e.options.computed=c.computed({$frontmatter:function(){return e.options[p]}},e.options.computed)},d=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("VueRemarkRoot",[t("h2",{attrs:{id:"критерии-приемки-acceptance-criteria"}},[t("a",{attrs:{href:"#%D0%BA%D1%80%D0%B8%D1%82%D0%B5%D1%80%D0%B8%D0%B8-%D0%BF%D1%80%D0%B8%D0%B5%D0%BC%D0%BA%D0%B8-acceptance-criteria","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Критерии приемки (Acceptance Criteria)")]),t("p",[t("em",[e._v("Критерии приемки (acceptance criteria): Критерии выхода, которым должны соответствовать компонент или система, для того, чтобы быть принятыми пользователем, заказчиком или другим уполномоченным лицом. (IEEE 610)")])]),t("p",[e._v("Критерии приемки - это условия, которым должен удовлетворять программный продукт, чтобы быть принятым пользователем, заказчиком или, в случае функциональности системного уровня, потребляющей системой. Проще говоря - это список деталей (также известных как требования) о том, как новая функция (feature) программного обеспечения должна работать / выглядеть. Это гарантирует, что:")]),t("ul",[t("li",[e._v("Функция разработана хорошо. В противном случае важный или полезный аспект может быть упущен - и никто этого не заметит до самого конца.")]),t("li",[e._v("Это работает так, как было задумано. Если описание расплывчато, разработчикам, возможно, придется сделать предположения о том, как должна работать каждая область. С критериями приемки разработчики точно знают, какой дизайн и функциональность ожидаются.")]),t("li",[e._v("QA знает, чего ожидать во время тестирования. Даже если функция не выглядит сломанной, она может работать не так, как хотели менеджеры по продукту. Если критерии приемки отсутствуют, тестировщики не могут сообщать о подобных проблемах.")])]),t("p",[e._v("Хорошие критерии приемки должны быть простыми для понимания, но с достаточной детализацией, чтобы убедиться, что они не слишком расплывчаты. Это не всегда универсальный подход. Но они всегда должны предоставлять достаточно информации для разработчиков, чтобы создать функцию, а для QA - для ее тестирования. Это не значит, что в процессе разработки программного обеспечения не возникнет вопросов. Но в целом функция должна быть понятной.")]),t("p",[e._v("Формат / макет / шаблон критериев приемки (Acceptance Criteria Format/Layout/Template): существует два основных типа критериев приемки, основанные на сценариях и правилах:")]),t("ul",[t("li",[e._v("Критерии приемлемости, основанные на сценариях (Scenario-based acceptance criteria), используют шаблон для подробного описания конкретного поведения / последовательности действий пользователя;")]),t("li",[e._v("Критерии приемлемости на основе правил (Rule-based acceptance criteria) - это скорее простой список того, как функция должна выглядеть / работать;")])]),t("p",[t("strong",[e._v("Scenario-based acceptance criteria")]),e._v(" соответствует формату “Дано/Когда/Тогда” (“Given/When/Then”) (основан на BDD - "),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Behavior-driven_development",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("behavior driven development")]),e._v("):")]),t("ul",[t("li",[e._v("Given /"),t("em",[e._v("какой-то аспект, связанный с поведением пользователя")]),e._v("/")]),t("li",[e._v("When /"),t("em",[e._v("пользователь выполняет определенное действие")]),e._v("/")]),t("li",[e._v("Then /"),t("em",[e._v("происходит определенный результат")]),e._v("/")])]),t("p",[e._v("Между ними в случае нескольких условий можно добавлять “И” (“AND”).")]),t("p",[t("strong",[e._v("Rule-Based Acceptance Criteria")]),e._v(" - это простой список «правил» о том, как функция должна выглядеть / работать:")]),t("ul",[t("li",[e._v("Все кнопки должны быть определенного цвета;")]),t("li",[e._v("Кнопка входа должна перенаправлять пользователя в определенный раздел;")]),t("li",[e._v("Кнопка регистрации должна находиться в определенной области;")]),t("li",[e._v("Все кнопки должны быть серыми, если не выполняются определенные требования;")]),t("li",[e._v("и многое другое;")])]),t("p",[e._v("Хотя критерии, основанные на правилах, имеют более простой формат, нет причин, по которым они не могут быть длинными и подробными.")]),t("p",[t("strong",[e._v("Кто пишет критерии приемки?")]),e._v(" Обычно в создании критериев приемки участвуют несколько человек или команд. Тем не менее, это в первую очередь делает product manager (или “product owner”). Разработчики несут ответственность за обеспечение функциональности функции, а QA - за подтверждение ее удобства использования. Но критерии приемки создаются человеком или командой, ответственной за решение, какие новые функции добавить в продукт (независимо от типа приложения или веб-сайта).")]),t("p",[e._v("Большая часть Agile включает внесение изменений по мере развития проекта. Так "),t("strong",[e._v("могут ли критерии приемки измениться в середине спринта?")]),e._v(" Ответ: «Это зависит от обстоятельств». Если спринт начался, но разработчики еще не завершили эту функцию, можно изменить требования. Но важно всегда сначала согласовывать с разработчиками и держать других (например, QA) в курсе. Тестировщики могли написать test cases, которые больше не актуальны после изменений. Кроме того, новый объем работы может оказаться слишком большим, чтобы разработчики могли завершить его вовремя.")]),t("p",[e._v("**User Stories vs Acceptance Criteria: **пользовательские истории и критерии приемки идут рука об руку. Пользовательская история описывает основную цель новой функции - обзор того, как она поможет пользователям. Критерии приемки перечисляют способы работы функции с технической точки зрения. Обычно в тикетах (например, в Jira или Trello) вверху указывается пользовательская история, за которой следуют критерии приемки")]),t("p",[t("strong",[e._v("Definition of Done:")]),e._v(" чтобы заявка (или функция) считалась «выполненной», все критерии должны работать. Например, предположим, что пользовательская история была: “Как пользователь, я хочу иметь возможность войти в систему, чтобы получить доступ к панели управления моей учетной записи”. Как уже упоминалось, пользователь может войти в систему, чтобы получить доступ к панели управления своей учетной записи. Но тикет не считался бы «done», если бы он также содержал следующие критерии приемки: “Кнопка входа должна быть бирюзовой”, а фактически кнопка входа была бы, например, желтой. Иногда команда решает запустить функцию даже с незначительными несоответствиями. Таким образом, они могут пометить тикет как выполненный (или создать отдельный для решения оставшихся аспектов), даже если не все критерии работают. Но с точки зрения технического определения, это не «готово», пока не пройдут все критерии приемки.")]),t("p",[e._v("Источник: "),t("a",{attrs:{href:"https://www.mindfulqa.com/acceptance-criteria/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("What is Acceptance Criteria?")])])])}),[],!1,null,null,null);"function"==typeof s&&s(d),"function"==typeof v&&v(d);t.default=d.exports}}]);