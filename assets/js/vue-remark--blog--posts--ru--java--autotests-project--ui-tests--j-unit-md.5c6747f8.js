(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{UQSp:function(t,a,s){"use strict";a.a={name:"VueRemarkRoot",render(t){return t("div",null,this.$slots.default)}}},"j/Ms":function(t,a,s){"use strict";s.r(a);var n=s("KHd+"),o=s("UQSp"),i=s("oCYn");function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}i.a.config.optionMergeStrategies;var c={VueRemarkRoot:o.a},p=function(t){var a=t.options.components=t.options.components||{},s=t.options.computed=t.options.computed||{};Object.keys(c).forEach((function(t){"object"===e(c[t])&&"function"==typeof c[t].render||"function"==typeof c[t]&&"function"==typeof c[t].options.render?a[t]=c[t]:s[t]=function(){return c[t]}}))},v=i.a.config.optionMergeStrategies,u="__vueRemarkFrontMatter",l={excerpt:null,title:"JUnit 5",category:"automation",description:"JUnit 5",tags:["Автоматизация тестирования"],icon:"fas fa-robot",image:"null",date:"2022-06-18T00:00:00.000Z",keywords:"qa, Автоматизация тестирования",links:[{items:[{title:"Моя подготовка",link:"/moya-podgotovka/"},{title:"Курс по автоматизации тестирования Java",link:"/kurs-po-avtomatizaczii-testirovaniya-java/"},{title:"Профессионально работаем с IntelliJ IDEA",link:"/professionalno-rabotaem-s-intelli-j-idea/"},{title:"Что такое Selenium?",link:"/chto-takoe-selenium/"},{title:"Инфраструктура проекта автотестирования",link:"/infrastruktura-proekta-avtotestirovaniya/"},{title:"Основы Java",link:"/osnovy-java/"},{title:"Система сборки. Ant, Maven, Gradle",link:"/sistema-sborki-ant-maven-gradle/"},{title:"JUnit 5",link:"/j-unit-5/"}]}]};var _=function(t){t.options[u]&&(t.options[u]=l),i.a.util.defineReactive(t.options,u,l),t.options.computed=v.computed({$frontmatter:function(){return t.options[u]}},t.options.computed)},C=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("VueRemarkRoot",[a("p",[t._v("Зачастую для тестов нужно сделать какие то действия: до тестов, после тестов или перед каждым тестом.\nДля этих целей используются такие тест ранеры как JUnit или TestNG.")]),a("p",[t._v("JUnit5 разделен на 3 глобальных модулей: Platform, Jupiter, Vintage.")]),a("p",[t._v("Platform - база которая позволяет строить свои собственные фреймворки для запуска тестов. На основе этого модуля сделали интеграцию с Intellij Idea, maven, gradle и сам Junit5. Сюда же входит лаунчер который позволяет запускать тесты из консоли. ")]),a("p",[t._v("Jupiter - прораммный код самого Junit5. Также этот модуль содержит новую концепцию extensions(расширений), которая заменила ранеры и правила из JUnit4. ")]),a("p",[t._v("Vintage - модуль для обратной совместимости. Позволяет запускать тесты написанных на JUnit3 и JUnit4. ")]),a("h2",{attrs:{id:"подключение-зависимостей"}},[a("a",{attrs:{href:"#%D0%BF%D0%BE%D0%B4%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B7%D0%B0%D0%B2%D0%B8%D1%81%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D0%B5%D0%B9","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Подключение зависимостей")]),a("p",[t._v("Для подключения JUnit5 добавляем в зависимости модуль Platform(junit-platform-launcher) и движок Jupiter(junit-jupiter-engine)")]),a("h3",{attrs:{id:"maven"}},[a("a",{attrs:{href:"#maven","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Maven")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"xml"}},[a("pre",{staticClass:"language-xml"},[a("code",{staticClass:"language-xml"},[a("span",{staticClass:"token comment"},[t._v("\x3c!-- https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher --\x3e")]),t._v("\n"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("dependency")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("groupId")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("org.junit.platform"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("groupId")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("artifactId")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("junit-platform-launcher"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("artifactId")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("version")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("1.10.2"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("version")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("scope")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("test"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("scope")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("dependency")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n\n"),a("span",{staticClass:"token comment"},[t._v("\x3c!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine --\x3e")]),t._v("\n"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("dependency")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("groupId")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("org.junit.jupiter"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("groupId")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("artifactId")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("junit-jupiter-engine"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("artifactId")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("version")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("5.10.2"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("version")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("scope")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("test"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("scope")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n"),a("span",{staticClass:"token tag"},[a("span",{staticClass:"token tag"},[a("span",{staticClass:"token punctuation"},[t._v("</")]),t._v("dependency")]),a("span",{staticClass:"token punctuation"},[t._v(">")])])])])]),a("h3",{attrs:{id:"gradle"}},[a("a",{attrs:{href:"#gradle","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Gradle")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[a("pre",{staticClass:"language-groovy"},[a("code",{staticClass:"language-groovy"},[a("span",{staticClass:"token comment"},[t._v("// https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher")]),t._v("\ntestImplementation "),a("span",{staticClass:"token string"},[t._v("'org.junit.platform:junit-platform-launcher:1.10.2'")]),t._v("\n\n"),a("span",{staticClass:"token comment"},[t._v("// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine")]),t._v("\ntestImplementation "),a("span",{staticClass:"token string"},[t._v("'org.junit.jupiter:junit-jupiter-engine:5.10.2'")])])])]),a("p",[t._v("После добавления к методу аннотации @Test в IDEA появляется кнопка play соответсвенно этот метод теперь можно запустить и его выполнит движок Junit. Если запустить класс то будут выполнены все тестовые методы из данного класса.")]),a("p",[t._v("Можно определять тестовые методы без модификатора (public, private, protected).")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@Test")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("someTest")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertTrue")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token boolean"},[t._v("true")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h2",{attrs:{id:"аннотации-junit-5"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D0%B8-junit-5","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотации JUnit 5")]),a("p",[t._v("JUnit 5 предлагает следующие аннотации для написания тестов.")]),a("table",[a("thead",[a("tr",[a("th",[t._v("Аннотации")]),a("th",[t._v("Описание")])])]),a("tbody",[a("tr",[a("td",[t._v("@BeforeEach")]),a("td",[t._v("Аннотированный метод будет запускаться перед каждым тестовым методом в тестовом классе.")])]),a("tr",[a("td",[t._v("@AfterEach")]),a("td",[t._v("Аннотированный метод будет запускаться после каждого тестового метода в тестовом классе.")])]),a("tr",[a("td",[t._v("@BeforeAll")]),a("td",[t._v("Аннотированный метод будет запущен перед всеми тестовыми методами в тестовом классе. Этот метод должен быть статическим.")])]),a("tr",[a("td",[t._v("@AfterAll")]),a("td",[t._v("Аннотированный метод будет запущен после всех тестовых методов в тестовом классе. Этот метод должен быть статическим.")])]),a("tr",[a("td",[t._v("@Test")]),a("td",[t._v("Он используется, чтобы пометить метод как тест junit.")])]),a("tr",[a("td",[t._v("@DisplayName")]),a("td",[t._v("Используется для предоставления любого настраиваемого отображаемого имени для тестового класса или тестового метода")])]),a("tr",[a("td",[t._v("@Disable")]),a("td",[t._v("Он используется для отключения или игнорирования тестового класса или тестового метода из набора тестов.")])]),a("tr",[a("td",[t._v("@Nested")]),a("td",[t._v("Используется для создания вложенных тестовых классов")])]),a("tr",[a("td",[t._v("@Tag")]),a("td",[t._v("Пометьте методы тестирования или классы тестов тегами для обнаружения и фильтрации тестов.")])]),a("tr",[a("td",[t._v("@TestFactory")]),a("td",[t._v("Отметить метод - это тестовая фабрика для динамических тестов.")])])])]),a("h3",{attrs:{id:"beforeall"}},[a("a",{attrs:{href:"#beforeall","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("@BeforeAll")]),a("p",[t._v("Аннотация @BoforeAll используются для указания о том, что аннотированный метод должен быть выполнен перед всеми @Test, @RepeatedTest, @ParameterizedTest и @TestFactory методами в текущем классе.")]),a("p",[t._v("По умолчанию тестовые методы будут выполняться в том же потоке, что и аннотированный @BeforeAll метод.")]),a("p",[t._v("Аннотированный @BeforeAll метод ДОЛЖЕН быть статическим методом в тестовом классе.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@BeforeAll")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("public")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("static")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("init")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token class-name"},[t._v("System")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("out"),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("println")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token string"},[t._v('"BeforeAll init() method called"')]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("p",[t._v("Или мы можем применить эту аннотацию к default методам интерфейса, если тестовый интерфейс или тестовый класс аннотированы с помощью @TestInstance(Lifecycle.PER_CLASS).")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@TestInstance")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("Lifecycle")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token constant"},[t._v("PER_CLASS")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("interface")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("TestLifecycleLogger")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n\n    "),a("span",{staticClass:"token annotation punctuation"},[t._v("@BeforeAll")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("default")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("beforeAllTests")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),a("span",{staticClass:"token comment"},[t._v("//")]),t._v("\n    "),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("p",[t._v("Если этого не сделать, JUnit выдаст ошибку времени выполнения типа JUnitException.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token class-name"},[a("span",{staticClass:"token namespace"},[t._v("org"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("junit"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("platform"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("commons"),a("span",{staticClass:"token punctuation"},[t._v(".")])]),t._v("JUnitException")]),a("span",{staticClass:"token operator"},[t._v(":")]),t._v(" \n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@BeforeAll")]),t._v(" method '"),a("span",{staticClass:"token keyword"},[t._v("public")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token class-name"},[a("span",{staticClass:"token namespace"},[t._v("com"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("howtodoinjava"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("junit5"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("examples"),a("span",{staticClass:"token punctuation"},[t._v(".")])]),t._v(" \nJUnit5AnnotationsExample")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("init")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("' must be "),a("span",{staticClass:"token keyword"},[t._v("static")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("\nat "),a("span",{staticClass:"token class-name"},[a("span",{staticClass:"token namespace"},[t._v("org"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("junit"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("jupiter"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("engine"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("descriptor"),a("span",{staticClass:"token punctuation"},[t._v(".")])]),t._v(" \nLifecycleMethodUtils")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("assertStatic")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("LifecycleMethodUtils")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("java"),a("span",{staticClass:"token operator"},[t._v(":")]),a("span",{staticClass:"token number"},[t._v("66")]),a("span",{staticClass:"token punctuation"},[t._v(")")])])])]),a("h4",{attrs:{id:"beforeall-в-родительском-и-дочернем-классах"}},[a("a",{attrs:{href:"#beforeall-%D0%B2-%D1%80%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%BC-%D0%B8-%D0%B4%D0%BE%D1%87%D0%B5%D1%80%D0%BD%D0%B5%D0%BC-%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D0%B0%D1%85","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("@BeforeAll в родительском и дочернем классах")]),a("p",[t._v("@BeforeAll методы наследуются от родительских классов (или интерфейсов), если они не скрыты или не переопределены. ")]),a("p",[t._v("Кроме того, @BeforeAll методы из родительских классов (или интерфейсов) будут выполняться перед @BeforeAll методами в дочерних классах.")]),a("h3",{attrs:{id:"beforeeach"}},[a("a",{attrs:{href:"#beforeeach","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("@BeforeEach")]),a("p",[t._v("Аннотация @BeforeEach используется для обозначения того, что аннотированный метод должен выполняться перед каждым методом @Test, @RepeatedTest, @ParameterizedTest, или @TestFactory в текущем классе.")]),a("p",[t._v("Аннотация JUnit 5 @BeforeEach является одним из методов жизненного цикла и заменяет аннотацию @Before в JUnit 4.")]),a("p",[t._v("По умолчанию тестовые методы будут выполняться в том же потоке, что и аннотированный @BeforeEach метод.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@BeforeEach")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("public")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("initEach")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n     "),a("span",{staticClass:"token comment"},[t._v("//test setup code")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@Test")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("succeedingTest")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token comment"},[t._v("//test code and assertions")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("p",[t._v("Аннотированный @BeforeEach метод НЕ ДОЛЖЕН быть статическим, иначе он вызовет ошибку времени выполнения.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@BeforeEach")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("public")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("static")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("initEach")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n     "),a("span",{staticClass:"token comment"},[t._v("//test setup code")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),a("span",{staticClass:"token comment"},[t._v("//Error")]),t._v("\n\n\n"),a("span",{staticClass:"token class-name"},[a("span",{staticClass:"token namespace"},[t._v("org"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("junit"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("platform"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("commons"),a("span",{staticClass:"token punctuation"},[t._v(".")])]),t._v("JUnitException")]),a("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token annotation punctuation"},[t._v("@BeforeEach")]),t._v(" method '"),a("span",{staticClass:"token keyword"},[t._v("public")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("static")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token class-name"},[a("span",{staticClass:"token namespace"},[t._v("com"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("howtodoinjava"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("junit5"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("examples"),a("span",{staticClass:"token punctuation"},[t._v(".")])]),t._v(" JUnit5AnnotationsExample")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("initEach")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("' must not be "),a("span",{staticClass:"token keyword"},[t._v("static")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("\nat "),a("span",{staticClass:"token class-name"},[a("span",{staticClass:"token namespace"},[t._v("org"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("junit"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("jupiter"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("engine"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("descriptor"),a("span",{staticClass:"token punctuation"},[t._v(".")])]),t._v(" LifecycleMethodUtils")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("assertNonStatic")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("LifecycleMethodUtils")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("java"),a("span",{staticClass:"token operator"},[t._v(":")]),a("span",{staticClass:"token number"},[t._v("73")]),a("span",{staticClass:"token punctuation"},[t._v(")")])])])]),a("h4",{attrs:{id:"beforeeach-в-родительском-и-дочернем-классах"}},[a("a",{attrs:{href:"#beforeeach-%D0%B2-%D1%80%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%BE%D0%BC-%D0%B8-%D0%B4%D0%BE%D1%87%D0%B5%D1%80%D0%BD%D0%B5%D0%BC-%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D0%B0%D1%85","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("@BeforeEach в родительском и дочернем классах")]),a("p",[t._v("Метод @BeforeEach наследуется от родительских классов (или интерфейсов) до тех пор, пока они не скрыты или не  переопределены. ")]),a("p",[t._v("Кроме того, каждый метод с аннотацией @Before из родительских классов (или интерфейсов) будет выполняться перед каждым методом с аннотацией @Before в дочерних классах.")]),a("h2",{attrs:{id:"parameterizedtest"}},[a("a",{attrs:{href:"#parameterizedtest","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("@ParameterizedTest")]),a("p",[t._v("Используется, чтобы выполнить тест несколько раз, но с разными аргументами. ")]),a("ol",[a("li",[t._v("Включите зависимость junit-jupiter-params, чтобы использовать параметризованные тесты.")])]),a("p",[t._v("Последнюю версию можно найти по этой ссылке "),a("a",{attrs:{href:"https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params")]),t._v(".")]),a("p",[t._v("pom.xml")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token generics"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("dependency"),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("\n    "),a("span",{staticClass:"token generics"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("groupId"),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("org"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("junit"),a("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("jupiter"),a("span",{staticClass:"token operator"},[t._v("<")]),a("span",{staticClass:"token operator"},[t._v("/")]),t._v("groupId"),a("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n    "),a("span",{staticClass:"token generics"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("artifactId"),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("junit"),a("span",{staticClass:"token operator"},[t._v("-")]),t._v("jupiter"),a("span",{staticClass:"token operator"},[t._v("-")]),t._v("params"),a("span",{staticClass:"token operator"},[t._v("<")]),a("span",{staticClass:"token operator"},[t._v("/")]),t._v("artifactId"),a("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n    "),a("span",{staticClass:"token generics"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("version"),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("$"),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("junit"),a("span",{staticClass:"token operator"},[t._v("-")]),t._v("version"),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token operator"},[t._v("<")]),a("span",{staticClass:"token operator"},[t._v("/")]),t._v("version"),a("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n    "),a("span",{staticClass:"token generics"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),t._v("scope"),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v("test"),a("span",{staticClass:"token operator"},[t._v("<")]),a("span",{staticClass:"token operator"},[t._v("/")]),t._v("scope"),a("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n"),a("span",{staticClass:"token operator"},[t._v("<")]),a("span",{staticClass:"token operator"},[t._v("/")]),t._v("dependency"),a("span",{staticClass:"token operator"},[t._v(">")])])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Нам не нужно использовать аннотацию @Test, вместо этого в таких тестах используется только аннотация @ParameterizedTest.\nМы должны объявить по крайней мере один источник аргументов, предоставляющий аргументы для каждого вызова, которые будут использоваться в тестовом методе.")])]),a("p",[t._v("В данном примере testPalindrome будет вызываться 2 раза для каждой строки, указанной в аннотации @ValueSource. Мы получаем доступ к аргументу, используя параметр word метода.")]),a("p",[t._v("Используйте аргумент name в аннотации @ParameterizedTest, чтобы настроить отображаемое сообщение.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token keyword"},[t._v("public")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("ParameterizedTests")]),t._v(" \n"),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("public")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("boolean")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("isPalindrome")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" s"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),a("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" s "),a("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("null")]),t._v(" "),a("span",{staticClass:"token operator"},[t._v("?")]),t._v(" "),a("span",{staticClass:"token boolean"},[t._v("false")]),t._v(" "),a("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("StringUtils")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("reverse")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("s"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("equals")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("s"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    \n    "),a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("name "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"{index} - {0} is a palindrome"')]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),a("span",{staticClass:"token annotation punctuation"},[t._v("@ValueSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("strings "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"12321"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"pop"')]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testPalindrome")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" word"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),a("span",{staticClass:"token function"},[t._v("assertTrue")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token function"},[t._v("isPalindrome")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("word"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h3",{attrs:{id:"источники-тестовых-аргументов"}},[a("a",{attrs:{href:"#%D0%B8%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA%D0%B8-%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2%D1%8B%D1%85-%D0%B0%D1%80%D0%B3%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%BE%D0%B2","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Источники тестовых аргументов")]),a("h4",{attrs:{id:"аннотация-valuesource"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F-valuesource","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотация @ValueSource")]),a("p",[t._v("Используйте @ValueSource для простых буквальных значений, таких как примитивы и строки.")]),a("p",[t._v("Она определяет один массив значений и может использоваться только для предоставления одного аргумента для каждого параметризованного вызова теста.")]),a("p",[t._v("Java поддерживает автобоксирование, поэтому мы также можем использовать литералы в их классах-оболочках.")]),a("p",[t._v("Мы не можем передавать null в качестве аргумента даже для типов String и Class.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@ValueSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("ints "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("1")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("2")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("3")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testMethod")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token keyword"},[t._v("int")]),t._v(" argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token comment"},[t._v("//test code")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@ValueSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("ints "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("1")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("2")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("3")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testMethodWithAutoboxing")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("Integer")]),t._v(" argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token comment"},[t._v("//test code")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h4",{attrs:{id:"аннотация-nullsource"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F-nullsource","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотация @NullSource")]),a("p",[t._v("Она предоставляет единственный null аргумент методу, аннотированному @ParameterizedTest.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@NullSource")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testMethodNullSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("Integer")]),t._v(" argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertTrue")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("argument "),a("span",{staticClass:"token operator"},[t._v("==")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("null")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h4",{attrs:{id:"аннотация-emptysource"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F-emptysource","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотация @EmptySource")]),a("p",[t._v("Она предоставляет метод, аннотированный @ParameterizedTest, с единственным пустым аргументом следующих типов:")]),a("p",[t._v("java.lang.String")]),a("p",[t._v("java.util.List")]),a("p",[t._v("java.util.Set")]),a("p",[t._v("java.util.Map")]),a("p",[t._v("примитивные массивы (например, int [])")]),a("p",[t._v("массивы объектов (например, String [])")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@EmptySource")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testMethodEmptySource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertTrue")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("StringUtils")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("isEmpty")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h4",{attrs:{id:"аннотация-nullandemptysource"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F-nullandemptysource","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотация @NullAndEmptySource")]),a("p",[t._v("Она сочетает в себе функциональность @NullSource и @EmptySource. В данном примере тестовый метод будет вызываться два раза - сначала со значением null, а затем со значением empty.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@NullAndEmptySource")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testMethodNullAndEmptySource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertTrue")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("StringUtils")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("isEmpty")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h5",{attrs:{id:"проверка-null-и-non-null-значений-в-одном-тесте"}},[a("a",{attrs:{href:"#%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0-null-%D0%B8-non-null-%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B9-%D0%B2-%D0%BE%D0%B4%D0%BD%D0%BE%D0%BC-%D1%82%D0%B5%D1%81%D1%82%D0%B5","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Проверка null и non-null значений в одном тесте")]),a("p",[t._v("Мы уже знаем, что аннотация @ValueSource не поддерживает значение null.")]),a("p",[t._v("Таким образом, используя @NullSource и @EmptySource в аннотации @ValueSource, мы можем тестировать null, non-null и пустые значения в одном и том же тесте.")]),a("h4",{attrs:{id:"аннотация-enumsource"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F-enumsource","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотация @EnumSource")]),a("p",[t._v("Это удобный способ использования Enum констант. Метод тестирования будет вызываться для каждой константы перечисления за раз.")]),a("p",[t._v("В данном примере тестовый метод будет вызываться 4 раза, по одному разу для каждой Enum константы.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token keyword"},[t._v("enum")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Direction")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token constant"},[t._v("EAST")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token constant"},[t._v("WEST")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token constant"},[t._v("NORTH")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token constant"},[t._v("SOUTH")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@EnumSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("Direction")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token keyword"},[t._v("class")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testWithEnumSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("Direction")]),t._v(" d"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertNotNull")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("d"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h4",{attrs:{id:"аннотация-methodsource"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F-methodsource","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотация @MethodSource")]),a("p",[t._v("Она используется для ссылки на один или несколько фабричных методов тестового класса или внешних классов. Фабричный метод должен генерировать поток аргументов, где каждый аргумент в потоке будет использоваться методом, аннотированным @ParameterizedTest.")]),a("p",[t._v("Фабричный метод должен быть static, если тестовый класс не аннотирован с помощью @TestInstance(Lifecycle.PER_CLASS).")]),a("p",[t._v("Кроме того, фабричный метод не должен принимать аргументы.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@MethodSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token string"},[t._v('"argsProviderFactory"')]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testWithMethodSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertNotNull")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),a("span",{staticClass:"token keyword"},[t._v("static")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Stream")]),a("span",{staticClass:"token generics"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),a("span",{staticClass:"token class-name"},[t._v("String")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v(" "),a("span",{staticClass:"token function"},[t._v("argsProviderFactory")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Stream")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token string"},[t._v('"alex"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"brian"')]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("p",[t._v("Если мы явно не предоставим имя фабричного метода через @MethodSource, JUnit будет искать фабричный метод, имя которого по умолчанию совпадает с именем текущего метода с аннотацией @ParameterizedTest.")]),a("p",[t._v("Поэтому, в примере, если мы не предоставим имя метода argsProviderFactory в аннотации @MethodSource, Junit будет искать имя метода testWithMethodSource с возвращаемым типом "),a("code",{staticClass:"language-inline-text"},[t._v("Stream<String>")]),t._v(".")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@MethodSource")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testWithMethodSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertNotNull")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),a("span",{staticClass:"token keyword"},[t._v("static")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Stream")]),a("span",{staticClass:"token generics"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),a("span",{staticClass:"token class-name"},[t._v("String")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testWithMethodSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Stream")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token string"},[t._v('"alex"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"brian"')]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("p",[t._v("Также поддерживаются потоки для примитивных типов (DoubleStream, IntStream и LongStream).")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@MethodSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token string"},[t._v('"argsProviderFactory"')]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testWithMethodSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token keyword"},[t._v("int")]),t._v(" argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertNotEquals")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("9")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" argument"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),a("span",{staticClass:"token keyword"},[t._v("static")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("IntStream")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("argsProviderFactory")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("IntStream")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("range")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("0")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("10")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h4",{attrs:{id:"аннотация-csvsource"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F-csvsource","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотация @CsvSource")]),a("p",[t._v("Эта аннотация позволяет нам задавать списки аргументов как значения, разделенные запятыми. Каждый CSV токен представляет собой строку CSV и приводит к одному вызову параметризованного теста.")]),a("p",[t._v("Задайте для свойства ignoreLeadingAndTrailingWhitespace значение true или false, указывающее на то, что Junit должен принимать или игнорировать пробелы в CSV токенах.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@CsvSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("value "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token string"},[t._v('"alex, 30"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),a("span",{staticClass:"token string"},[t._v('"brian, 35"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),a("span",{staticClass:"token string"},[t._v('"charles, 40"')]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" ignoreLeadingAndTrailingWhitespace "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token boolean"},[t._v("true")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testWithCsvSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" name"),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("int")]),t._v(" age"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertNotNull")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("name"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertTrue")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("age "),a("span",{staticClass:"token operator"},[t._v(">")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("0")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h4",{attrs:{id:"аннотация-csvfilesource"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F-csvfilesource","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотация @CsvFileSource")]),a("p",[t._v("Эта аннотация очень похожа на @CsvSource за исключением того, что мы читаем токены CSV из файла вместо чтения токенов в исходном тексте. CSV файл можно прочитать по classpath или из локальной файловой системы.")]),a("p",[t._v("Разделителем по умолчанию является запятая (,), но мы можем использовать другой символ, установив атрибут разделителя.")]),a("p",[t._v("Обратите внимание, что любая строка, начинающаяся с символа #, будет интерпретироваться как комментарий и игнорироваться.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@CsvFileSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("resources "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"employeeData.csv"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" numLinesToSkip "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("0")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testWithCsvFileSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" name"),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("int")]),t._v(" age"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertNotNull")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("name"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertTrue")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("age "),a("span",{staticClass:"token operator"},[t._v(">")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("0")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h4",{attrs:{id:"аннотация-argumentssource"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F-argumentssource","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотация @ArgumentsSource")]),a("p",[t._v("Аннотацию @ArgumentsSource можно использовать для указания настраиваемого многоразового поставщика аргументов ArgumentsProvider.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("name "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"{index} - {0} is older than 40"')]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@ArgumentsSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("EmployeesArgumentsProvider")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token keyword"},[t._v("class")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("isEmployeeAgeGreaterThan40")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("Employee")]),t._v(" e"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertTrue")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("Period")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("between")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("e"),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("getDob")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("now")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("get")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("ChronoUnit")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token constant"},[t._v("YEARS")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token operator"},[t._v(">")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("40")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),a("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("EmployeesArgumentsProvider")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("implements")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("ArgumentsProvider")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token annotation punctuation"},[t._v("@Override")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("public")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Stream")]),a("span",{staticClass:"token generics"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),a("span",{staticClass:"token operator"},[t._v("?")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("extends")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Arguments")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v(" "),a("span",{staticClass:"token function"},[t._v("provideArguments")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("ExtensionContext")]),t._v(" context"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),a("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Stream")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("\n          "),a("span",{staticClass:"token class-name"},[t._v("Arguments")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Employee")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("1")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"Alex"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("1980")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("2")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("3")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n          "),a("span",{staticClass:"token class-name"},[t._v("Arguments")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Employee")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("2")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"Brian"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("1979")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("2")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("3")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n          "),a("span",{staticClass:"token class-name"},[t._v("Arguments")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Employee")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("3")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"Charles"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("1978")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("2")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("3")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n        "),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h3",{attrs:{id:"параметризованные-тесты-с-несколькими-аргументами"}},[a("a",{attrs:{href:"#%D0%BF%D0%B0%D1%80%D0%B0%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5-%D1%82%D0%B5%D1%81%D1%82%D1%8B-%D1%81-%D0%BD%D0%B5%D1%81%D0%BA%D0%BE%D0%BB%D1%8C%D0%BA%D0%B8%D0%BC%D0%B8-%D0%B0%D1%80%D0%B3%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D0%BC%D0%B8","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Параметризованные тесты с несколькими аргументами")]),a("p",[t._v("Чтобы написать тесты, которые могут использовать несколько аргументов, мы можем использовать следующие аннотации:")]),a("h4",{attrs:{id:"аннотация-csvsource-1"}},[a("a",{attrs:{href:"#%D0%B0%D0%BD%D0%BD%D0%BE%D1%82%D0%B0%D1%86%D0%B8%D1%8F-csvsource-1","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Аннотация @CsvSource")]),a("p",[t._v("Как показано в предыдущем разделе 3.7, с помощью аннотации @CsvSource мы можем предоставить множество литералов и простых типов аргументов.")]),a("p",[t._v("Нам нужно предоставить все аргументы в одном токене CSV, а затем определить соответствующие аргументы метода.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@CsvSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token string"},[t._v('"alex, 30, HR, Active"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),a("span",{staticClass:"token string"},[t._v('"brian, 35, Technology, Active"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),a("span",{staticClass:"token string"},[t._v('"charles, 40, Finance, Purged"')]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testWithCsvSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" name"),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("int")]),t._v(" age"),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" department"),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("String")]),t._v(" status"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token comment"},[t._v("//test code")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h4",{attrs:{id:"интерфейс-argumentsprovider"}},[a("a",{attrs:{href:"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D1%84%D0%B5%D0%B9%D1%81-argumentsprovider","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Интерфейс ArgumentsProvider")]),a("p",[t._v("Чтобы предоставить несколько тестовых аргументов сложных или настраиваемых типов, мы должны использовать аннотацию @ArgumentsSource с аннотацией ArgumentsProvider.")]),a("p",[t._v("В примере мы передаем три аргумента метода тестирования testArgumentsSource, типов Employee, LocalDateи enum константы типа Direction.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"java"}},[a("pre",{staticClass:"language-java"},[a("code",{staticClass:"language-java"},[a("span",{staticClass:"token annotation punctuation"},[t._v("@ParameterizedTest")]),t._v("\n"),a("span",{staticClass:"token annotation punctuation"},[t._v("@ArgumentsSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("EmployeesArgumentsProvider")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token keyword"},[t._v("class")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("void")]),t._v(" "),a("span",{staticClass:"token function"},[t._v("testArgumentsSource")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("Employee")]),t._v(" e"),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),t._v(" date"),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Direction")]),t._v(" d"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertTrue")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("Period")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("between")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("e"),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("getDob")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("now")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("get")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("ChronoUnit")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token constant"},[t._v("YEARS")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token operator"},[t._v(">")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("40")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertNotNull")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("date"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),a("span",{staticClass:"token function"},[t._v("assertNotNull")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("d"),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),a("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("EmployeesArgumentsProvider")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("implements")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("ArgumentsProvider")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),a("span",{staticClass:"token annotation punctuation"},[t._v("@Override")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("public")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Stream")]),a("span",{staticClass:"token generics"},[a("span",{staticClass:"token punctuation"},[t._v("<")]),a("span",{staticClass:"token operator"},[t._v("?")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("extends")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Arguments")]),a("span",{staticClass:"token punctuation"},[t._v(">")])]),t._v(" "),a("span",{staticClass:"token function"},[t._v("provideArguments")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token class-name"},[t._v("ExtensionContext")]),t._v(" context"),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),a("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Stream")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("\n          "),a("span",{staticClass:"token class-name"},[t._v("Arguments")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Employee")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("1")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"Alex"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" \n                  "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("1980")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("2")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("3")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("now")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Direction")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token constant"},[t._v("EAST")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n          "),a("span",{staticClass:"token class-name"},[t._v("Arguments")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Employee")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("2")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"Brian"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" \n                  "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("1979")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("2")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("3")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("now")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Direction")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token constant"},[t._v("NORTH")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n          "),a("span",{staticClass:"token class-name"},[t._v("Arguments")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token keyword"},[t._v("new")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Employee")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("3")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"Charles"')]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" \n                  "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("of")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token number"},[t._v("1978")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("2")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("3")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("LocalDate")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token function"},[t._v("now")]),a("span",{staticClass:"token punctuation"},[t._v("(")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token class-name"},[t._v("Direction")]),a("span",{staticClass:"token punctuation"},[t._v(".")]),a("span",{staticClass:"token constant"},[t._v("SOUTH")]),a("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n        "),a("span",{staticClass:"token punctuation"},[t._v(")")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n    "),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("h2",{attrs:{id:"build-tool-support"}},[a("a",{attrs:{href:"#build-tool-support","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Build tool support")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[a("pre",{staticClass:"language-groovy"},[a("code",{staticClass:"language-groovy"},[t._v("test "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    useJUnitPlatform "),a("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        includeTags "),a("span",{staticClass:"token string"},[t._v("'fast'")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v("'smoke'")]),t._v("\n        excludeTags "),a("span",{staticClass:"token string"},[t._v("'slow'")]),a("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),a("span",{staticClass:"token string"},[t._v("'ci'")]),t._v("\n\n        include "),a("span",{staticClass:"token string"},[t._v("'org/foo/**'")]),t._v("\n        exclude "),a("span",{staticClass:"token string"},[t._v("'org/boo/**'")]),t._v("\n    "),a("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),a("span",{staticClass:"token punctuation"},[t._v("}")])])])]),a("div",{staticClass:"youtube-embed"},[a("div",{staticStyle:{width:"100%",margin:"0 auto"}},[a("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[a("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/RAOAcq97KZM",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),a("div",{staticClass:"youtube-embed"},[a("div",{staticStyle:{width:"100%",margin:"0 auto"}},[a("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[a("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/w1ey2zjf3-s",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),a("div",{staticClass:"youtube-embed"},[a("div",{staticStyle:{width:"100%",margin:"0 auto"}},[a("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[a("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/DAszLeWMsqU",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),a("div",{staticClass:"youtube-embed"},[a("div",{staticStyle:{width:"100%",margin:"0 auto"}},[a("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[a("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/751gMXH-lEE",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),a("div",{staticClass:"youtube-embed"},[a("div",{staticStyle:{width:"100%",margin:"0 auto"}},[a("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[a("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/r-8EGXMFJaw",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),a("div",{staticClass:"youtube-embed"},[a("div",{staticStyle:{width:"100%",margin:"0 auto"}},[a("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[a("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/ZIkIUCyJBGU",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),a("div",{staticClass:"youtube-embed"},[a("div",{staticStyle:{width:"100%",margin:"0 auto"}},[a("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[a("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/3pOjh6O7-cg",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),a("div",{staticClass:"youtube-embed"},[a("div",{staticStyle:{width:"100%",margin:"0 auto"}},[a("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[a("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/W1INR0I3FCo",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])])])}),[],!1,null,null,null);"function"==typeof p&&p(C),"function"==typeof _&&_(C);a.default=C.exports}}]);