(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{TfYt:function(e,t,o){"use strict";o.r(t);var r=o("KHd+"),i=o("UQSp"),s=o("oCYn");function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}s.a.config.optionMergeStrategies;var a={VueRemarkRoot:i.a},l=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(a).forEach((function(e){"object"===n(a[e])&&"function"==typeof a[e].render||"function"==typeof a[e]&&"function"==typeof a[e].options.render?t[e]=a[e]:o[e]=function(){return a[e]}}))},c=s.a.config.optionMergeStrategies,p="__vueRemarkFrontMatter",f={excerpt:null,title:"Метрики тестирования",category:"manual",description:"Метрики тестирования",tags:["Тестовая документация"],icon:"fas fa-bug",image:"null",date:"2022-05-13T00:00:00.000Z",keywords:"qa, Тестовая документация",order:27,links:[{items:[{title:"13. Тестовая документация",link:"/testovaya-dokumentacziya/"},{title:"Тестовая политика и стратегия",link:"/testovaya-politika-i-strategiya/"},{title:"Международные стандарты тестовой документации",link:"/mezhdunarodnye-standarty-testovoj-dokumentaczii/"},{title:"Master Test Plan и тестовые планы для каждого уровня",link:"/master-test-plan-i-testovye-plany-dlya-kazhdogo-urovnya/"},{title:"Понятие Test Case и Test Suite",link:"/ponyatie-test-case-i-test-suite/"},{title:"Понятие Test Basis, Test Condition и Test Procedure",link:"/ponyatie-test-basis-test-condition-i-test-procedure/"},{title:"Check-list, как представитель Experience-Based",link:"/check-list-kak-predstavitel-experience-based/"},{title:"Bug Report",link:"/bug-report/"},{title:"Summary Report",link:"/summary-report/"},{title:"Requirements Tracebility Matrix",link:"/requirements-tracebility-matrix/"},{title:"Test Data Tables",link:"/test-data-tables/"},{title:"Test Scenario",link:"/test-scenario/"},{title:"External Test Reports",link:"/external-test-reports/"},{title:"Критерии приемки",link:"/kriterii-priemki/"},{title:"Метрики тестирования",link:"/metriki-testirovaniya/"},{title:"Требования",link:"/trebovaniya/"},{title:"Тестовый оракул",link:"/testovyj-orakul/"}]}]};var u=function(e){e.options[p]&&(e.options[p]=f),s.a.util.defineReactive(e.options,p,f),e.options.computed=c.computed({$frontmatter:function(){return e.options[p]}},e.options.computed)},d=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("VueRemarkRoot",[t("h2",{attrs:{id:"метрики-тестирования-software-test-metrics"}},[t("a",{attrs:{href:"#%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D0%BA%D0%B8-%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-software-test-metrics","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),e._v("Метрики тестирования (Software Test Metrics)")]),t("p",[t("em",[e._v("Метрика (metric): Шкала измерений и метод, используемый для измерений (ISO 14598)")])]),t("p",[e._v("“Вы не можете контролировать то, что не можете измерить” - Том Демакро.")]),t("p",[e._v("Основная цель тестирования заключается в предоставлении информации, необходимой для управления рисками. Чтобы контролировать и управлять тестированием, а также предоставлять своевременную информацию заинтересованным сторонам, необходимы эффективные измерения процесса тестирования. Для измерения процесса тестирования нужно определить, какая информация должна быть предоставлена, как ее получить и как она должна быть представлена. Таким образом, для всех действий тестирования необходимо определить и использовать метрики, а также предоставить показатели измерений, как для продуктов, так и для процессов.")]),t("p",[e._v("Метрики тестирования программного обеспечения подразделяются на два типа:")]),t("ul",[t("li",[t("p",[t("strong",[e._v("Метрики процесса")]),e._v(" (Process metrics): используются в процессе подготовки и выполнения тестирования.")]),t("ul",[t("li",[t("p",[t("strong",[e._v("Продуктивность подготовки тест-кейсов")]),e._v(" (Test Case Preparation Productivity): используется для расчета количества подготовленных тест-кейсов и усилий (Effort), затраченных на их подготовку.")]),t("p",[t("em",[e._v("Test Case Preparation Productivity = (No of Test Case) / (Effort spent for Test Case Preparation)")])])]),t("li",[t("p",[t("strong",[e._v("Охват тестового дизайна")]),e._v(" (Test Design Coverage): процент покрытия тест-кейсами требований.")]),t("p",[t("em",[e._v("Test Design Coverage = ((Total number of requirements mapped to test cases) / (Total number of requirements)*100")])])]),t("li",[t("p",[t("strong",[e._v("Продуктивность выполнения тестов")]),e._v(" (Test Execution Productivity): определяет количество тест-кейсов, которые могут быть выполнены в час.")]),t("p",[t("em",[e._v("Test Execution Productivity = (No of Test cases executed) / (Effort spent for execution of test cases)")])])]),t("li",[t("p",[t("strong",[e._v("Покрытие выполненных тестов")]),e._v(" (Test Execution Coverage): предназначено для измерения количества выполненных тест-кейсов по сравнению с количеством запланированных тест-кейсов.")]),t("p",[t("em",[e._v("Test Execution Coverage = (Total no. of test cases executed / Total no. of test cases planned to execute)*100")])])]),t("li",[t("p",[t("strong",[e._v("Успешные тест-кейсы")]),e._v(" (Test Cases Passed): для измерения процента пройденных успешно тест-кейсов.")]),t("p",[t("em",[e._v("Test Cases Pass = (Total no. of test cases passed) / (Total no. of test cases executed) * 100")])])]),t("li",[t("p",[t("strong",[e._v("Неуспешные тест-кейсы")]),e._v(" (Test Cases Failed): для измерения процента заваленных тест-кейсов.")]),t("p",[t("em",[e._v("Test Cases Failed = (Total no. of test cases failed) / (Total no. of test cases executed) * 100")])])]),t("li",[t("p",[t("strong",[e._v("Заблокированные тест-кейсы")]),e._v(" (Test Cases Blocked): для измерения процента блокированных тест-кейсов.")]),t("p",[t("em",[e._v("Test Cases Blocked = (Total no. of test cases blocked) / (Total no. of test cases executed) * 100")])])])])]),t("li",[t("p",[t("strong",[e._v("Метрики продукта")]),e._v(" (Product metrics):")]),t("ul",[t("li",[t("p",[t("strong",[e._v("Уровень обнаружения ошибок")]),e._v(" (Error Discovery Rate): для определения эффективности тест-кейсов.")]),t("p",[t("em",[e._v("Error Discovery Rate = (Total number of defects found /Total no. of test cases executed)*100")])])]),t("li",[t("p",[t("strong",[e._v("Процент выявления дефектов")]),e._v(" (Defect Detection Percentage (DDP)): "),t("em",[e._v("Количество дефектов, выявленных в фазе тестирования, поделенное на число дефектов, найденных в этой фазе тестирования, а также во всех последующих фазах. См. также ускользнувший дефект. (ISTQB)")])])]),t("li",[t("p",[t("strong",[e._v("Уровень исправления дефектов")]),e._v(" (Defect Fix Rate): помогает узнать качество сборки (build) с точки зрения устранения дефектов.")]),t("p",[t("em",[e._v("Defect Fix Rate = (Total no of Defects reported as fixed - Total no. of defects reopened) / (Total no of Defects reported as fixed + Total no. of new Bugs due to fix)*100")])])]),t("li",[t("p",[t("strong",[e._v("Плотность дефектов")]),e._v(" (Defect Density): "),t("em",[e._v("количество дефектов, обнаруженных в компоненте или системе, поделенное на размер компонента или системы (выраженный в стандартных единицах измерения, например строках кода, числе классов или функций). (ISTQB)")])]),t("p",[t("em",[e._v("Defect Density = Total no. of defects identified / Actual Size (requirements)")])])]),t("li",[t("p",[t("strong",[e._v("Утечка дефектов")]),e._v(" (Defect Leakage): используется для проверки эффективности процесса тестирования перед UAT.")]),t("p",[t("em",[e._v("Defect Leakage = ((Total no. of defects found in UAT)/(Total no. of defects found before UAT)) * 100")])])]),t("li",[t("p",[t("strong",[e._v("Эффективность устранения дефектов")]),e._v(" (Defect Removal Efficiency): позволяет сравнивать общую (дефекты, обнаруженные до и после поставки) эффективность устранения дефектов.")]),t("p",[t("em",[e._v("Defect Removal Efficiency = ((Total no. of defects found pre-delivery) /( (Total no. of defects found pre-delivery )+ (Total no. of defects found post-delivery)))* 100")])])])])])]),t("p",[t("strong",[e._v("Тестовое покрытие (Test Coverage)")])]),t("p",[e._v("Тестовое Покрытие - это одна из метрик оценки качества тестирования, представляющая из себя плотность покрытия тестами требований либо исполняемого кода. Сложность современного ПО и инфраструктуры сделало невыполнимой задачу проведения тестирования со 100% тестовым покрытием. Поэтому для разработки набора тестов, обеспечивающего более-менее высокий уровень покрытия можно использовать специальные инструменты либо техники тест дизайна.")]),t("p",[e._v("Существуют следующие подходы к оценке и измерению тестового покрытия:")]),t("ul",[t("li",[t("a",{attrs:{href:"http://www.protesting.ru/testing/testcoverage.html#requirements",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Покрытие требований (Requirements Coverage)")]),e._v(" - оценка покрытия тестами функциональных и нефункциональных требований к продукту путем построения матриц трассировки (traceability matrix).")]),t("li",[t("a",{attrs:{href:"http://www.protesting.ru/testing/testcoverage.html#code",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Покрытие кода (Code Coverage)")]),e._v(" - оценка покрытия исполняемого кода тестами, путем отслеживания непроверенных в процессе тестирования частей ПО.")]),t("li",[t("a",{attrs:{href:"http://www.protesting.ru/testing/testcoverage.html#flow",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Тестовое покрытие на базе анализа потока управления")]),e._v(" - это одна из техник тестирования белого ящика, основанная на определении путей выполнения кода программного модуля и создания выполняемых тест кейсов для покрытия этих путей. ")])]),t("p",[e._v("Различия:\\\nМетод покрытия требований сосредоточен на проверке соответствия набора проводимых тестов требованиям к продукту, в то время как анализ покрытия кода - на полноте проверки тестами разработанной части продукта (исходного кода), а анализ потока управления - на прохождении путей в графе или модели выполнения тестируемых функций (Control Flow Graph).")]),t("p",[e._v("Ограничения:")]),t("ul",[t("li",[e._v("Метод оценки покрытия кода не выявит нереализованные требования, так как работает не с конечным продуктом, а с существующим исходным кодом.")]),t("li",[e._v("Метод покрытия требований может оставить непроверенными некоторые участки кода, потому что не учитывает конечную реализацию.")])]),t("p",[t("em",[t("strong",[e._v("Альтернативное мнение")])])]),t("p",[e._v("Покрытие кода - совершенно бесполезная метрика. Не существует «правильного» показателя. Это вопрос-ловушка. У вас может быть проект с близким к 100% покрытием кода, в котором по-прежнему остаются баги и проблемы. В реальности нужно следить за другими метриками - хорошо известными показателям CTM (Codepipes testing Metrics).")]),t("p",[t("img",{attrs:{src:"https://lh5.googleusercontent.com/ycWdGw8XfGW_7xun6DdJ2HLdCP5FaAIht4em7L99M4Pu58zUki4bgk6V0o4VjnGCxPcxyZFsXKep5rwyJP-KVQa9daBeK0XdCUgOkSUvBsPJyLOTxnYOHunUBfvIOrgMuUeH7f61"}})]),t("ul",[t("li",[t("strong",[e._v("PDWT")]),e._v(" (процент разработчиков, пишущих тесты) - вероятно, самый важный показатель. Нет смысла говорить об антипаттернах тестирования ПО, если у вас вообще нет тестов. Все разработчики в команде должны писать тесты. Любую новую функцию можно объявлять сделанной только если она сопровождается одним или несколькими тестами.")]),t("li",[t("strong",[e._v("PBCNT")]),e._v(" (процент багов, приводящих к созданию новых тестов). Каждый баг в продакшне - отличный повод для написания нового теста, проверяющего соответствующее исправление. Любой баг должен появиться в продакшне не более одного раза. Если ваш проект страдает от появления повторных багов даже после их первоначального «исправления», то команда действительно выиграет от использования этой метрики.")]),t("li",[t("strong",[e._v("PTVB")]),e._v(" (процент тестов, которые проверяют поведение, а не реализацию). Тесно связанные тесты пожирают массу времени при рефакторинге основного кода.")]),t("li",[t("strong",[e._v("PTD")]),e._v(" (процент детерминированных тестов от общего числа). Тесты должны завершаться ошибкой только в том случае, если что-то не так с бизнес-кодом. Если тесты периодически ломаются без видимой причины - это огромная проблема.\\\n\\\nЕсли после прочтения о метриках вы по-прежнему настаиваете на установке жесткого показателя для покрытия кода, я дам вам число 20%. Это число должно использоваться как эмпирическое правило, основанное на законе Парето. 20% вашего кода вызывает 80% ваших ошибок")])]),t("p",[e._v("Источники:")]),t("ul",[t("li",[t("a",{attrs:{href:"https://docs.cntd.ru/document/1200134996",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("ГОСТ Р 56920-2016/ISO/IEC/IEEE 29119-1:2013")])]),t("li",[t("a",{attrs:{href:"https://www.softwaretestingmaterial.com/test-metrics/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Software Test Metrics - Product Metrics & Process Metrics")])]),t("li",[t("a",{attrs:{href:"https://habr.com/ru/post/358178/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Антипаттерны тестирования ПО")])])]),t("p",[e._v("Доп. материал:")]),t("ul",[t("li",[t("a",{attrs:{href:"https://blog.gurock.com/qa-metrics/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("What Metrics Should You Be Using?")])]),t("li",[t("a",{attrs:{href:"https://www.softwaretestinggenius.com/different-software-quality-metrics-used-by-expert-test-managers/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Different Software Quality Metrics used by Expert Test Managers")])]),t("li",[t("a",{attrs:{href:"https://hackernoon.com/code-coverage-how-to-measure-youve-done-enough-testing",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Code Coverage: How to Measure You've Done Enough Testing")])]),t("li",[t("a",{attrs:{href:"https://theqalead.com/topics/time-to-quality-concept-explained/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Understanding time to quality")])]),t("li",[t("div",{staticClass:"youtube-embed"},[t("div",{staticStyle:{width:"100%",margin:"0 auto"}},[t("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[t("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/OyCnB2LvAtQ",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])])]),t("li",[t("a",{attrs:{href:"https://habr.com/ru/post/546562/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Самый полный список метрик тестирования на русском языке")])]),t("li",[t("a",{attrs:{href:"https://testing.googleblog.com/2020/08/code-coverage-best-practices.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Code Coverage Best Practices")])]),t("li",[t("a",{attrs:{href:"https://intuit.ru/studies/courses/48/48/lecture/1430",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Лекция 4: Оценка оттестированности проекта: метрики и методика интегральной оценки")])]),t("li",[t("div",{staticClass:"youtube-embed"},[t("div",{staticStyle:{width:"100%",margin:"0 auto"}},[t("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[t("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/jqjJ256CZhk",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])])]),t("li",[t("div",{staticClass:"youtube-embed"},[t("div",{staticStyle:{width:"100%",margin:"0 auto"}},[t("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[t("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/zN-F71rEXh4",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])])]),t("li",[t("div",{staticClass:"youtube-embed"},[t("div",{staticStyle:{width:"100%",margin:"0 auto"}},[t("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[t("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/OyCnB2LvAtQ",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])])])])])}),[],!1,null,null,null);"function"==typeof l&&l(d),"function"==typeof u&&u(d);t.default=d.exports},UQSp:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render(e){return e("div",null,this.$slots.default)}}}}]);