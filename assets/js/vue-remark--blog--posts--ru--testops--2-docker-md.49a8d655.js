(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{GdVG:function(t,a,s){"use strict";s.r(a);var e=s("KHd+"),i=s("UQSp"),o=s("oCYn");function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}o.a.config.optionMergeStrategies;var n={VueRemarkRoot:i.a},l=function(t){var a=t.options.components=t.options.components||{},s=t.options.computed=t.options.computed||{};Object.keys(n).forEach((function(t){"object"===r(n[t])&&"function"==typeof n[t].render||"function"==typeof n[t]&&"function"==typeof n[t].options.render?a[t]=n[t]:s[t]=function(){return n[t]}}))},c=o.a.config.optionMergeStrategies,D="__vueRemarkFrontMatter",d={excerpt:null,title:"Docker",category:"testops",description:"Docker",tags:["Автоматизация тестирования"],icon:"fas fa-robot",image:"null",date:"2022-07-28T00:00:00.000Z",keywords:"qa, Автоматизация тестирования",order:2,links:[{items:[{title:"Микросервисная архитектура",link:"//mikroservisnaya-arhitektura//"},{title:"Docker",link:"/docker/"},{title:"Kubernetes",link:"/kubernetes/"},{title:"Linux",link:"/linux/"},{title:"Общие вопросы TestOps",link:"/obshhie-voprosy-test-ops/"}]}]};var g=function(t){t.options[D]&&(t.options[D]=d),o.a.util.defineReactive(t.options,D,d),t.options.computed=c.computed({$frontmatter:function(){return t.options[D]}},t.options.computed)},p=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("VueRemarkRoot",[a("p",[t._v("Docker - это средство упаковки (в контейнеры), доставки и запуска (запуск осуществляется одним и тем же образом, единый интерфейс) приложения.\nДокер - это история про виртуализацию, но не ту какую вам предоставляют виртуальные машины, которые разворачивают полноценную ОС внутри вашей. Главная задача Докера запустить приложение. ")]),a("h2",{attrs:{id:"базовые-понятия"}},[a("a",{attrs:{href:"#%D0%B1%D0%B0%D0%B7%D0%BE%D0%B2%D1%8B%D0%B5-%D0%BF%D0%BE%D0%BD%D1%8F%D1%82%D0%B8%D1%8F","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Базовые понятия")]),a("p",[t._v("Docker image - это сборка, говтовое к запуску приложение, но еще не запущеное.")]),a("p",[t._v("Docker container -  работающее приложение, созданное на базе имеджа.")]),a("p",[t._v("На основе одного образа можно создать много одинаковых контейнеров.\nНапример, нужно 10 реплик одного сервиса.")]),a("p",[t._v("Для контейнера образ является read only системой, он не может его изменить.")]),a("p",[t._v("Image - слоеный пирог, напрмиер image Ubuntu и возьмем его за базу и поставим туда Nginx и поставим туда mongo и поставим питон.")]),a("p",[t._v("Реестр имеджей - он находится локально там хранятся те images которые создали именно вы."),a("br"),t._v("\nТакже есть docker hub - там реестр всех имеджей, которые поддерживаются создателями докера но так же и те которые создавали другие люди.")]),a("h2",{attrs:{id:"посмотреть-images"}},[a("a",{attrs:{href:"#%D0%BF%D0%BE%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C-images","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Посмотреть images")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker images")])])]),a("h2",{attrs:{id:"посмотреть-запущенные-контейнеры"}},[a("a",{attrs:{href:"#%D0%BF%D0%BE%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B5%D1%82%D1%8C-%D0%B7%D0%B0%D0%BF%D1%83%D1%89%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D1%8B","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Посмотреть запущенные контейнеры")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker ps")])])]),a("p",[t._v("-a - посмотреть в том числ остановленные контейнеры\n-a -q - отобразить только id контейнера")]),a("h2",{attrs:{id:"создаем-свой-докер-образ"}},[a("a",{attrs:{href:"#%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%B5%D0%BC-%D1%81%D0%B2%D0%BE%D0%B9-%D0%B4%D0%BE%D0%BA%D0%B5%D1%80-%D0%BE%D0%B1%D1%80%D0%B0%D0%B7","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Создаем свой докер образ")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker build -t hello-world .")])])]),a("p",[t._v("docker build - команда для создания образа\n-t - тег, название образа\n. - путь к текущей директории (где находится приложение)")]),a("p",[t._v("Также нужно указать как именно нужно упаковать приложение, для этого создается Dockerfile.")]),a("p",[t._v("В Dockerfile нужно описать шаги для упаковки нашего приложения.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"docker"}},[a("pre",{staticClass:"language-docker"},[a("code",{staticClass:"language-docker"},[a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("FROM")]),t._v(" python:3.6 ")]),t._v("\n\n"),a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("RUN")]),t._v(" mkdir -p /usr/src/app/")]),t._v("\n"),a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("WORKDIR")]),t._v(" /usr/src/app/")]),t._v("\n\n"),a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("COPY")]),t._v(" . /usr/src/app/")]),t._v("\n\n"),a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("CMD")]),t._v(" ["),a("span",{staticClass:"token string"},[t._v('"python"')]),t._v(", "),a("span",{staticClass:"token string"},[t._v('"app.py"')]),t._v("]")])])])]),a("ul",[a("li",[t._v("FROM - базовый образ, через :(двоеточие) указывается тег")]),a("li",[t._v("RUN - указывает что нужно выполнить указанную команду")]),a("li",[t._v("WORKDIR - начальный каталог в который нужно перейти")]),a("li",[t._v("COPY - копирует содержимое из источника в целевую папкув контейнере")]),a("li",[t._v("CMD - указывает какие команды нужно выполнить когда мы запустим контейнер, запускает команды через shell ")]),a("li",[t._v("ENTRYPOINT - аналог CMD, но команды выполняются без shell оболочки")])]),a("h2",{attrs:{id:"запуск-контейнера"}},[a("a",{attrs:{href:"#%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B0","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Запуск контейнера")]),a("ul",[a("li",[t._v("запуск контейнера"),a("br"),t._v("\ndocker run <имя образа>")])]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker run hello-world")])])]),a("p",[t._v("Контейнер работает до тех пор пока работает приложение.")]),a("ul",[a("li",[t._v("задаем имя контейнера при запуске"),a("br"),t._v("\ndocker run "),a("strong",[t._v("--name")]),t._v(" <имя контейнера> <имя образа>")])]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker run --name hello hello-world")])])]),a("ul",[a("li",[t._v("запуск контейнера в фоне, чтобы можно было работать с консолью"),a("br"),t._v("\ndocker run --name <имя контейнера> "),a("strong",[t._v("-d")]),t._v(" <имя образа>")])]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker run --name hello -d hello-world")])])]),a("ul",[a("li",[t._v("запуск контейнера с автоудалением после остановки"),a("br"),t._v("\ndocker run --name <имя контейнера> -d "),a("strong",[t._v("--rm")]),t._v(" <имя образа>")])]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker run --name hello -d --rm hello-world")])])]),a("h2",{attrs:{id:"удалить-контейнер"}},[a("a",{attrs:{href:"#%D1%83%D0%B4%D0%B0%D0%BB%D0%B8%D1%82%D1%8C-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Удалить контейнер")]),a("p",[t._v("Например те которые уже отработали")]),a("ul",[a("li",[t._v("удалить один контейнер\ndocker rm <id контейнера>\ndocker rm <имя контейнера>")])]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker rm 1e0c7cd00041")])])]),a("ul",[a("li",[t._v("удалить все контейнеры\ndocker rm $(docker ps -qa) ")])]),a("h2",{attrs:{id:"остановить-контейнер"}},[a("a",{attrs:{href:"#%D0%BE%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D1%8C-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Остановить контейнер")]),a("ul",[a("li",[t._v("docker stop <id контейнера>")]),a("li",[t._v("docker stop <имя контейнера>")])]),a("h2",{attrs:{id:"проброска-портов"}},[a("a",{attrs:{href:"#%D0%BF%D1%80%D0%BE%D0%B1%D1%80%D0%BE%D1%81%D0%BA%D0%B0-%D0%BF%D0%BE%D1%80%D1%82%D0%BE%D0%B2","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Проброска портов")]),a("p",[t._v("Контейнер собирается в полностью изолированном окружении и если явно не пробросить порты то приложение будет не видно.")]),a("p",[t._v("Чтобы пробросить порт нужно в Dockerfile указать EXPOSE 8080 тем самым мы указываем что мы можем этот порт пробросить.")]),a("p",[t._v("Чтобы выполнить проброску нужно при запуске контейнера указать флаг -p и через двоеточие 2 порта (1- порт нашей машины, 2 - порт в контейнере)")]),a("p",[t._v("docker run --name <имя контейнера> --rm -p 8080:80880 <имя образа>")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker run --name hello --rm -p 8080:80880 hello-world")])])]),a("h2",{attrs:{id:"переменные-окружения"}},[a("a",{attrs:{href:"#%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D0%BE%D0%BA%D1%80%D1%83%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Переменные окружения")]),a("p",[t._v("Можно указать в Dockerfile")]),a("p",[t._v("ENV <название переменной> <значение>")]),a("p",[t._v("но иногда переменные нужно менять поэтому можно указывать переменные при запуске контейнера")]),a("p",[t._v("docker run --name <имя контейнера> --rm -p 8080:80880 -e <имя переменной>=<значение> <имя образа>")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker run --name hello --rm -p 8080:80880 -e TZ=Europe/Moscow hello-world")])])]),a("h2",{attrs:{id:"работа-с-внешними-данными"}},[a("a",{attrs:{href:"#%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-%D0%B2%D0%BD%D0%B5%D1%88%D0%BD%D0%B8%D0%BC%D0%B8-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%BC%D0%B8","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Работа с внешними данными")]),a("ol",[a("li",[t._v("монтируем папку\nделается это при запуске контейнера через параметр -v")])]),a("p",[t._v("docker run --name <имя контейнера> --rm -p 8080:80880 -v <папка на хостовой машине(абсолютный путь)>:<папка в контейнере(абсолютный путь)> <имя образа>")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker run --name hello --rm -p 8080:80880 -v ...:... hello-world")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("docker volume")])]),a("p",[t._v("посмотреть какие volume доступны")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker volume ls")])])]),a("p",[t._v("чтобы создать volume")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker volume create <имя>")])])]),a("p",[t._v("теперь при запуске можно указать ")]),a("p",[t._v("docker run --name <имя контейнера> --rm -v <имя volume>:<папка в контейнере(абсолютный путь)> <имя образа>")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker run --name hello --rm -p 8080:80880 -v ...:... hello-world")])])]),a("h2",{attrs:{id:"удалить-image"}},[a("a",{attrs:{href:"#%D1%83%D0%B4%D0%B0%D0%BB%D0%B8%D1%82%D1%8C-image","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Удалить image")]),a("p",[t._v("docker rmi <имя image>")]),a("h2",{attrs:{id:"получить-список-images-id"}},[a("a",{attrs:{href:"#%D0%BF%D0%BE%D0%BB%D1%83%D1%87%D0%B8%D1%82%D1%8C-%D1%81%D0%BF%D0%B8%D1%81%D0%BE%D0%BA-images-id","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Получить список images id")]),a("p",[t._v("docker images -q")]),a("h2",{attrs:{id:"удалить-все-images"}},[a("a",{attrs:{href:"#%D1%83%D0%B4%D0%B0%D0%BB%D0%B8%D1%82%D1%8C-%D0%B2%D1%81%D0%B5-images","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Удалить все images")]),a("p",[t._v("docker rmi $(docker images -q)")]),a("h2",{attrs:{id:"многосервисная-архитектура"}},[a("a",{attrs:{href:"#%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D0%BD%D0%B0%D1%8F-%D0%B0%D1%80%D1%85%D0%B8%D1%82%D0%B5%D0%BA%D1%82%D1%83%D1%80%D0%B0","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Многосервисная архитектура")]),a("p",[t._v("Для каждого сервиса имеется свой Dockerfile. \nЕсли через docker run выполнять настройке переменных когда есть много сервисов это не совсем удобно.")]),a("p",[t._v("Для этого используется docker-compose - надстройка над докером.")]),a("p",[t._v("Для его использования нужно создать docker-compose.yaml")]),a("p",[t._v("указываем версию, volumes и описываем настройки каждого сервиса")]),a("p",[a("strong",[t._v("Настройки сервиса:")])]),a("p",[t._v("build: указываем откуда взять Dockerfile либо image: mongo:latest если нужно взять готовый образ")]),a("p",[t._v("volumes: ")]),a("ul",[a("li",[t._v("<имя volume>:<абсолютный путь к папке в контейнере>")])]),a("p",[t._v("ports: - проброска портов")]),a("ul",[a("li",[t._v("8080:8080 ")])]),a("p",[t._v("restart: always - если вдруг машина перезагрузится то докер сам перезапустит контейнеры")]),a("p",[t._v("environment: - перечисляем переменные окружения")]),a("ul",[a("li",[t._v("TZ=Europe/Moscow")])]),a("h2",{attrs:{id:"создаем-ssh-ключ"}},[a("a",{attrs:{href:"#%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%B5%D0%BC-ssh-%D0%BA%D0%BB%D1%8E%D1%87","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Создаем ssh ключ")]),a("p",[t._v("переходим из домашнего каталога в .ssh и запускаем ssh-keygen, затем выводим на экран публичный ключ")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("cd .ssh\nssh-keygen -t rsa\n# задаем имя, например vscale\ncat vscale.pub | pbcopy")])])]),a("p",[t._v("создаем в папке .ssh файл config")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("vim config")])])]),a("p",[t._v("Указываем в config настройки")]),a("p",[t._v("host <имя хоста пожеланию>\n  hostname <шз адрес сервера>\n  user root\n  IdentityFile ~/.ssh/vscale")]),a("p",[t._v("Созряняем и выполняем команду \nssh vs")]),a("h2",{attrs:{id:"устанавливаем-docker-на-сервере"}},[a("a",{attrs:{href:"#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%B0%D0%B2%D0%BB%D0%B8%D0%B2%D0%B0%D0%B5%D0%BC-docker-%D0%BD%D0%B0-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B5","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Устанавливаем docker на сервере")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v('sudo apt update\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-app-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"\nsudo apt install docker-ce')])])]),a("h2",{attrs:{id:"устанавливаем-docker-compose-на-сервере"}},[a("a",{attrs:{href:"#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%B0%D0%B2%D0%BB%D0%B8%D0%B2%D0%B0%D0%B5%D0%BC-docker-compose-%D0%BD%D0%B0-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B5","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Устанавливаем docker-compose на сервере")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s` -`uname -m` -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\ndocker-compose --version")])])]),a("h2",{attrs:{id:"запуск-docker-compose"}},[a("a",{attrs:{href:"#%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-docker-compose","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Запуск docker-compose")]),a("p",[t._v("docker-compose up -d")]),a("p",[t._v("-d - чтобы контейнеры в фоне работали")]),a("h2",{attrs:{id:"остановить-docker-compose"}},[a("a",{attrs:{href:"#%D0%BE%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D1%8C-docker-compose","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Остановить docker-compose")]),a("p",[t._v("docker-compose down -d")]),a("h2",{attrs:{id:"работа-с-docker-hub"}},[a("a",{attrs:{href:"#%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0-%D1%81-docker-hub","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Работа с docker hub")]),a("p",[t._v("Создать свой репозиторий можно с сайта hub.docker.com нажав Create Repository"),a("br"),t._v("\nлибо просто запушив свои первый image")]),a("p",[t._v("нужно в имя образа вставить идентификатор пользователя и через / имя репозитория")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker build -t artemproject/statisticmanager .\ndocker login\ndocker push artemproject/statisticmanager")])])]),a("h2",{attrs:{id:"запуск-postgres-в-docker"}},[a("a",{attrs:{href:"#%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-postgres-%D0%B2-docker","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Запуск postgres в docker")]),a("p",[t._v("Чтобы запустить postgres в docker нужно:")]),a("ol",[a("li",[t._v("Сделать pull image")])]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"docker"}},[a("pre",{staticClass:"language-docker"},[a("code",{staticClass:"language-docker"},[t._v("docker pull postgress")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Запустить инстанс докера")])]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"docker"}},[a("pre",{staticClass:"language-docker"},[a("code",{staticClass:"language-docker"},[t._v("docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -p 5432:5432 -d postgres")])])]),a("p",[t._v("--name - имя контейнера на локальной машине\nPOSTGRES_PASSWORD= - здесь указывается пароль\n-d (detach) необходимо указывать для того чтобы терминал оставвался терминалом локального компьютера, а не терминалом БД\npostgres - название контейнера который мы будем запускать\n-p 5432:5432 - проброс портов, порт внутри контейнера будет соответсвовать порту нашего компьютера")]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Проверяем запущенные контейнеры")])]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"docker"}},[a("pre",{staticClass:"language-docker"},[a("code",{staticClass:"language-docker"},[t._v("docker ps -a")])])]),a("p",[t._v("Для работы с БД нужно подключить Postgress JDBC - "),a("code",{staticClass:"language-inline-text"},[t._v("'org.postgresql:postgresql:42.3.6'")]),t._v("\nи часть фреймворка Spring для работы с БД - "),a("code",{staticClass:"language-inline-text"},[t._v("'org.springframework:spring-jdbc:5.3.20'")])]),a("p",[t._v("система виртуализации для запуска приложения в ихолированной среде.")]),a("p",[t._v("SELECT departamens.name FROM departamens LEFT JOIN users ON users.departament_id = departamens.id WHERE users.departament_id IS NULL;")])])}),[],!1,null,null,null);"function"==typeof l&&l(p),"function"==typeof g&&g(p);a.default=p.exports},UQSp:function(t,a,s){"use strict";a.a={name:"VueRemarkRoot",render(t){return t("div",null,this.$slots.default)}}}}]);