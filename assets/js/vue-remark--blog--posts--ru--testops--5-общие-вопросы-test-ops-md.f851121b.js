(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{Ap2D:function(t,a,s){"use strict";s.r(a);var D=s("KHd+"),n=s("UQSp"),e=s("oCYn");function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}e.a.config.optionMergeStrategies;var B={VueRemarkRoot:n.a},o=function(t){var a=t.options.components=t.options.components||{},s=t.options.computed=t.options.computed||{};Object.keys(B).forEach((function(t){"object"===i(B[t])&&"function"==typeof B[t].render||"function"==typeof B[t]&&"function"==typeof B[t].options.render?a[t]=B[t]:s[t]=function(){return B[t]}}))},r=e.a.config.optionMergeStrategies,c="__vueRemarkFrontMatter",l={excerpt:null,title:"Общие вопросы TestOps",category:"testops",description:"Общие вопросы TestOps",tags:["qa"],icon:"fas fa-bug",image:"null",date:"2022-07-07T00:00:00.000Z",keywords:"qa",order:5,links:[{items:[{title:"Микросервисная архитектура",link:"//mikroservisnaya-arhitektura//"},{title:"Docker",link:"/docker/"},{title:"Kubernetes",link:"/kubernetes/"},{title:"Linux",link:"/linux/"},{title:"Общие вопросы TestOps",link:"/obshhie-voprosy-test-ops/"}]}]};var p=function(t){t.options[c]&&(t.options[c]=l),e.a.util.defineReactive(t.options,c,l),t.options.computed=r.computed({$frontmatter:function(){return t.options[c]}},t.options.computed)},v=Object(D.a)({},(function(){var t=this,a=t._self._c;return a("VueRemarkRoot",[a("h2",{attrs:{id:"какие-есть-виды-индексов-когда-и-зачем-использовать"}},[a("a",{attrs:{href:"#%D0%BA%D0%B0%D0%BA%D0%B8%D0%B5-%D0%B5%D1%81%D1%82%D1%8C-%D0%B2%D0%B8%D0%B4%D1%8B-%D0%B8%D0%BD%D0%B4%D0%B5%D0%BA%D1%81%D0%BE%D0%B2-%D0%BA%D0%BE%D0%B3%D0%B4%D0%B0-%D0%B8-%D0%B7%D0%B0%D1%87%D0%B5%D0%BC-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Какие есть виды индексов? Когда и зачем использовать?")]),a("p",[t._v("Индекс (англ. index) — объект базы данных, создаваемый с целью повышения производительности поиска данных. Таблицы в базе данных могут иметь большое количество строк, которые хранятся в произвольном порядке, и их поиск по заданному критерию путём последовательного просмотра таблицы строка за строкой может занимать много времени. Индекс формируется из значений одного или нескольких столбцов таблицы и указателей на соответствующие строки таблицы и, таким образом, позволяет искать строки, удовлетворяющие критерию поиска. Ускорение работы с использованием индексов достигается в первую очередь за счёт того, что индекс имеет структуру, оптимизированную под поиск — например, сбалансированного дерева.")]),a("p",[t._v("В общем виде, индекс в базах данных — это файл с последовательностью пар ключей и указателей. Идея использования индексов пришла от того, что современные базы данных слишком массивны и не помещаются в основную память. Мы обычно делим данные на блоки и размещаем данные в памяти поблочно. Однако поиск записи в БД может занять много времени. С другой стороны, файл индексов или блок индексов намного меньше блока данных и может поместиться в буфере основной памяти, что увеличивает скорость поиска записи.")]),a("p",[t._v("Разрежённый индекс (англ. sparse index) характеризуется тем, что каждый ключ ассоциируется с определённым указателем на блок в сортированном файле данных.")]),a("p",[t._v("Плотный индекс (англ. dense index) в свою очередь отличается тем, что каждый ключ ассоциируется с определённым указателем на запись в сортированном файле данных.")]),a("p",[t._v("В кластерных индексах с дублированными ключами разрежённый индекс указывает на наименьший ключ в каждом блоке, в то время как плотный индекс указывает на первую запись с указанным ключом.")]),a("h2",{attrs:{id:"можно-ли-вывести-список-баз-данныхтаблиц-через-cli"}},[a("a",{attrs:{href:"#%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE-%D0%BB%D0%B8-%D0%B2%D1%8B%D0%B2%D0%B5%D1%81%D1%82%D0%B8-%D1%81%D0%BF%D0%B8%D1%81%D0%BE%D0%BA-%D0%B1%D0%B0%D0%B7-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85%D1%82%D0%B0%D0%B1%D0%BB%D0%B8%D1%86-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-cli","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Можно ли вывести список баз данных/таблиц через CLI")]),a("p",[t._v("В Postgress")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("-l или \\list")])])]),a("p",[t._v("В MySQL")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"sql"}},[a("pre",{staticClass:"language-sql"},[a("code",{staticClass:"language-sql"},[a("span",{staticClass:"token keyword"},[t._v("SHOW")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("DATABASES")]),a("span",{staticClass:"token punctuation"},[t._v(";")])])])]),a("h2",{attrs:{id:"транзакциикоманды-для-транзакций"}},[a("a",{attrs:{href:"#%D1%82%D1%80%D0%B0%D0%BD%D0%B7%D0%B0%D0%BA%D1%86%D0%B8%D0%B8%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D1%8B-%D0%B4%D0%BB%D1%8F-%D1%82%D1%80%D0%B0%D0%BD%D0%B7%D0%B0%D0%BA%D1%86%D0%B8%D0%B9","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Транзакции,команды для транзакций")]),a("p",[t._v("Транзакции — это фундаментальное понятие во всех СУБД. Суть транзакции в том, что она объединяет последовательность действий в одну операцию «всё или ничего». Промежуточные состояния внутри последовательности не видны другим транзакциям, и если что-то помешает успешно завершить транзакцию, ни один из результатов этих действий не сохранится в базе данных.")]),a("p",[t._v("Транзакцией называется последовательность операций над данными имеющая начало и конец")]),a("p",[t._v("Транзакция это последовательное выполнение операций чтения и записи. Окончанием транзакции может быть либо сохранение изменений (фиксация, commit) либо отмена изменений (откат, rollback). Применительно к БД транзакция это нескольких запросов, которые трактуются как единый запрос.")]),a("p",[t._v("Транзакции должны удовлетворять свойствам ACID")]),a("p",[t._v("Атомарность. Транзакция либо выполняется полностью либо не выполняется вовсе.")]),a("p",[t._v("Согласованность. При завершении транзакции не должны быть нарушены ограничения накладываемые на данные (например constraints в БД). Согласованность подразумевает, что система будет переведена из одного корректного состояния в другое корректное.")]),a("p",[t._v("Изолированность. Параллельно выполняемые транзакции не должны влиять друг на друга, например менять данные которые использует другая транзакция. Результат выполнения параллельных транзакций должен быть таким, как если бы транзакции выполнялись последовательно.")]),a("p",[t._v("Устойчивость. После фиксации изменения не должны быть утеряны.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"sql"}},[a("pre",{staticClass:"language-sql"},[a("code",{staticClass:"language-sql"},[a("span",{staticClass:"token keyword"},[t._v("BEGIN")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("UPDATE")]),t._v(" accounts "),a("span",{staticClass:"token keyword"},[t._v("SET")]),t._v(" balance "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" balance "),a("span",{staticClass:"token operator"},[t._v("-")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("100.00")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("WHERE")]),t._v(" name "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token string"},[t._v("'Alice'")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("SAVEPOINT")]),t._v(" my_savepoint"),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("UPDATE")]),t._v(" accounts "),a("span",{staticClass:"token keyword"},[t._v("SET")]),t._v(" balance "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" balance "),a("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("100.00")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("WHERE")]),t._v(" name "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token string"},[t._v("'Bob'")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token comment"},[t._v("-- ошибочное действие... забыть его и использовать счёт Уолли")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("ROLLBACK")]),t._v(" "),a("span",{staticClass:"token keyword"},[t._v("TO")]),t._v(" my_savepoint"),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("UPDATE")]),t._v(" accounts "),a("span",{staticClass:"token keyword"},[t._v("SET")]),t._v(" balance "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" balance "),a("span",{staticClass:"token operator"},[t._v("+")]),t._v(" "),a("span",{staticClass:"token number"},[t._v("100.00")]),t._v("\n    "),a("span",{staticClass:"token keyword"},[t._v("WHERE")]),t._v(" name "),a("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),a("span",{staticClass:"token string"},[t._v("'Wally'")]),a("span",{staticClass:"token punctuation"},[t._v(";")]),t._v("\n"),a("span",{staticClass:"token keyword"},[t._v("COMMIT")]),a("span",{staticClass:"token punctuation"},[t._v(";")])])])]),a("h2",{attrs:{id:"что-такое-индекс-и-что-такое-ключ"}},[a("a",{attrs:{href:"#%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-%D0%B8%D0%BD%D0%B4%D0%B5%D0%BA%D1%81-%D0%B8-%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-%D0%BA%D0%BB%D1%8E%D1%87","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Что такое индекс и что такое ключ")]),a("p",[t._v("Ключ представляет собой комбинацию полей, данные в которых однозначно определяют каждую запись в таблице. Простой ключ состоит из одного поля, а составной (сложный) из нескольких полей. Поля, по которым построен ключ, называют ключевыми. ")]),a("p",[t._v("Индекс, как и ключ, представляет собой своеобразное оглавление таблицы, просмотр которого выполняется перед обращением к ее записям. Таким образом, использование индекса повышает скорость доступа к данным в таблице за счет того, что доступ выполняется не последовательным, а индексно-последовательным методом.")]),a("h2",{attrs:{id:"deployment-strategies"}},[a("a",{attrs:{href:"#deployment-strategies","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Deployment strategies")]),a("h3",{attrs:{id:"rolling-постепенный-накатываемый-деплой"}},[a("a",{attrs:{href:"#rolling-%D0%BF%D0%BE%D1%81%D1%82%D0%B5%D0%BF%D0%B5%D0%BD%D0%BD%D1%8B%D0%B9-%D0%BD%D0%B0%D0%BA%D0%B0%D1%82%D1%8B%D0%B2%D0%B0%D0%B5%D0%BC%D1%8B%D0%B9-%D0%B4%D0%B5%D0%BF%D0%BB%D0%BE%D0%B9","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Rolling (постепенный, «накатываемый» деплой)")]),a("p",[t._v("Это стандартная стратегия развертывания в Kubernetes. Она постепенно, один за другим, заменяет pod'ы со старой версией приложения на pod'ы с новой версией — без простоя кластера.")]),a("h3",{attrs:{id:"recreate-повторное-создание"}},[a("a",{attrs:{href:"#recreate-%D0%BF%D0%BE%D0%B2%D1%82%D0%BE%D1%80%D0%BD%D0%BE%D0%B5-%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Recreate (повторное создание)")]),a("p",[t._v("В этом простейшем типе развертывания старые pod'ы убиваются все разом и заменяются новыми")]),a("h3",{attrs:{id:"bluegreen-сине-зеленые-развертывания"}},[a("a",{attrs:{href:"#bluegreen-%D1%81%D0%B8%D0%BD%D0%B5-%D0%B7%D0%B5%D0%BB%D0%B5%D0%BD%D1%8B%D0%B5-%D1%80%D0%B0%D0%B7%D0%B2%D0%B5%D1%80%D1%82%D1%8B%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Blue/Green (сине-зеленые развертывания)")]),a("p",[t._v("Стратегия сине-зеленого развертывания (иногда ее ещё называют red/black, т.е. красно-чёрной) предусматривает одновременное развертывание старой (зеленой) и новой (синей) версий приложения. После размещения обеих версий обычные пользователи получают доступ к зеленой, в то время как синяя доступна для QA-команды для автоматизации тестов через отдельный сервис или прямой проброс портов")]),a("h3",{attrs:{id:"canary-канареечные-развертывания"}},[a("a",{attrs:{href:"#canary-%D0%BA%D0%B0%D0%BD%D0%B0%D1%80%D0%B5%D0%B5%D1%87%D0%BD%D1%8B%D0%B5-%D1%80%D0%B0%D0%B7%D0%B2%D0%B5%D1%80%D1%82%D1%8B%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Canary (канареечные развертывания)")]),a("p",[t._v("Канареечные выкаты похожи на сине-зеленые, но лучше управляются и используют прогрессивный поэтапный подход. К этому типу относятся несколько различных стратегий, включая «скрытые» запуски и А/В-тестирование.")]),a("p",[t._v("Эта стратегия применяется, когда необходимо испытать некую новую функциональность, как правило, в бэкенде приложения. Суть подхода в том, чтобы создать два практически одинаковых сервера: один обслуживает почти всех пользователей, а другой, с новыми функциями, обслуживает лишь небольшую подгруппу пользователей, после чего результаты их работы сравниваются. Если все проходит без ошибок, новая версия постепенно выкатывается на всю инфраструктуру.")]),a("h3",{attrs:{id:"dark-скрытые-или-ав-развертывания"}},[a("a",{attrs:{href:"#dark-%D1%81%D0%BA%D1%80%D1%8B%D1%82%D1%8B%D0%B5-%D0%B8%D0%BB%D0%B8-%D0%B0%D0%B2-%D1%80%D0%B0%D0%B7%D0%B2%D0%B5%D1%80%D1%82%D1%8B%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Dark (скрытые) или А/В-развертывания")]),a("p",[t._v("Скрытое развертывание — еще одна вариация канареечной стратегии (с ней, кстати, Flagger тоже может работать). Разница между скрытым и канареечным развертыванием состоит в том, что скрытые развертывания имеют дело с фронтендом, а не с бэкендом, как канареечные.")]),a("p",[t._v("Другое название этих развертываний — А/В-тестирование. Вместо того, чтобы открыть доступ к новой функции всем пользователям, ее предлагают лишь ограниченной их части. Обычно эти пользователи не знают, что выступают тестерами-первопроходцами (отсюда и термин «скрытое развертывание»).")]),a("h3",{attrs:{id:"flagger-и-ab-развертывания"}},[a("a",{attrs:{href:"#flagger-%D0%B8-ab-%D1%80%D0%B0%D0%B7%D0%B2%D0%B5%D1%80%D1%82%D1%8B%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Flagger и A/B-развертывания")]),a("p",[t._v("Помимо маршрутизации с учётом весов, Flagger также может направлять на канареечный сервер трафик в зависимости от параметров HTTP. При А/В-тестировании можно использовать заголовки HTTP или файлы cookie для перенаправления определенного сегмента пользователей. Это особенно эффективно в случае frontend-приложений, требующих привязки сессии к серверу (session affinity). Дополнительную информацию можно найти в документации Flagger.")]),a("h2",{attrs:{id:"что-такое-контроллер"}},[a("a",{attrs:{href:"#%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D0%BB%D0%B5%D1%80","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Что такое контроллер?")]),a("p",[t._v("Контроллер - это что-либо в вашем кластере, которое отслеживает хотя бы один другой тип ресурса Kubernetes. Контроллеры могут быть пассивными или активными. Активный контроллер сам выполнит необходимые действия; пассивы будут передавать изменения другим компонентам или серверу API кластера.")]),a("h2",{attrs:{id:"что-такое-операторы"}},[a("a",{attrs:{href:"#%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-%D0%BE%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D1%8B","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Что такое операторы?")]),a("p",[t._v("Оператор - это специализированная форма контроллера. Операторы реализуют модель контроллера, что означает, что они переводят кластер в определенное состояние, но у них также есть дополнительные характеристики. Первоначально этот термин был придуман CoreOS, но теперь получил более широкое распространение в Kubernetes.")]),a("p",[t._v("Операторы адаптированы к конкретным приложениям. Они добавляют расширения Kubernetes API через пользовательские определения ресурсов, создавая новые типы объектов, используемых приложением, которым они управляют.")]),a("h2",{attrs:{id:"права-к-файлу-755"}},[a("a",{attrs:{href:"#%D0%BF%D1%80%D0%B0%D0%B2%D0%B0-%D0%BA-%D1%84%D0%B0%D0%B9%D0%BB%D1%83-755","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Права к файлу 755")]),a("p",[t._v("У файла установлены права 755. ")]),a("p",[t._v("Первая цифра — 7, это значит, что хозяин имеет на файл все права: чтение, запись и запуск (7 — 111). ")]),a("p",[t._v("Вторая цифра — 5, пользователи из одной с хозяином группы имеют возможность читать и запускать файл, но не могут в него писать (5 — 101). ")]),a("p",[t._v("Аналогично и все остальные — третья цифра тоже пятерка.")]),a("h2",{attrs:{id:"какое-максимальное-количество-docker-layers-возможно"}},[a("a",{attrs:{href:"#%D0%BA%D0%B0%D0%BA%D0%BE%D0%B5-%D0%BC%D0%B0%D0%BA%D1%81%D0%B8%D0%BC%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5-%D0%BA%D0%BE%D0%BB%D0%B8%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%BE-docker-layers-%D0%B2%D0%BE%D0%B7%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Какое максимальное количество docker layers возможно")]),a("p",[t._v("127")]),a("h2",{attrs:{id:"что-такое-многоэтапный-build"}},[a("a",{attrs:{href:"#%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE%D1%8D%D1%82%D0%B0%D0%BF%D0%BD%D1%8B%D0%B9-build","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Что такое многоэтапный build")]),a("p",[t._v("много-этапные (multi-stage builds) сборки позволяют значительно упростить процесс и описать его внутри Dockerfile. Каждая инструкция FROM может использовать индивидуальный базовый образ и каждая из них начинает новую стадию сборки docker образа. Но основное преимущество, что вы можете копировать необходимые артефакты из одной стадии в другую. В результате все вышеперечисленные шаги могут быть описаны вот так\nDockerfile:")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"docker"}},[a("pre",{staticClass:"language-docker"},[a("code",{staticClass:"language-docker"},[a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("FROM")]),t._v(" golang:latest "),a("span",{staticClass:"token keyword"},[t._v("as")]),t._v(" build")]),t._v("\n"),a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("COPY")]),t._v(" . .")]),t._v("\n"),a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("RUN")]),t._v(" go build ./src/main.go")]),t._v("\n\n"),a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("FROM")]),t._v(" alpine:latest "),a("span",{staticClass:"token keyword"},[t._v("as")]),t._v(" production")]),t._v("\n"),a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("COPY")]),t._v(" "),a("span",{staticClass:"token options"},[a("span",{staticClass:"token property"},[t._v("--from")]),a("span",{staticClass:"token punctuation"},[t._v("=")]),a("span",{staticClass:"token string"},[t._v("build")])]),t._v(" /go/main .")]),t._v("\n"),a("span",{staticClass:"token instruction"},[a("span",{staticClass:"token keyword"},[t._v("CMD")]),t._v(" ["),a("span",{staticClass:"token string"},[t._v('"./main"')]),t._v("]")])])])]),a("h2",{attrs:{id:"dind-docker-in-docker"}},[a("a",{attrs:{href:"#dind-docker-in-docker","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("DinD (Docker in docker)")]),a("p",[t._v("Docker предоставляется в виде самодостаточного образа через тег docker:dind на Docker Hub.")]),a("p",[t._v("Запустив этот образ, вы получите функционирующую установку демона Docker внутри вашего нового контейнера.")]),a("p",[t._v("Он будет работать независимо от демона вашего хоста, который запускает контейнер dind, поэтому docker ps внутри контейнера даст результаты, отличные от docker ps на вашем хосте.")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("docker run -d --privileged --name docker \\\n    -e DOCKER_TLS_CERTDIR=/certs \\\n    -v docker-certs-ca:/certs/ca \\\n    -v docker-certs-client:/certs/client \\\n    docker:dind")])])]),a("p",[t._v("Использование Docker-in-Docker таким образом связано с одним большим предостережением: необходимо использовать привилегированный режим.")]),a("p",[t._v("Это ограничение действует, даже если вы используете контейнеры без рутов.")]),a("p",[t._v("Привилегированный режим активируется флагом –privileged в команде, показанной выше.")]),a("p",[t._v("Использование привилегированного режима дает контейнеру полный доступ к вашей хост-системе.")]),a("p",[t._v("Это необходимо в сценарии Docker-in-Docker, чтобы ваш внутренний Docker мог создавать новые контейнеры.")]),a("p",[t._v("Однако в некоторых средах это может быть неприемлемым риском для безопасности.")]),a("p",[t._v("Существуют и другие проблемы с dind.")]),a("p",[t._v("В некоторых системах могут возникать конфликты с модулями безопасности Linux Security Modules (LSM), такими как AppArmor и SELinux.")]),a("p",[t._v("Это происходит, когда внутренний Docker применяет политики LSM, которые внешний демон не может предугадать.")]),a("p",[t._v("Еще одна проблема связана с файловыми системами контейнеров.")]),a("p",[t._v("Внешний демон будет работать поверх обычной файловой системы вашего хоста, например ext4.")]),a("h2",{attrs:{id:"переменная-path"}},[a("a",{attrs:{href:"#%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F-path","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Переменная PATH")]),a("p",[t._v("Для того, чтобы посмотреть содержимое переменной PATH в Linux, выполните в терминале команду:")]),a("p",[t._v("echo $PATH")]),a("p",[t._v("Для того, чтобы добавить новый путь к переменной PATH, можно воспользоваться командой export. Например, давайте добавим к значению переменной PATH папку/opt/local/bin. Для того, чтобы не перезаписать имеющееся значение переменной PATH новым, нужно именно добавить (дописать) это новое значение к уже имеющемуся, не забыв о разделителе-двоеточии:")]),a("p",[t._v("export PATH=$PATH:/opt/local/bin")]),a("h2",{attrs:{id:"команды-для-копирования-и-переименования-файла"}},[a("a",{attrs:{href:"#%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D1%8B-%D0%B4%D0%BB%D1%8F-%D0%BA%D0%BE%D0%BF%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B8-%D0%BF%D0%B5%D1%80%D0%B5%D0%B8%D0%BC%D0%B5%D0%BD%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D1%84%D0%B0%D0%B9%D0%BB%D0%B0","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Команды для копирования и переименования файла")]),a("ul",[a("li",[t._v("cp")]),a("li",[t._v("mv")])]),a("h2",{attrs:{id:"команда-env"}},[a("a",{attrs:{href:"#%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D0%B0-env","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Команда env")]),a("p",[t._v("Команда env позволяет модифицировать список переменных окружения перед исполнением пользовательской команды. В некоторых командных оболочках она является встроенной, в некоторых — внешней командой.")]),a("p",[t._v("Базовый синтаксис команды выглядит следующим образом:")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("$ env [параметры] [ИМЯ=ЗНАЧЕНИЕ] ... [команда]")])])]),a("p",[t._v("При вызове env без каких-либо параметров будет выведен список всех переменных окружения. \nИсполнение команды с измененными значениями переменных окружения\nДля изменения значения произвольной переменной окружения перед запуском команды достаточно указать имя этой переменной и ее значение после символа равенства. Например, для вывода времени по Гринвичу достаточно изменить значение переменной окружения TZ:")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("$ env TZ=GMT date\nСр июл 26 17:50:30 GMT 2017")])])]),a("p",[t._v("Исполнение команды лишь с заданными переменными окружения\nДля исполнения команды с несколькими пользовательскими переменными окружения следует воспользоваться параметром -i и вручную задать значения необходимых переменных:")]),a("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[a("pre",{staticClass:"language-text"},[a("code",{staticClass:"language-text"},[t._v("$ env -i PWD=/root env\nPWD=/root")])])]),a("p",[t._v("DELETE vs TRUNCATE")]),a("h2",{attrs:{id:"партиционирование"}},[a("a",{attrs:{href:"#%D0%BF%D0%B0%D1%80%D1%82%D0%B8%D1%86%D0%B8%D0%BE%D0%BD%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("Партиционирование")]),a("p",[t._v("Партиционирование – это метод разделения больших (исходя из количества записей, а не столбцов) таблиц на много маленьких. И желательно, чтобы это происходило прозрачным для приложения способом.")]),a("p",[t._v("когда таблица готова, я могу создать партиции, что означает – наследованные таблицы:")]),a("p",[t._v("create table users_1 () inherits (users);")]),a("ul",[a("li",[t._v("Deadlock")]),a("li",[t._v("Задачка на LEFT JOIN примерно как в собесе выше")])]),a("p",[t._v("Что такое CI/CD")]),a("ul",[a("li",[t._v("Инструменты (Jenkins, Gitlab CI ...)")]),a("li",[t._v("Green / Blue deploy")]),a("li",[t._v("Канареечный релиз")]),a("li",[t._v("Балансировщик")])]),a("h2",{attrs:{id:"в-чем-отличие-контейнеризации-от-виртуализации"}},[a("a",{attrs:{href:"#%D0%B2-%D1%87%D0%B5%D0%BC-%D0%BE%D1%82%D0%BB%D0%B8%D1%87%D0%B8%D0%B5-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8-%D0%BE%D1%82-%D0%B2%D0%B8%D1%80%D1%82%D1%83%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8","aria-hidden":"true"}},[a("span",{staticClass:"icon icon-link"})]),t._v("В чем отличие контейнеризации от виртуализации")]),a("p",[t._v("Виртуализация - эмулируется аппаратное окружение и может быть запущен широкий спектр гостевых операционных систем,\nКонтейнеризация - может быть запущен экземпляр операционной системы только с тем же ядром, что и у хостовой операционной системы \nотсутствуют дополнительные ресурсные накладные расходы на эмуляцию виртуального оборудования и запуск полноценного экземпляра операционной системы")])])}),[],!1,null,null,null);"function"==typeof o&&o(v),"function"==typeof p&&p(v);a.default=v.exports},UQSp:function(t,a,s){"use strict";a.a={name:"VueRemarkRoot",render(t){return t("div",null,this.$slots.default)}}}}]);