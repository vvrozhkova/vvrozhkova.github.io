(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{UQSp:function(t,s,a){"use strict";s.a={name:"VueRemarkRoot",render(t){return t("div",null,this.$slots.default)}}},s0Gu:function(t,s,a){"use strict";a.r(s);var n=a("KHd+"),i=a("UQSp"),e=a("oCYn");function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}e.a.config.optionMergeStrategies;var r={VueRemarkRoot:i.a},l=function(t){var s=t.options.components=t.options.components||{},a=t.options.computed=t.options.computed||{};Object.keys(r).forEach((function(t){"object"===o(r[t])&&"function"==typeof r[t].render||"function"==typeof r[t]&&"function"==typeof r[t].options.render?s[t]=r[t]:a[t]=function(){return r[t]}}))},c=e.a.config.optionMergeStrategies,p="__vueRemarkFrontMatter",u={excerpt:null,title:"Gradle",category:"automation",description:"Gradle",tags:["Автоматизация тестирования"],icon:"fas fa-robot",image:"null",date:"2022-06-17T00:00:00.000Z",keywords:"qa, Автоматизация тестирования",links:[{items:[{title:"Курс по автоматизации тестирования Java",link:"/kurs-po-avtomatizaczii-testirovaniya-java/"},{title:"Система сборки. Ant, Maven, Gradle",link:"/sistema-sborki-ant-maven-gradle/"},{title:"Gradle",link:"/gradle/"},{title:"Maven",link:"/maven/"}]}]};var v=function(t){t.options[p]&&(t.options[p]=u),e.a.util.defineReactive(t.options,p,u),t.options.computed=c.computed({$frontmatter:function(){return t.options[p]}},t.options.computed)},g=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("VueRemarkRoot",[s("p",[t._v("Gradle - это инструмент для автоматической сборки приложений. Он отвечает за структуру, зависимости, плагины вашего проекта, чтобы управлять этапами сборки проекта: компиляция, запуск тестов, публикация. ")]),s("p",[t._v("Gradle написан на Java и запускается на JVM, поэтому нужно чтобы был установлен JDK. При этом Gradle не заточен только под java приложения и может собирать любые другие. ")]),s("p",[t._v("Для реализации и описания процесса сборки в Gradle реализовано 2 DSL языка на Groovy и на Kotlin.\nОба этих языка предоставляют примерно одинаковый API для работы со сборкой и имеют 2 интерфейса, которые эту сборку описывают.")]),s("p",[s("code",{staticClass:"language-inline-text"},[t._v("project")]),t._v(" - описывает как и из чего собрать проект;"),s("br"),s("code",{staticClass:"language-inline-text"},[t._v("settings.gradle")]),t._v(" - описывает дополнительные метаданные и список дочерних проектов, если это мультимодульный проект;")]),s("h2",{attrs:{id:"project"}},[s("a",{attrs:{href:"#project","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),s("code",{staticClass:"language-inline-text"},[t._v("project")])]),s("h3",{attrs:{id:"task"}},[s("a",{attrs:{href:"#task","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("task")]),s("p",[t._v("Представляет собой набор задач, который вам нужно выполнить для сборки приложения; эти задачи можно писать самим или добавлять через плагины.")]),s("h3",{attrs:{id:"plugin"}},[s("a",{attrs:{href:"#plugin","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("plugin")]),s("p",[t._v("Большинство функционала gradle реализуется с помощью плагинов, поэтому сам gradle изначально достаточно легкий и не содержит лишнего мусора.")]),s("p",[t._v("Плагин - это реализация методов интерфейса проекта(project), которые могут реализовывать работу с зависимостями, добавлять нужные таски и почти полностью менять, то как работает процесс сборки.")]),s("h3",{attrs:{id:"dependencies"}},[s("a",{attrs:{href:"#dependencies","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("dependencies")]),s("p",[t._v("Можно указать необходимые зависимости для работы вашего приложения. Gradle реализует только логику управления зависимостями а сам репозиторий можно выбрать, настроив это в build скрипте. Это может быть например maven или ivy репозиторий.")]),s("p",[t._v("Тип Task в Gradle это по сути класс. Он состоит из действий(actions), которые выполняет класс, входных данных(inputs), над которыми мы производим действия и выходных данных(outputs). ")]),s("p",[t._v("Каждая из этих состовляющих кастомизируема и необязательна. Например, существуют LifeCycle таски, которые сами ничего не делают, но объединяют несколько других тасок.")]),s("p",[t._v("За счет такого разделения Gradle реализует "),s("strong",[s("em",[t._v("инкрементальную")])]),t._v(" сборку: перед выполнением таски Gradle проверяет есть ли изменения входных данных и повлияют ли эти изменеия на выходные данные. Если нет, то Gradle просто пропустит таск с надписью "),s("strong",[t._v("UP TO DATE")]),t._v(", таким образом оптимизируется процесс сборки, чтобы каждый раз не собирать неизменяемые модули, а собирать только то, что изменилось, но эту логику также можно отключить.")]),s("p",[t._v("Чтобы обеспечить нужный порядок выполнения тасок и что каждая таска выполнится только один раз, в процессе билдинга Gradle строит из тасок так называемый ориентированный ациклический граф("),s("strong",[t._v("DAG, Directed Acyclic Graph")]),t._v("). ")]),s("p",[t._v("Граф - это набор объектов(в нашем случае тасок), обладающих парными связями (каждая таска связана с одной или несколькими(двумя) другими тасками). ")]),s("p",[t._v("Таски - вершины, связи между ними - ребра. ")]),s("p",[t._v("То что граф ориентированный или по другому орграф значит, что у ребер есть направление (порядок исполнения тасок), то что он ациклический означает, что в нем нет направленных циклов, нельзя из одной точки прийти в нее же, но это не мешает из разных точек прийти в одну. Такие графы много где использются, например для представления искусственных нейронных сетей без обратной связи. ")]),s("p",[s("strong",[t._v("Граф для сборки Java приложения")])]),s("div",{staticClass:"mermaid"},[s("svg",{staticStyle:{"max-width":"338.6484375px"},attrs:{id:"mermaid-1752657941825",width:"100%",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",height:"406",viewBox:"0 0 338.6484375 406"}},[s("g",[s("g",{staticClass:"output"},[s("g",{staticClass:"clusters"}),s("g",{staticClass:"edgePaths"},[s("g",{staticClass:"edgePath LS-build LE-check",staticStyle:{opacity:"1"},attrs:{id:"L-build-check"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M74.5625,45.920714196528905L68.61848958333333,50.100595163774095C62.674479166666664,54.28047613101927,50.786458333333336,62.640238065509635,44.842447916666664,70.98678569942149C38.8984375,79.33333333333333,38.8984375,87.66666666666667,38.8984375,91.83333333333333L38.8984375,96","marker-end":"url(#arrowhead25)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead25",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])]),s("g",{staticClass:"edgePath LS-build LE-assemble",staticStyle:{opacity:"1"},attrs:{id:"L-build-assemble"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M128.375,45.920714196528905L134.31901041666666,50.100595163774095C140.26302083333334,54.28047613101927,152.15104166666666,62.640238065509635,158.09505208333334,70.98678569942149C164.0390625,79.33333333333333,164.0390625,87.66666666666667,164.0390625,91.83333333333333L164.0390625,96","marker-end":"url(#arrowhead26)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead26",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])]),s("g",{staticClass:"edgePath LS-check LE-test",staticStyle:{opacity:"1"},attrs:{id:"L-check-test"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M38.8984375,134L38.8984375,138.16666666666666C38.8984375,142.33333333333334,38.8984375,150.66666666666666,38.8984375,159C38.8984375,167.33333333333334,38.8984375,175.66666666666666,38.8984375,179.83333333333334L38.8984375,184","marker-end":"url(#arrowhead27)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead27",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])]),s("g",{staticClass:"edgePath LS-assemble LE-jar",staticStyle:{opacity:"1"},attrs:{id:"L-assemble-jar"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M164.0390625,134L164.0390625,138.16666666666666C164.0390625,142.33333333333334,164.0390625,150.66666666666666,164.0390625,159C164.0390625,167.33333333333334,164.0390625,175.66666666666666,164.0390625,179.83333333333334L164.0390625,184","marker-end":"url(#arrowhead28)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead28",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])]),s("g",{staticClass:"edgePath LS-jar LE-classes",staticStyle:{opacity:"1"},attrs:{id:"L-jar-classes"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M164.0390625,222L164.0390625,226.16666666666666C164.0390625,230.33333333333334,164.0390625,238.66666666666666,164.0390625,247C164.0390625,255.33333333333334,164.0390625,263.6666666666667,164.0390625,267.8333333333333L164.0390625,272","marker-end":"url(#arrowhead29)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead29",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])]),s("g",{staticClass:"edgePath LS-classes LE-compileJava",staticStyle:{opacity:"1"},attrs:{id:"L-classes-compileJava"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M127.359375,308.8609718139374L118.41276041666667,313.2174765116145C109.46614583333333,317.5739812092916,91.57291666666667,326.2869906046458,82.62630208333333,334.8101619689896C73.6796875,343.3333333333333,73.6796875,351.6666666666667,73.6796875,355.8333333333333L73.6796875,360","marker-end":"url(#arrowhead30)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead30",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])]),s("g",{staticClass:"edgePath LS-classes LE-processResources",staticStyle:{opacity:"1"},attrs:{id:"L-classes-processResources"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M200.71875,308.8609718139374L209.66536458333334,313.2174765116145C218.61197916666666,317.5739812092916,236.50520833333334,326.2869906046458,245.45182291666666,334.8101619689896C254.3984375,343.3333333333333,254.3984375,351.6666666666667,254.3984375,355.8333333333333L254.3984375,360","marker-end":"url(#arrowhead31)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead31",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])])]),s("g",{staticClass:"edgeLabels"},[s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-build' L-LE-check",attrs:{id:"L-L-build-check"}})])])])]),s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-build' L-LE-assemble",attrs:{id:"L-L-build-assemble"}})])])])]),s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-check' L-LE-test",attrs:{id:"L-L-check-test"}})])])])]),s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-assemble' L-LE-jar",attrs:{id:"L-L-assemble-jar"}})])])])]),s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-jar' L-LE-classes",attrs:{id:"L-L-jar-classes"}})])])])]),s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-classes' L-LE-compileJava",attrs:{id:"L-L-classes-compileJava"}})])])])]),s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-classes' L-LE-processResources",attrs:{id:"L-L-classes-processResources"}})])])])])]),s("g",{staticClass:"nodes"},[s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-build-14",transform:"translate(101.46875,27)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-26.90625",y:"-19",width:"53.8125",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-16.90625,-9)"}},[s("foreignObject",{attrs:{width:"33.8125",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("build")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-check-15",transform:"translate(38.8984375,115)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-30.8984375",y:"-19",width:"61.796875",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-20.8984375,-9)"}},[s("foreignObject",{attrs:{width:"41.796875",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("check")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-assemble-17",transform:"translate(164.0390625,115)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-44.2421875",y:"-19",width:"88.484375",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-34.2421875,-9)"}},[s("foreignObject",{attrs:{width:"68.484375",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("assemble")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-test-19",transform:"translate(38.8984375,203)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-22.8984375",y:"-19",width:"45.796875",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-12.8984375,-9)"}},[s("foreignObject",{attrs:{width:"25.796875",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("test")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-jar-21",transform:"translate(164.0390625,203)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-18.890625",y:"-19",width:"37.78125",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-8.890625,-9)"}},[s("foreignObject",{attrs:{width:"17.78125",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("jar")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-classes-23",transform:"translate(164.0390625,291)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-36.6796875",y:"-19",width:"73.359375",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-26.6796875,-9)"}},[s("foreignObject",{attrs:{width:"53.359375",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("classes")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-compileJava-25",transform:"translate(73.6796875,379)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-54.46875",y:"-19",width:"108.9375",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-44.46875,-9)"}},[s("foreignObject",{attrs:{width:"88.9375",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("compileJava")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-processResources-27",transform:"translate(254.3984375,379)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-76.25",y:"-19",width:"152.5",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-66.25,-9)"}},[s("foreignObject",{attrs:{width:"132.5",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("processResources")])])])])])])])])])]),s("h2",{attrs:{id:"сборка-java-приложения"}},[s("a",{attrs:{href:"#%D1%81%D0%B1%D0%BE%D1%80%D0%BA%D0%B0-java-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Сборка Java приложения")]),s("p",[t._v("Процесс сборки делится на 3 тапа: инициализация (initialization), конфигурация (configuration) и исполнение (execution). ")]),s("h3",{attrs:{id:"инициализация"}},[s("a",{attrs:{href:"#%D0%B8%D0%BD%D0%B8%D1%86%D0%B8%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Инициализация")]),s("p",[t._v("В процессе инициализации Gradle ищет "),s("code",{staticClass:"language-inline-text"},[t._v("settings.gradle")]),t._v(" файл, из которого определяет это одиночный или мультимодульный проект. После этого он создает instance одного или нескольких проектов. ")]),s("div",{staticClass:"mermaid"},[s("svg",{staticStyle:{"max-width":"140.0625px"},attrs:{id:"mermaid-1752657941827",width:"100%",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",height:"230",viewBox:"0 0 140.0625 230"}},[s("g",[s("g",{staticClass:"output"},[s("g",{staticClass:"clusters"}),s("g",{staticClass:"edgePaths"},[s("g",{staticClass:"edgePath LS-Initialization LE-settings.gradle",staticStyle:{opacity:"1"},attrs:{id:"L-Initialization-settings.gradle"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M70.03125,46L70.03125,50.166666666666664C70.03125,54.333333333333336,70.03125,62.666666666666664,70.03125,71C70.03125,79.33333333333333,70.03125,87.66666666666667,70.03125,91.83333333333333L70.03125,96","marker-end":"url(#arrowhead12)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead12",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])]),s("g",{staticClass:"edgePath LS-settings.gradle LE-project",staticStyle:{opacity:"1"},attrs:{id:"L-settings.gradle-project"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M70.03125,134L70.03125,138.16666666666666C70.03125,142.33333333333334,70.03125,150.66666666666666,70.03125,159C70.03125,167.33333333333334,70.03125,175.66666666666666,70.03125,179.83333333333334L70.03125,184","marker-end":"url(#arrowhead13)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead13",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])])]),s("g",{staticClass:"edgeLabels"},[s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-Initialization' L-LE-settings.gradle",attrs:{id:"L-L-Initialization-settings.gradle"}})])])])]),s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-settings.gradle' L-LE-project",attrs:{id:"L-L-settings.gradle-project"}})])])])])]),s("g",{staticClass:"nodes"},[s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-Initialization-3",transform:"translate(70.03125,27)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-51.8046875",y:"-19",width:"103.609375",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-41.8046875,-9)"}},[s("foreignObject",{attrs:{width:"83.609375",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("Initialization")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-settings.gradle-4",transform:"translate(70.03125,115)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-62.03125",y:"-19",width:"124.0625",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-52.03125,-9)"}},[s("foreignObject",{attrs:{width:"104.0625",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("settings.gradle")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-project-5",transform:"translate(70.03125,203)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-34.015625",y:"-19",width:"68.03125",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-24.015625,-9)"}},[s("foreignObject",{attrs:{width:"48.03125",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("project")])])])])])])])])])]),s("h3",{attrs:{id:"конфигурация"}},[s("a",{attrs:{href:"#%D0%BA%D0%BE%D0%BD%D1%84%D0%B8%D0%B3%D1%83%D1%80%D0%B0%D1%86%D0%B8%D1%8F","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Конфигурация")]),s("p",[t._v("Далее в процессе конфигурации, gradle для каждого проекта ищет build.gradle скрипт и выполняет все указанные там конфигурационные действия в контексте текущего проекта: подключает плагины, скачивает зависимости, выполняет код находящийся в конфигурационном блоке, создавая объекты сборки - строит граф из тасок.")]),s("div",{staticClass:"mermaid"},[s("svg",{staticStyle:{"max-width":"131.171875px"},attrs:{id:"mermaid-1752657941825",width:"100%",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",height:"230",viewBox:"0 0 131.171875 230"}},[s("g",[s("g",{staticClass:"output"},[s("g",{staticClass:"clusters"}),s("g",{staticClass:"edgePaths"},[s("g",{staticClass:"edgePath LS-Configuration LE-build.gradle",staticStyle:{opacity:"1"},attrs:{id:"L-Configuration-build.gradle"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M65.5859375,46L65.5859375,50.166666666666664C65.5859375,54.333333333333336,65.5859375,62.666666666666664,65.5859375,71C65.5859375,79.33333333333333,65.5859375,87.66666666666667,65.5859375,91.83333333333333L65.5859375,96","marker-end":"url(#arrowhead12)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead12",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])]),s("g",{staticClass:"edgePath LS-build.gradle LE-build_objects",staticStyle:{opacity:"1"},attrs:{id:"L-build.gradle-build_objects"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M65.5859375,134L65.5859375,138.16666666666666C65.5859375,142.33333333333334,65.5859375,150.66666666666666,65.5859375,159C65.5859375,167.33333333333334,65.5859375,175.66666666666666,65.5859375,179.83333333333334L65.5859375,184","marker-end":"url(#arrowhead13)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead13",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])])]),s("g",{staticClass:"edgeLabels"},[s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-Configuration' L-LE-build.gradle",attrs:{id:"L-L-Configuration-build.gradle"}})])])])]),s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-build.gradle' L-LE-build_objects",attrs:{id:"L-L-build.gradle-build_objects"}})])])])])]),s("g",{staticClass:"nodes"},[s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-Configuration-3",transform:"translate(65.5859375,27)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-57.5859375",y:"-19",width:"115.171875",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-47.5859375,-9)"}},[s("foreignObject",{attrs:{width:"95.171875",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("Configuration")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-build.gradle-4",transform:"translate(65.5859375,115)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-51.3671875",y:"-19",width:"102.734375",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-41.3671875,-9)"}},[s("foreignObject",{attrs:{width:"82.734375",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("build.gradle")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-build_objects-5",transform:"translate(65.5859375,203)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-56.703125",y:"-19",width:"113.40625",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-46.703125,-9)"}},[s("foreignObject",{attrs:{width:"93.40625",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("build_objects")])])])])])])])])])]),s("p",[t._v("Во время фазы конфигурации gradle исполняет конфигурационные скрипты всех проектов если это мультимодульный проект, даже если вы собираете только один из модулей. Так что если логика не относится ко всему мультимодульному проекту, лучше ее помещать в конкретные таски. ")]),s("h3",{attrs:{id:"исполнение"}},[s("a",{attrs:{href:"#%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Исполнение")]),s("p",[t._v("По сути в процессе конфигурации он строит тот самый граф из тасок и в процессе выполнения, исполняет те таски, которые мы указали.")]),s("div",{staticClass:"mermaid"},[s("svg",{staticStyle:{"max-width":"138.28125px"},attrs:{id:"mermaid-1752657941825",width:"100%",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",height:"142",viewBox:"0 0 138.28125 142"}},[s("g",[s("g",{staticClass:"output"},[s("g",{staticClass:"clusters"}),s("g",{staticClass:"edgePaths"},[s("g",{staticClass:"edgePath LS-Execution LE-execute_tasks",staticStyle:{opacity:"1"},attrs:{id:"L-Execution-execute_tasks"}},[s("path",{staticClass:"path",staticStyle:{fill:"none"},attrs:{d:"M69.140625,46L69.140625,50.166666666666664C69.140625,54.333333333333336,69.140625,62.666666666666664,69.140625,71C69.140625,79.33333333333333,69.140625,87.66666666666667,69.140625,91.83333333333333L69.140625,96","marker-end":"url(#arrowhead7)"}}),s("defs",[s("marker",{attrs:{id:"arrowhead7",viewBox:"0 0 10 10",refX:"9",refY:"5",markerUnits:"strokeWidth",markerWidth:"8",markerHeight:"6",orient:"auto"}},[s("path",{staticClass:"arrowheadPath",staticStyle:{"stroke-width":"1","stroke-dasharray":"1, 0"},attrs:{d:"M 0 0 L 10 5 L 0 10 z"}})])])])]),s("g",{staticClass:"edgeLabels"},[s("g",{staticClass:"edgeLabel",staticStyle:{opacity:"1"},attrs:{transform:""}},[s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("rect",{attrs:{rx:"0",ry:"0",width:"0",height:"0"}}),s("foreignObject",{attrs:{width:"0",height:"0"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[s("span",{staticClass:"edgeLabel L-LS-Execution' L-LE-execute_tasks",attrs:{id:"L-L-Execution-execute_tasks"}})])])])])]),s("g",{staticClass:"nodes"},[s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-Execution-2",transform:"translate(69.140625,27)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-45.1328125",y:"-19",width:"90.265625",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-35.1328125,-9)"}},[s("foreignObject",{attrs:{width:"70.265625",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("Execution")])])])])]),s("g",{staticClass:"node default",staticStyle:{opacity:"1"},attrs:{id:"flowchart-execute_tasks-3",transform:"translate(69.140625,115)"}},[s("rect",{staticClass:"label-container",attrs:{rx:"0",ry:"0",x:"-61.140625",y:"-19",width:"122.28125",height:"38"}}),s("g",{staticClass:"label",attrs:{transform:"translate(0,0)"}},[s("g",{attrs:{transform:"translate(-51.140625,-9)"}},[s("foreignObject",{attrs:{width:"102.28125",height:"18"}},[s("div",{staticStyle:{display:"inline-block","white-space":"nowrap"},attrs:{xmlns:"http://www.w3.org/1999/xhtml"}},[t._v("execute_tasks")])])])])])])])])])]),s("p",[t._v("Иннициализация Gradle проекта выполняется командой gradle init.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[s("pre",{staticClass:"language-text"},[s("code",{staticClass:"language-text"},[t._v("$ gradle init")])])]),s("p",[t._v("Далее нужно ответить на несколько вопросов и дождаться окончания инициализации.\nПосле этого в проекте будут созданы файлы: ")]),s("ul",[s("li",[t._v("gradlew(исполняющий файл для Linux подобных систем), gradlew.bat(исполняющий файл для Windows);")]),s("li",[t._v("папка gradle, в которой папка wrapper;"),s("br"),t._v("\nКак раз этот wrapper и запускает скрипты. Gradle использует wrapper, чтобы можно было однозначно понять версию Gradle, которая будет использоваться для сборки."),s("br"),t._v("\nWrapper сам скачает эту версию Graddle, если на машине он не установлен. Поменять версию и откуда его скачивать можно в файле gradle/gradle-wrapper.properties")]),s("li",[t._v("build.gradle, settings.gradle")])]),s("p",[t._v("В "),s("strong",[t._v("settings.gradle")]),t._v(" указано только имя проекта, для мультимодульных проектов также здесь указывается список модулей. ")]),s("p",[t._v("В "),s("strong",[t._v("build.gradle")]),t._v(" имеются следущие секции:")]),s("ul",[s("li",[t._v("секция plugins"),s("br"),t._v("\nЗдесь размещается обычно плагин id: 'java', который используется для сборки java проектов;"),s("br"),t._v("\nЕще существует плагин java-library, он используется если вы хотите поставлять ваше приложение как библиотеку.")])]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("plugins "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    id "),s("span",{staticClass:"token string"},[t._v("'java'")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("ul",[s("li",[t._v("секция repositories"),s("br"),t._v("\nЗдесь можно задать url репозитория из которого будут скачиваться зависимости. ")])]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("repositories "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    maven"),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        url "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("uri")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'https://repo.maven.apache.org/maven2/'")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Для стандартного Maven репозитория есть алиас mavenCentral().")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("repositories "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("mavenCentral")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Также в build.gradle, как и в Maven содержатся group, version, description, java.sourceCompatibility, но в отличие от Maven их указывать не обязательно Gradle сможет сам сгенерировать эти данные.\nПосле компиляции нам доступны таски. В блоке verification есть таска test, которая будет запускать наши тесты. ")]),s("ul",[s("li",[t._v("секция dependencies  ")])]),s("p",[t._v("Есть несколько типов зависимостей:")]),s("ul",[s("li",[t._v("implementation - зависимость доступна и в main и в test директориях")]),s("li",[t._v("testImplementation - зависимость доступна только в test директории")]),s("li",[t._v("testAnnitationProcessor - зависимость, которая генерирует код в рантайме на основе аннотаций, требуется например для lombok")]),s("li",[t._v("compileOnly - deprecated метод, вместо него нужно использовать implementation или testImplementation")])]),s("p",[t._v("После названия метода указывается адрес зависимости, координаты адреса разделяются двоеточием - group:name:version.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("dependencies "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    implementation "),s("span",{staticClass:"token string"},[t._v("'com.codeborne:selenide:6.6.3'")]),t._v("\n    testImplementation "),s("span",{staticClass:"token string"},[t._v("'org.junit.jupiter:junit-jupiter:5.8.2'")]),t._v("\n    testRuntimeOnly "),s("span",{staticClass:"token string"},[t._v("'org.junit.jupiter:junit-jupiter-engine:5.8.2'")]),t._v("\n    testImplementation "),s("span",{staticClass:"token string"},[t._v("'org.projectlombok:lombok:1.18.24'")]),t._v("\n    testAnnotationProcessor "),s("span",{staticClass:"token string"},[t._v("'org.projectlombok:lombok:1.18.24'")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Чтобы после билда запустились тесты, нужно указать каким движком нужно запустить тесты.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("test "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("useJUnitPlatform")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token comment"},[t._v("//для запуска тестов с помощью JUnit5")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Когда зависимость требует какой то сложной конфигурацией она зачастую реализуется плагином. Тогда достаточно подключить плагин и не нужно добавлять несколько зависимостей.")]),s("p",[t._v("Вместо testAnnotationProcessor которую мы прописывали для lombok можно добавить плагин.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("plugins "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    id "),s("span",{staticClass:"token string"},[t._v("'io.freefair.lombok'")]),t._v(" version"),s("span",{staticClass:"token string"},[t._v("'5.3.0'")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("h2",{attrs:{id:"custom-task"}},[s("a",{attrs:{href:"#custom-task","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Custom task")]),s("p",[t._v("Для добавления своей таски используется коллекция tasks и новые таски в нее добавляются с помощью методы register. В метод register нужно передать название таски(по этому названию мы в последствии сможем обращаться к этой таске)\nвторой параметр опционален, в него можно передать тип таски можно использовать стандартный тип Test который был добавлен Java плагином. ")]),s("h3",{attrs:{id:"таска-для-запуска-тестов-из-определенной-директории"}},[s("a",{attrs:{href:"#%D1%82%D0%B0%D1%81%D0%BA%D0%B0-%D0%B4%D0%BB%D1%8F-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA%D0%B0-%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2-%D0%B8%D0%B7-%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%BD%D0%BE%D0%B9-%D0%B4%D0%B8%D1%80%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%B8%D0%B8","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Таска для запуска тестов из определенной директории")]),s("p",[t._v("Отфильтровать тесты которые будут запускаться можно с помощью блока filter в нем есть метод includeTestsMatching.\nНа вход этому методу можно передать wildcard - часть пути до наших тестов со звездочкой. Путь - это имя модуля, пакета, класса в котором тесты находятся.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[s("pre",{staticClass:"language-text"},[s("code",{staticClass:"language-text"},[t._v("src\n├── main\n    ├── java\n        ├── simple\n            ├── automation\n├── test\n    ├── java\n        ├── rest\n        ├── utils\n        ├── web\n            ├── findby\n            ├── simple")])])]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'webtests'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" Test"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("configure")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    filter "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("includeTestsMatching")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"web.simple*"')])]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("h3",{attrs:{id:"указываем-платформу-для-запуска-тестов-из-custom-tasks"}},[s("a",{attrs:{href:"#%D1%83%D0%BA%D0%B0%D0%B7%D1%8B%D0%B2%D0%B0%D0%B5%D0%BC-%D0%BF%D0%BB%D0%B0%D1%82%D1%84%D0%BE%D1%80%D0%BC%D1%83-%D0%B4%D0%BB%D1%8F-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA%D0%B0-%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2-%D0%B8%D0%B7-custom-tasks","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Указываем платформу для запуска тестов из Custom Tasks")]),s("p",[t._v("Чтобы не прописывать в каждой таске, что она должна запускаться с помощью Junit можно выполнить одну настройку для всех тасок с типом test. \nДля этого на контейнере tasks используем метод withType, который выберет все таски с типом Test, и внутри конфигурационного блока используем useJUnitPlatform().")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("withType")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("Test"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("useJUnitPlatform")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("h3",{attrs:{id:"зауск-тестов-из-custom-task"}},[s("a",{attrs:{href:"#%D0%B7%D0%B0%D1%83%D1%81%D0%BA-%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2-%D0%B8%D0%B7-custom-task","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Зауск тестов из Custom Task")]),s("p",[t._v("Выполняем запуск тестов webtests командой:")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[s("pre",{staticClass:"language-text"},[s("code",{staticClass:"language-text"},[t._v("$ ./gradlew webtests")])])]),s("h3",{attrs:{id:"добавляем-еще-одну-custom-таску"}},[s("a",{attrs:{href:"#%D0%B4%D0%BE%D0%B1%D0%B0%D0%B2%D0%BB%D1%8F%D0%B5%D0%BC-%D0%B5%D1%89%D0%B5-%D0%BE%D0%B4%D0%BD%D1%83-custom-%D1%82%D0%B0%D1%81%D0%BA%D1%83","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Добавляем еще одну custom таску")]),s("p",[t._v("Аналогично можно настроить запуск для rest тестов:")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'resttests'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" Test"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("configure")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    filter "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("includeTestsMatching")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"rest*"')])]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("h3",{attrs:{id:"добавляем-зависимость-одной-таски-от-другой"}},[s("a",{attrs:{href:"#%D0%B4%D0%BE%D0%B1%D0%B0%D0%B2%D0%BB%D1%8F%D0%B5%D0%BC-%D0%B7%D0%B0%D0%B2%D0%B8%D1%81%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D1%8C-%D0%BE%D0%B4%D0%BD%D0%BE%D0%B9-%D1%82%D0%B0%D1%81%D0%BA%D0%B8-%D0%BE%D1%82-%D0%B4%D1%80%D1%83%D0%B3%D0%BE%D0%B9","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Добавляем зависимость одной таски от другой")]),s("p",[t._v("Бывает что rest тесты могут использоваться при выполнении web тестов и зачастую бывает удобно прогонять web тесты только если прошли rest тесты.\nДля этого в Gradle есть метод dependsOn с аргументом в виде названия таска, от которой зависит текущая таска. ")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'webtests'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" Test"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("configure")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    filter "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("includeTestsMatching")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"web.simple*"')])]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    dependsOn "),s("span",{staticClass:"token string"},[t._v("'resttests'")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Соответсвенно, при запуске web тестов будут также запущены rest тесты и они выполнятся только если rest тесты пройдут. ")]),s("h3",{attrs:{id:"запуск-независимых-тасок-в-одном-скоупе"}},[s("a",{attrs:{href:"#%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D0%BD%D0%B5%D0%B7%D0%B0%D0%B2%D0%B8%D1%81%D0%B8%D0%BC%D1%8B%D1%85-%D1%82%D0%B0%D1%81%D0%BE%D0%BA-%D0%B2-%D0%BE%D0%B4%D0%BD%D0%BE%D0%BC-%D1%81%D0%BA%D0%BE%D1%83%D0%BF%D0%B5","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Запуск независимых тасок в одном скоупе")]),s("p",[t._v("Но если у нас rest и web тесты работают независимо как разные модули или части системы, мы можем создать еще один таск regress, который будет запускать и те и другие тесты. Используем тот же метод dependsOn но уаазываем и web и rest тесты.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'regress'")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    dependsOn "),s("span",{staticClass:"token string"},[t._v("'webtests'")]),t._v("\n    dependsOn "),s("span",{staticClass:"token string"},[t._v("'resttests'")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Но в таком виде запуска мы не знаем в каком порядке запустятся эти таски. ")]),s("h3",{attrs:{id:"настраиваем-порядок-запуска-тасок"}},[s("a",{attrs:{href:"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%B0%D0%B8%D0%B2%D0%B0%D0%B5%D0%BC-%D0%BF%D0%BE%D1%80%D1%8F%D0%B4%D0%BE%D0%BA-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA%D0%B0-%D1%82%D0%B0%D1%81%D0%BE%D0%BA","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Настраиваем порядок запуска тасок")]),s("p",[t._v("Если мы хотим определить порядок, например, чтобы web тесты запускались после rest тестов, мы можем использовать метод mustRunAfter или shouldRunAfter(является менее строгим и не запускает тесты если из-за зависимости образуется петля).\nЧтобы найти ранее созданный таск используем метод getByName и из него запускаем mustRunAfter с аргументом ввиде названия таски после которой нужно запускать.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'regress'")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    dependsOn "),s("span",{staticClass:"token string"},[t._v("'webtests'")]),t._v("\n    dependsOn "),s("span",{staticClass:"token string"},[t._v("'resttests'")]),t._v("\n    \n    tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("getByName")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'webtests'")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("mustRunAfter")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'resttests'")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Либо при создании таска можно сохранить ее в переменную и тогда можно использовать эти переменные для вызова mustRunAfter.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[s("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" webtests "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'webtests'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" Test"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("configure")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    filter "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("includeTestsMatching")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"web.simple*"')])]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\n"),s("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" resttests "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'resttests'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" Test"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("configure")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    filter "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),s("span",{staticClass:"token function"},[t._v("includeTestsMatching")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"rest*"')])]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\ntasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'regress'")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    dependsOn "),s("span",{staticClass:"token string"},[t._v("'webtests'")]),t._v("\n    dependsOn "),s("span",{staticClass:"token string"},[t._v("'resttests'")]),t._v("\n\n    webtests"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("mustRunAfter")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("resttests"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("h3",{attrs:{id:"запуск-тестов-из-директории-main"}},[s("a",{attrs:{href:"#%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2-%D0%B8%D0%B7-%D0%B4%D0%B8%D1%80%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%B8%D0%B8-main","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Запуск тестов из директории main")]),s("p",[t._v("Если по какой то причине тесты оказались не в папке test, а в папке main, то по умолчанию Gradle найти там тесты не может. Поэтому для того чтобы указать нестандартное место исходников можно использовать блок sourceSets.")]),s("ol",[s("li",[t._v("Добавляем новый sourceSet")])]),s("p",[t._v("Для создания нового сета, просто пишем имя сета и скобку, внутри добавляем блок java чтобы указать свойства которые были добавлены java плагином, compileClasspath и runtimeClasspath, добавляем через += чтобы не затирать текущие значения. \nДобавляем туда путь к папке main(если тесты лежат в папке main) - main.output. Чтобы указать где взять исходники используем свойство srcDir. ")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("sourceSets "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    maintests "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        java "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            compileClasspath "),s("span",{staticClass:"token operator"},[t._v("+=")]),t._v(" main"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("output\n            runtimeClasspath "),s("span",{staticClass:"token operator"},[t._v("+=")]),t._v(" main"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("output\n        "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n        srcDir "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("file")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"src/main/java/simple/automation"')])]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Настраиваем зависимости для добавленного sourceSet")])]),s("p",[t._v("Также нам нужны зависимости из блока dependencies, по умолчанию они в блок sourceSet не попадают.\nДля этого используется блок configurations, в нем указываем имя нашего sourceSet и без пробела пишем Implementation или RuntimeOnly. \nДалее с помощью метода extendsFrom можем указать, что зависимости нужно брать стандартные из testImplementation и testRuntimeOnly.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("configurations"),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    maintestsImplementation"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("extendsFrom")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("testImplementation"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    maintestsRuntimeOnly"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("extendsFrom")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("testRuntimeOnly"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("Добавляем таск для запуска тестов, используя sourceSet")])]),s("p",[t._v("Создаем таск для запуска псевдотестов и указываем, что нужно использовать наш кастомный sourceSet.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'pseudotests'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" Test"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    testClassesDirs "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" sourceSets"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("maintests"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("output"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("classesDirs\n    classPath "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" sourceSets"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("maintests"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("runtimeClasspath\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("Добавляем фильтрацию по тегам JUnit")])]),s("p",[t._v("Теперь нужно отфильтровать псевдотесты чтобы запускались только они. Сделать как в предыдущих тасках мы не можем потому что по имени package simple.automation будут запущены также и web тесты.\nНо можно использовать фильтрацию по тегам Junit. Для этого вызываем метод useJUnitPlatform, но к нему добавляем конфигурационный блок includeTags и тег методов или классов которые хотите запустить.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'pseudotests'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" Test"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    testClassesDirs "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" sourceSets"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("maintests"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("output"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("classesDirs\n    classPath "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" sourceSets"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("maintests"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("runtimeClasspath\n\n    useJUnitPlatform"),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        includeTags "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"pseudo"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("h3",{attrs:{id:"запуск-тестов-с-логированием"}},[s("a",{attrs:{href:"#%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D1%82%D0%B5%D1%81%D1%82%D0%BE%D0%B2-%D1%81-%D0%BB%D0%BE%D0%B3%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%D0%BC","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Запуск тестов с логированием")]),s("p",[t._v("Чтобы добавить уровень логирования INFO при запуске gradlew нужно добавить ключ -i.\nТаком образом мы увидим сообщения которые выводятся в консоль из тестов.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[s("pre",{staticClass:"language-text"},[s("code",{staticClass:"language-text"},[t._v("$ ./gradlew -i pseudotests")])])]),s("h3",{attrs:{id:"отключаем-инкрементальный-билд-при-запуске"}},[s("a",{attrs:{href:"#%D0%BE%D1%82%D0%BA%D0%BB%D1%8E%D1%87%D0%B0%D0%B5%D0%BC-%D0%B8%D0%BD%D0%BA%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9-%D0%B1%D0%B8%D0%BB%D0%B4-%D0%BF%D1%80%D0%B8-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA%D0%B5","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Отключаем инкрементальный билд при запуске")]),s("p",[t._v("Но сразу мы можем их не увидеть из-за инкрементального билда.\nТак как между запусками исходники тестов не поменялись Gradle просто не запустит их.\nЧтобы они запустились перед таской с тестами запустим также таску clean. Это актуально для запуска тестов из контекста main.\nЕсли запускаются тесты из директории test то нужно использовать таску cleanTest.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[s("pre",{staticClass:"language-text"},[s("code",{staticClass:"language-text"},[t._v("$ ./gradlew -i clean pseudotests")])])]),s("h3",{attrs:{id:"отключаем-инкрементальный-билд-глобально-при-настройке-таски"}},[s("a",{attrs:{href:"#%D0%BE%D1%82%D0%BA%D0%BB%D1%8E%D1%87%D0%B0%D0%B5%D0%BC-%D0%B8%D0%BD%D0%BA%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9-%D0%B1%D0%B8%D0%BB%D0%B4-%D0%B3%D0%BB%D0%BE%D0%B1%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE-%D0%BF%D1%80%D0%B8-%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B5-%D1%82%D0%B0%D1%81%D0%BA%D0%B8","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Отключаем инкрементальный билд глобально при настройке таски")]),s("p",[t._v("Чтобы каждый раз не вызывать clean таску можно установить значение upToDateWhen в знасение false для всех тасок с типом Test.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("withType")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("Test"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),s("span",{staticClass:"token function"},[t._v("useJUnitPlatform")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    outputs"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("upToDateWhen "),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token boolean"},[t._v("false")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Если запускаетя несколько независимых тасок с тестами, то Gradle по умолчанию останавливает выполнение на первом упавшем тесте. \nМожно настроить чтобы он все равно переходил к следущей задаче даже если упала предыдущая.\nДля этого можно при запуске добавить ключ --continue")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"text"}},[s("pre",{staticClass:"language-text"},[s("code",{staticClass:"language-text"},[t._v("$ ./gradlew --continue resttests webtests")])])]),s("h3",{attrs:{id:"отключаем-стандартную-таску-test-при-билде"}},[s("a",{attrs:{href:"#%D0%BE%D1%82%D0%BA%D0%BB%D1%8E%D1%87%D0%B0%D0%B5%D0%BC-%D1%81%D1%82%D0%B0%D0%BD%D0%B4%D0%B0%D1%80%D1%82%D0%BD%D1%83%D1%8E-%D1%82%D0%B0%D1%81%D0%BA%D1%83-test-%D0%BF%D1%80%D0%B8-%D0%B1%D0%B8%D0%BB%D0%B4%D0%B5","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Отключаем стандартную таску test при билде")]),s("p",[t._v("Для этого нужно в блоке test присвоить свойству enabled значение false")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("test "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    enabled "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token boolean"},[t._v("false")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("h3",{attrs:{id:"порядок-выполнения-build-скрипта"}},[s("a",{attrs:{href:"#%D0%BF%D0%BE%D1%80%D1%8F%D0%B4%D0%BE%D0%BA-%D0%B2%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F-build-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%B0","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Порядок выполнения build скрипта")]),s("h3",{attrs:{id:"как-добавить-кастомные-экшены-к-таскам"}},[s("a",{attrs:{href:"#%D0%BA%D0%B0%D0%BA-%D0%B4%D0%BE%D0%B1%D0%B0%D0%B2%D0%B8%D1%82%D1%8C-%D0%BA%D0%B0%D1%81%D1%82%D0%BE%D0%BC%D0%BD%D1%8B%D0%B5-%D1%8D%D0%BA%D1%88%D0%B5%D0%BD%D1%8B-%D0%BA-%D1%82%D0%B0%D1%81%D0%BA%D0%B0%D0%BC","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Как добавить кастомные экшены к таскам")]),s("p",[t._v("Создаем еще одну таску, но не указываем тип. В этом случае у таски будет тип DefaultTask и к ней не будет привязано никаких экшенов.\nВыводить текст в консоль можно стандартной командой println, но для реального логирования лучше использовать нормальные логгеры.\nДобавим вывод текста в блок конфигурирования таски, а также перед таской и после нее.\nЧтобы добавить кастомные экшены в таску можно использовать блок doFirst - это действие которое будет выполнено перед стандартными экшенами.\nВ нашем случае таких экшенов нет а для тасок с типом Test таким стандартным экшеном был запуск тестов.\nЕще мы можем использовать блок doLast - запускает кастомные экшены после стандартных. И doFirst и doLast можно использовать несколько раз, тогда они будут исполняться в указанном порядке. ")]),s("p",[t._v("После запуска по тексту в консоли мы видим порядок выполнения.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from build script root"')])]),t._v("\ntasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"gradleTest"')])]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("configure"),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from task root"')])]),t._v("\n    doFirst "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from do first"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    doLast "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from do last"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    doLast "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from do last 2"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\nprintln "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from build script root 2"')])])])])]),s("p",[t._v("Результат выполнения:")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"console"}},[s("pre",{staticClass:"language-console"},[s("code",{staticClass:"language-console"},[t._v("$ ./gradlew clean gradleTest\n\n> Configure project :\nfrom build script root\nfrom build script root 2\nfrom task root\n\n> Task :gradleTest\nfrom do first\nfrom do last\nfrom do last 2\n\nBUILD SUCCESSFUL in 637ms\n2 actionable tasks: 1 executed, 1 up-to-date")])])]),s("p",[t._v("Сначала вполняется код конфигурации, затем код конфигурации самой таски (код внутри таски вне блоков doFirst и doLast), \nа уже дальше выполняются экшены сначала doFirst, потом doLast в порядке в котором они указаны в скрипте.")]),s("blockquote",[s("p",[t._v("Стоит иметь ввиду если бы у нас был многомодульный проект, то сначала вполнился бы код конфигурации из всех build скриптов всех модулей.")])]),s("p",[t._v("Тип таски это прсто класс. Можно создать свой тип. \nДля этого используется метод с аннотацией @TaskAction, при этом класс должен наследоваться от DefaultTask.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[s("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("CustomTask")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("extends")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("DefaultTask")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),s("span",{staticClass:"token annotation punctuation"},[t._v("@TaskAction")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("customAction")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from custom action"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Теперь можно указать наш кастомный тип при регистрации таски. И теперь между doFirst и doLast экшенами выполнился наш кастомный экшен.")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from build script root"')])]),t._v("\ntasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"gradleTest"')])]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" CustomTask"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("configure"),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from task root"')])]),t._v("\n    doFirst "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from do first"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    doLast "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from do last"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    doLast "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from do last 2"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\nprintln "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from build script root 2"')])])])])]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"console"}},[s("pre",{staticClass:"language-console"},[s("code",{staticClass:"language-console"},[t._v("$ ./gradlew clean gradleTest\n\n> Configure project :\nfrom build script root\nfrom build script root 2\nfrom task root\n\n> Task :gradleTest\nfrom do first\nfrom custom action\nfrom do last\nfrom do last 2\n\nBUILD SUCCESSFUL in 1s\n2 actionable tasks: 1 executed, 1 up-to-date")])])]),s("p",[t._v("Таск может состоять из input, actions, output. Добавим input в наш тип. Это можно сделать с помощью переменной с аннотацией @Input.\nПрисвоим ей дефолтное значение и будем использовать в нашем экшене. Теперь стандартный экшен использует значение из input'а \nи мы можем этот input переопределить в конфигурации самой таски. ")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from build script root"')])]),t._v("\ntasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"gradleTest"')])]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" CustomTask"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("configure"),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    input "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"overrided"')])]),t._v("\n    println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from task root"')])]),t._v("\n    doFirst "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from do first"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    doLast "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from do last"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    doLast "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from do last 2"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\nprintln "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from build script root 2"')])]),t._v("\n\n\n"),s("span",{staticClass:"token keyword"},[t._v("class")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("CustomTask")]),t._v(" "),s("span",{staticClass:"token keyword"},[t._v("extends")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("DefaultTask")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),s("span",{staticClass:"token annotation punctuation"},[t._v("@Input")]),t._v("\n    String input "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"default"')])]),t._v("\n\n    "),s("span",{staticClass:"token annotation punctuation"},[t._v("@TaskAction")]),t._v("\n    "),s("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("customAction")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        println "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"from custom action with ')]),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("$")]),s("span",{staticClass:"token expression"},[t._v("input")])]),s("span",{staticClass:"token string"},[t._v('"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("После прогона тестов в build/test-results складывается xml отчет JUnit о прогоне тестов, а в папку reports сгенерированный из него html отчет.\nТакже есть тип таски zip позволяет что-нибудь заархивировать.")]),s("p",[t._v("Имя итогового архива задается через переменную archiveFileName, с помощью distinationDirectory указываем куда будет сложен этот архив и через\nметод from указываем какую именно папку заархивировать. Чтобы указать несколько папок используйте несколько строчек from. ")]),s("p",[t._v("Таска чтобы заархивировать отчет:")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"zipReport"')])]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" Zip"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("configure"),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    archiveFileName "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token string"},[t._v("'report.zip'")]),t._v("\n    distinationDirectory "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("file")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"')]),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("$")]),s("span",{staticClass:"token expression"},[t._v("buildDir")])]),s("span",{staticClass:"token string"},[t._v('/reports"')])]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    from "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"')]),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("$")]),s("span",{staticClass:"token expression"},[t._v("buildDir")])]),s("span",{staticClass:"token string"},[t._v('/reports/tests"')])]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Также потом его нужно куда нибудь скопировать. Для этого есть тип таски Copy. В ней указываем через from откуда взять файл(также можно указать несколько from),\nа в into указываем куда скопировать. ")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("tasks"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("register")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string"},[t._v("'copyReport'")]),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" Copy"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("configure"),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    from "),s("span",{staticClass:"token function"},[t._v("file")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"')]),s("span",{staticClass:"token interpolation"},[s("span",{staticClass:"token interpolation-punctuation punctuation"},[t._v("$")]),s("span",{staticClass:"token expression"},[t._v("buildDir")])]),s("span",{staticClass:"token string"},[t._v('/reports/report.zip"')])]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    into "),s("span",{staticClass:"token function"},[t._v("file")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"out"')])]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("p",[t._v("Еще одна полезная таска это jar - позволяет заархивировать приложение в jar файл. \nУ него в блоке manifest в свойстве attributes можно задать атрибут Main-Class который указыывает класс в котром находится исполняемый метод main \nа в блоке from откуда взять скомпилированные классы ")]),s("p",[t._v("Jar собирается в папку build/libs и его можно запустить через команду java -jar ")]),s("div",{staticClass:"gridsome-highlight",attrs:{"data-language":"groovy"}},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("jar "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    manifest "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        attributes "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"Main-Class"')])]),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token interpolation-string"},[s("span",{staticClass:"token string"},[t._v('"simple.automation.Main"')])]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    from "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        configurations"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("compile"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("collect "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v(" it"),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("isDirectory")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("?")]),t._v(" it "),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("zipTree")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("it"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")])])])]),s("h2",{attrs:{id:"источник-информации"}},[s("a",{attrs:{href:"#%D0%B8%D1%81%D1%82%D0%BE%D1%87%D0%BD%D0%B8%D0%BA-%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D0%B8","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("Источник информации")]),s("div",{staticClass:"youtube-embed"},[s("div",{staticStyle:{width:"100%",margin:"0 auto"}},[s("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[s("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/qYIz6URLxbU",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),s("h2",{attrs:{id:"todo"}},[s("a",{attrs:{href:"#todo","aria-hidden":"true"}},[s("span",{staticClass:"icon icon-link"})]),t._v("TODO")]),s("div",{staticClass:"youtube-embed"},[s("div",{staticStyle:{width:"100%",margin:"0 auto"}},[s("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[s("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/WOBok2u-SL8",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])]),s("div",{staticClass:"youtube-embed"},[s("div",{staticStyle:{width:"100%",margin:"0 auto"}},[s("div",{staticStyle:{position:"relative","padding-bottom":"56.25%","padding-top":"25px",height:"0"}},[s("iframe",{staticStyle:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},attrs:{src:"https://www.youtube-nocookie.com/embed/NZJTYPLb0iE",allow:"autoplay; encrypted-media",allowfullscreen:""}})])])])])}),[],!1,null,null,null);"function"==typeof l&&l(g),"function"==typeof v&&v(g);s.default=g.exports}}]);