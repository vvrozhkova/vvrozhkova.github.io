(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{UQSp:function(D,t,i){"use strict";t.a={name:"VueRemarkRoot",render(D){return D("div",null,this.$slots.default)}}},xcFJ:function(D,t,i){"use strict";i.r(t);var a=i("KHd+"),e=i("UQSp"),B=i("oCYn");function r(D){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(D){return typeof D}:function(D){return D&&"function"==typeof Symbol&&D.constructor===Symbol&&D!==Symbol.prototype?"symbol":typeof D})(D)}B.a.config.optionMergeStrategies;var n={VueRemarkRoot:e.a},s=function(D){var t=D.options.components=D.options.components||{},i=D.options.computed=D.options.computed||{};Object.keys(n).forEach((function(D){"object"===r(n[D])&&"function"==typeof n[D].render||"function"==typeof n[D]&&"function"==typeof n[D].options.render?t[D]=n[D]:i[D]=function(){return n[D]}}))},l=B.a.config.optionMergeStrategies,o="__vueRemarkFrontMatter",d={excerpt:null,title:"Модели разработки ПО",category:"manual",description:"Модели разработки ПО",tags:["Модели разработки ПО"],icon:"fas fa-bug",image:"null",date:"2022-05-21T00:00:00.000Z",keywords:"qa, Модели разработки ПО",order:5,links:[{items:[{title:"1. Тестирование, Quality control, Quality assurance",link:"/testirovanie-quality-control-quality-assurance/"},{title:"2. Понятие качества, международные стандарты качества",link:"/ponyatie-kachestva-mezhdunarodnye-standarty-kachestva/"},{title:"3. Жизненный цикл дефекта",link:"/zhiznennyj-czikl-defekta/"},{title:"4. Жизненный цикл разработки ПО, SDLC (Software Development LifeCycle)",link:"/zhiznennyj-czikl-razrabotki-po-sdlc-software-development-life-cycle/"},{title:"5. Модели разработки ПО",link:"/modeli-razrabotki-po/"},{title:"6. Методологии разработки ПО (Scrum, Kanban, RUP, DSDM, MSF, XP)",link:"/metodologii-razrabotki-po-scrum-kanban-rup-dsdm-msf-xp"},{title:"7. Жизненный цикл тестирования приложений, STLC (Software Testing LifeCycle)",link:"/zhiznennyj-czikl-testirovaniya-prilozhenij-stlc-software-testing-life-cycle/"},{title:"8. Принципы тестирования, Agile принципы тестирования",link:"/princzipy-testirovaniya-agile-princzipy-testirovaniya/"},{title:"9. Практики и подходы тестирования",link:"/praktiki-i-podhody-testirovaniya/"},{title:"10. Виды тестирования",link:"/vidy-testirovaniya/"},{title:"11. Уровни тестирования",link:"/urovni-testirovaniya/"},{title:"12. Техники тест-дизайна",link:"/tehniki-test-dizajna/"},{title:"13. Тестовая документация",link:"/testovaya-dokumentacziya/"}]}]};var c=function(D){D.options[o]&&(D.options[o]=d),B.a.util.defineReactive(D.options,o,d),D.options.computed=l.computed({$frontmatter:function(){return D.options[o]}},D.options.computed)},p=Object(a.a)({},(function(){var D=this,t=D._self._c;return t("VueRemarkRoot",[t("h2",{attrs:{id:"1-code-and-fix---модель-кодирования-и-устранения-ошибок"}},[t("a",{attrs:{href:"#1-code-and-fix---%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C-%D0%BA%D0%BE%D0%B4%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B8-%D1%83%D1%81%D1%82%D1%80%D0%B0%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BE%D1%88%D0%B8%D0%B1%D0%BE%D0%BA","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("1. Code and fix - Модель кодирования и устранения ошибок")]),t("p",[D._v("Совершенно простая модель, характерная для студентов ВУЗов. Именно по этой модели большинство студентов разрабатывают, например лабораторные работы. ")]),t("p",[t("img",{attrs:{src:"https://leonardo.osnova.io/611da7e3-32e5-0dd5-8198-cb6d23d19310/-/preview/2100/-/format/webp/",alt:"Code and fix - Модель кодирования и устранения ошибок"}})]),t("p",[D._v("Это одна из самых старых моделей разработки: она очень проста и подойдет стартапам, где команда невелика, нет особых конфликтов, вы знаете, что хотите сделать и имеете представление, как это сделать.")]),t("p",[D._v("Как работает Code-and-Fix: у нас есть понимание, что мы хотим сделать. Начинаем программировать, затем смотрим, что получилось. Выявляем баги, правим их и снова смотрим — и так, пока наш продукт не начнет работать.")]),t("p",[D._v("Данная модель имеет следующий алгоритм:")]),t("ol",[t("li",[D._v("Постановка задачи")]),t("li",[D._v("Выполнение")]),t("li",[D._v("Проверка результата")]),t("li",[D._v("При необходимости переход к первому пункту")])]),t("h3",{attrs:{id:"преимущества"}},[t("a",{attrs:{href:"#%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Преимущества")]),t("ul",[t("li",[D._v("не нужно тратить время на планы, документацию, митинги.")])]),t("h3",{attrs:{id:"недостатки"}},[t("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Недостатки")]),t("ul",[t("li",[D._v("иногда исправление одной ошибки приводит к тому, что у вас ломается вся система. В итоге приходится переделывать — снова и снова. Поэтому когда-то давно программисты, которые мучились с этой моделью разработки, решили уйти от ее мнимой простоты и изобрести другую.")])]),t("p",[D._v("Модель ужасно устаревшая. Характерна для 1960-1970 гг., поэтому преимуществ перед следующими моделями практически не имеет, а недостатки на лицо.")]),t("h2",{attrs:{id:"2-waterfall-model---каскадная-или-поэтапная-разработка-водопад"}},[t("a",{attrs:{href:"#2-waterfall-model---%D0%BA%D0%B0%D1%81%D0%BA%D0%B0%D0%B4%D0%BD%D0%B0%D1%8F-%D0%B8%D0%BB%D0%B8-%D0%BF%D0%BE%D1%8D%D1%82%D0%B0%D0%BF%D0%BD%D0%B0%D1%8F-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0-%D0%B2%D0%BE%D0%B4%D0%BE%D0%BF%D0%B0%D0%B4","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v('2. Waterfall Model - Каскадная или поэтапная разработка ("Водопад")')]),t("p",[D._v("Процесс создания программного обеспечения представляет собой поток, последовательно проходящий фазы анализа, проектирования, реализации, тестирования, интеграции и поддержки.")]),t("p",[D._v("Каждая следующая стадия начинается только после того, как заканчивается предыдущая. Так обычно строится работа над крупными проектами с длительным сроком внедрения.")]),t("p",[t("img",{attrs:{src:"https://habrastorage.org/r/w1560/files/6e2/e05/23f/6e2e0523f58d4d74816ae0bcf46e2fa2.jpg",alt:"Каскадная модель (waterfall)"}}),t("img",{attrs:{src:"https://leonardo.osnova.io/0e330a8b-7f21-f8fb-872c-986314b4d7da/-/preview/2100/-/format/webp/",alt:"Каскадная модель (waterfall)"}}),t("img",{attrs:{src:"https://evergreens.com.ua/assets/images/articles/systems/waterfall.png",alt:"Каскадная модель (waterfall)"}})]),t("p",[D._v("Имеет ряд преимуществ перед алгоритмом предыдущей модели, но также имеет и ряд весомых недостатков. ")]),t("h3",{attrs:{id:"преимущества-1"}},[t("a",{attrs:{href:"#%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0-1","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Преимущества")]),t("ul",[t("li",[D._v("Последовательное выполнение этапов проекта в строгом фиксированном порядке;")]),t("li",[D._v("высокий уровень формализации процессов => высокая прозрачность разработки и фаз проекта;")]),t("li",[D._v("большое количество документации;")]),t("li",[D._v("Разработку просто контролировать. Заказчик всегда знает, чем сейчас заняты программисты, может управлять сроками и стоимостью;")]),t("li",[D._v("Стоимость проекта определяется на начальном этапе. Все шаги запланированы уже на этапе согласования договора, ПО пишется непрерывно «от и до»;")]),t("li",[D._v("Позволяет оценивать качество продукта на каждом этапе;")]),t("li",[D._v("Не нужно нанимать тестировщиков с серьёзной технической подготовкой. Тестировщики смогут опираться на подробную техническую документацию;")])]),t("h3",{attrs:{id:"недостатки-1"}},[t("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8-1","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Недостатки")]),t("ul",[t("li",[D._v("Жесткая последовательность этапов жизненного цикла без возможности возврата на предыдущий этап;")]),t("li",[D._v("Заказчик видит готовый продукт в конце разработки и только тогда может дать обратную связь. Велика вероятность, что результат его не устроит.")]),t("li",[D._v("Все требования должны быть известны в начале жизненного цикла проекта;")]),t("li",[D._v("Разработчики пишут много технической документации, что задерживает работы. Чем обширнее документация у проекта, тем больше изменений нужно вносить и дольше их согласовывать.")]),t("li",[D._v("Тестирование начинается на последних этапах разработки. Если в требованиях к продукту была допущена ошибка, то исправить её будет стоить дорого. Тестировщики обнаружат её, когда разработчик уже написал код, а технические писатели — документацию.")]),t("li",[D._v("Возникает необходимость в жёстком управлении и регулярном контроле, иначе проект быстро выйдет из графиков")]),t("li",[D._v("Отсутствует возможность учесть переделку, весь проект делается за один раз")]),t("li",[D._v("Не соответствует реальным условиям разработки программного продукта")])]),t("p",[D._v("«Водопад» подходит для разработки проектов в медицинской и космической отрасли, где уже сформирована обширная база документов (СНиПов и спецификаций), на основе которых можно написать требования к новому ПО. ")]),t("p",[D._v("При работе с каскадной моделью основная задача — написать подробные требования к разработке. На этапе тестирования не должно выясниться, что в них есть ошибка, которая влияет на весь продукт.")]),t("h3",{attrs:{id:"водоворот-или-каскадная-модель-с-промежуточным-контролем"}},[t("a",{attrs:{href:"#%D0%B2%D0%BE%D0%B4%D0%BE%D0%B2%D0%BE%D1%80%D0%BE%D1%82-%D0%B8%D0%BB%D0%B8-%D0%BA%D0%B0%D1%81%D0%BA%D0%B0%D0%B4%D0%BD%D0%B0%D1%8F-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C-%D1%81-%D0%BF%D1%80%D0%BE%D0%BC%D0%B5%D0%B6%D1%83%D1%82%D0%BE%D1%87%D0%BD%D1%8B%D0%BC-%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D0%B5%D0%BC","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("«Водоворот» или каскадная модель с промежуточным контролем")]),t("p",[D._v("В этой модели предусмотрен промежуточный контроль за счет обратных связей. Но это достоинство порождает и недостатки. Затраты на реализацию проекта при таком подходе возрастают практически в 10 раз. Эта модель, как вы уже поняли, является незначительной модификацией предыдущей.")]),t("p",[t("img",{attrs:{src:"https://intuit.ru/EDI/08_01_19_2/1546899581-11707/tutorial/145/objects/2/files/02_04.gif",alt:"«Водоворот» или каскадная модель с промежуточным контролем"}})]),t("p",[D._v("При реальной работе в соответствии с моделью, допускающей движение только в одну сторону, обычно возникают проблемы при обнаружении недоработок и ошибок, сделанных на ранних этапах. Но еще более тяжело иметь дело с изменениями окружения, в котором разрабатывается ПО (это могут быть изменения требований, смена подрядчиков, изменения политик разрабатывающей или эксплуатирующей организации, изменения отраслевых стандартов, появление конкурирующих продуктов и пр.).")]),t("h2",{attrs:{id:"3-v-model-v-образная-модель-разработка-через-тестирование"}},[t("a",{attrs:{href:"#3-v-model-v-%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D0%BD%D0%B0%D1%8F-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("3. V-model (V-образная модель, разработка через тестирование)")]),t("p",[D._v("Это усовершенствованная каскадная модель, в которой заказчик с командой программистов одновременно составляют требования к системе и описывают, как будут тестировать её на каждом этапе. ")]),t("p",[D._v("История этой модели начинается в 1980-х. Имеет обратные связи с каждым этапом жизненного цикла, при этом порождает очень весомый недостаток: 10-ти кратное увеличение затрат на разработку.")]),t("p",[D._v("Является одной из основных практик экстремального программирования и предполагает регулярное тестирование продукта во время разработки.")]),t("p",[t("img",{attrs:{src:"https://habrastorage.org/r/w1560/files/22d/21f/18f/22d21f18ffb244d082e181c813d4ff15.jpg",alt:"V модель — разработка через тестирование"}}),t("img",{attrs:{src:"https://leonardo.osnova.io/4a602e4f-745f-b2cc-18de-bd9cdd148b55/-/preview/2100/-/format/webp/",alt:"V модель — разработка через тестирование"}})]),t("h3",{attrs:{id:"преимущества-2"}},[t("a",{attrs:{href:"#%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0-2","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Преимущества")]),t("ul",[t("li",[t("strong",[D._v("Минимизация рисков:")]),t("br"),D._v("\nV-образная модель делает проект более прозрачным и повышает качество контроля проекта путём стандартизации промежуточных целей и описания соответствующих им результатов и ответственных лиц. Это позволяет выявлять отклонения в проекте и риски на ранних стадиях и улучшает качество управления проектов, уменьшая риски.")]),t("li",[t("strong",[D._v("Повышение и гарантии качества:")]),t("br"),D._v("\nV-Model — стандартизованная модель разработки, что позволяет добиться от проекта результатов желаемого качества. Промежуточные результаты могут быть проверены на ранних стадиях. Универсальное документирование облегчает читаемость, понятность и проверяемость.")]),t("li",[t("strong",[D._v("Уменьшение общей стоимости проекта:")]),t("br"),D._v("\nРесурсы на разработку, производство, управление и поддержку могут быть заранее просчитаны и проконтролированы. Получаемые результаты также универсальны и легко прогнозируются. Это уменьшает затраты на последующие стадии и проекты.")]),t("li",[t("strong",[D._v("Повышение качества коммуникации между участниками проекта:")]),t("br"),D._v("\nУниверсальное описание всех элементов и условий облегчает взаимопонимание всех участников проекта. Таким образом, уменьшаются неточности в понимании между пользователем, покупателем, поставщиком и разработчиком.")])]),t("h3",{attrs:{id:"недостатки-2"}},[t("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8-2","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Недостатки")]),t("ul",[t("li",[D._v("Если при разработке архитектуры была допущена ошибка, то вернуться и исправить её будет стоить дорого, как и в «водопаде».")])]),t("p",[D._v("V-модель подходит для проектов, в которых важна надёжность и цена ошибки очень высока. Например, при разработке подушек безопасности для автомобилей или систем наблюдения за пациентами в клиниках. ")]),t("h2",{attrs:{id:"4-incremental-model---инкрементная-модель"}},[t("a",{attrs:{href:"#4-incremental-model---%D0%B8%D0%BD%D0%BA%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D0%BD%D0%B0%D1%8F-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("4. Incremental Model - Инкрементная модель")]),t("p",[D._v("Модель приращения продукта позволяет параллельно выполнять ряд задач с непрерывным анализом результатов и корректировкой предыдущих этапов работы. Это более «скоростная» разработка для большого штата квалифицированных программистов.")]),t("p",[D._v("Это модель разработки по частям (increment в переводе с англ. — приращение) уходит корнями в 1930-е. Рассмотрим её на примере создания социальной сети.")]),t("p",[D._v("Заказчик решил, что хочет запустить соцсеть, и написал подробное техническое задание. Программисты предложили реализовать основные функции — страницу с личной информацией и чат. А затем протестировать на пользователях, «взлетит или нет».")]),t("p",[D._v("Команда разработки показывает продукт заказчику и выпускает его на рынок. Если и заказчику, и пользователям социальная сеть нравится, работа над ней продолжается, но уже по частям.")]),t("p",[D._v("Программисты параллельно создают функциональность для загрузки фотографий, обмена документами, прослушивания музыки и других действий, согласованных с заказчиком. Инкремент за инкрементом они совершенствуют продукт, приближаясь к описанному в техническом задании.")]),t("p",[t("img",{attrs:{src:"https://habrastorage.org/r/w1560/files/8b7/4e2/a86/8b74e2a8640d4ad59e7ac82b991be970.jpg",alt:"Incremental Model - Инкрементная модель"}}),t("img",{attrs:{src:"https://leonardo.osnova.io/5a2d52b7-7a12-f7d5-9f09-4054d8192694/-/preview/2100/-/format/webp/",alt:"Incremental Model - Инкрементная модель"}})]),t("h3",{attrs:{id:"преимущества-3"}},[t("a",{attrs:{href:"#%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0-3","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Преимущества")]),t("ul",[t("li",[D._v("Не нужно вкладывать много денег на начальном этапе. Заказчик оплачивает создание основных функций, получает продукт, «выкатывает» его на рынок — и по итогам обратной связи решает, продолжать ли разработку.")]),t("li",[D._v("Можно быстро получить фидбэк от пользователей и оперативно обновить техническое задание. Так снижается риск создать продукт, который никому не нужен.")]),t("li",[D._v("Ошибка обходится дешевле. Если при разработке архитектуры была допущена ошибка, то исправить её будет стоить не так дорого, как в «водопаде» или V-образной модели.")])]),t("h3",{attrs:{id:"недостатки-3"}},[t("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8-3","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Недостатки")]),t("ul",[t("li",[D._v("Каждая команда программистов разрабатывает свою функциональность и может реализовать интерфейс продукта по-своему. Чтобы этого не произошло, важно на этапе обсуждения техзадания объяснить, каким он будет, чтобы у всех участников проекта сложилось единое понимание. ")]),t("li",[D._v("Разработчики будут оттягивать доработку основной функциональности и «пилить мелочёвку». Чтобы этого не случилось, менеджер проекта должен контролировать, чем занимается каждая команда.")])]),t("p",[D._v("Инкрементная модель подходит для проектов, в которых точное техзадание прописано уже на старте, а продукт должен быстро выйти на рынок.")]),t("h2",{attrs:{id:"5-iterative-model---итеративная-или-итерационная-модель"}},[t("a",{attrs:{href:"#5-iterative-model---%D0%B8%D1%82%D0%B5%D1%80%D0%B0%D1%82%D0%B8%D0%B2%D0%BD%D0%B0%D1%8F-%D0%B8%D0%BB%D0%B8-%D0%B8%D1%82%D0%B5%D1%80%D0%B0%D1%86%D0%B8%D0%BE%D0%BD%D0%BD%D0%B0%D1%8F-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("5. Iterative Model - Итеративная (или итерационная) модель")]),t("p",[D._v("Это модель, при которой заказчик не обязан понимать, какой продукт хочет получить в итоге, и может не прописывать сразу подробное техзадание.")]),t("p",[D._v("Рассмотрим на примере создания мессенджера, как эта модель работает.")]),t("p",[D._v("Заказчик решил, что хочет создать мессенджер. Разработчики сделали приложение, в котором можно добавить друга и запустить чат на двоих.\nМессенджер «выкатили» в магазин приложений, пользователи начали его скачивать и активно использовать. Заказчик понял, что продукт пользуется популярностью, и решил его доработать.")]),t("p",[D._v("Программисты добавили в мессенджер возможность просмотра видео, загрузки фотографий, записи аудиосообщений. Они постепенно улучшают функциональность приложения, адаптируют его к требованиям рынка.")]),t("p",[t("img",{attrs:{src:"https://habrastorage.org/r/w1560/files/880/01d/a78/88001da784ab41ec880f84a7bb204a0b.jpg",alt:"Iterative Model - Итеративная (или итерационная) модель"}}),t("img",{attrs:{src:"https://leonardo.osnova.io/ba33e029-3df5-ec0c-35b0-3b6060f93f81/-/preview/2100/-/format/webp/",alt:"Iterative Model - Итеративная (или итерационная) модель"}}),t("img",{attrs:{src:"https://evergreens.com.ua/assets/images/articles/systems/iteration%20mod.png",alt:"Iterative Model - Итеративная (или итерационная) модель"}})]),t("h3",{attrs:{id:"преимущества-4"}},[t("a",{attrs:{href:"#%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0-4","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Преимущества")]),t("ul",[t("li",[D._v("Быстрый выпуск минимального продукта даёт возможность оперативно получать обратную связь от заказчика и пользователей. А значит, фокусироваться на наиболее важных функциях ПО и улучшать их в соответствии с требованиями рынка и пожеланиями клиента.")]),t("li",[D._v("Постоянное тестирование пользователями позволяет быстро обнаруживать и устранять ошибки.")])]),t("h3",{attrs:{id:"недостатки-4"}},[t("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8-4","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Недостатки")]),t("ul",[t("li",[D._v("Использование на начальном этапе баз данных или серверов — первые сложно масштабировать, а вторые не выдерживают нагрузку. Возможно, придётся переписывать большую часть приложения.")]),t("li",[D._v("Отсутствие фиксированного бюджета и сроков. Заказчик не знает, как выглядит конечная цель и когда закончится разработка.")]),t("li",[D._v("Становится сложнее адекватно оценить текущее состояние проекта и спланировать долгосрочное развитие событий, а также предсказать сроки и ресурсы, необходимые для обеспечения определенного качества результата.")])]),t("p",[D._v("Итеративная модель подходит для работы над большими проектами с неопределёнными требованиями, либо для задач с инновационным подходом, когда заказчик не уверен в результате. ")]),t("p",[D._v("На основе итеративной модели была создана Agile — не модель и не методология, а скорее подход к разработке.")]),t("p",[t("img",{attrs:{src:"https://s.dou.ua/storage-files/dev-cycle-iter.gif"}})]),t("h2",{attrs:{id:"6-spiral-model--спиральная-модель"}},[t("a",{attrs:{href:"#6-spiral-model--%D1%81%D0%BF%D0%B8%D1%80%D0%B0%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("6. Spiral Model — спиральная модель")]),t("p",[D._v("Спиральная модель представляет собой процесс разработки программного обеспечения, сочетающий в себе как проектирование, так и постадийное прототипирование с целью сочетания преимуществ восходящей и нисходящей концепции. ")]),t("p",[D._v("Рассмотрим, как функционирует эта модель, на примере разработки системы «Умный дом». ")]),t("p",[D._v("Заказчик решил, что хочет сделать такую систему, и заказал программистам реализовать управление чайником с телефона. Они начали действовать по модели «водопад»: выслушали идею, провели анализ предложений на рынке, обсудили с заказчиком архитектуру системы, решили, как будут её реализовывать, разработали, протестировали и «выкатили» конечный продукт.")]),t("p",[D._v("Заказчик оценил результат и риски: насколько нужна пользователям следующая версия продукта — уже с управлением телевизором. Рассчитал сроки, бюджет и заказал разработку. ")]),t("p",[D._v("Программисты действовали по каскадной модели и представили заказчику более сложный продукт, разработанный на базе первого.")]),t("p",[D._v("Заказчик подумал, что пора создать функциональность для управления холодильником с телефона. Но, анализируя риски, понял, что в холодильник сложно встроить Wi-Fi-модуль, да и производители не заинтересованы в сотрудничестве по этому вопросу. Следовательно, риски превышают потенциальную выгоду.")]),t("p",[D._v("На основе полученных данных заказчик решил прекратить разработку и совершенствовать имеющуюся функциональность, чтобы со временем понять, как развивать систему «Умный дом».")]),t("p",[D._v("Спиральная модель похожа на инкрементную, но здесь гораздо больше времени уделяется оценке рисков. С каждым новым витком спирали процесс усложняется. Эта модель часто используется в исследовательских проектах и там, где высоки риски. ")]),t("p",[t("img",{attrs:{src:"https://leonardo.osnova.io/595fed17-42da-c48b-1f17-f314f31301a4/-/preview/2100/-/format/webp/",alt:"Spiral Model — спиральная модель"}}),t("img",{attrs:{src:"https://evergreens.com.ua/assets/images/articles/systems/spinner%20model.png",alt:"Spiral Model — спиральная модель"}})]),t("h3",{attrs:{id:"преимущества-5"}},[t("a",{attrs:{href:"#%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0-5","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Преимущества")]),t("ul",[t("li",[D._v("Быстрое получение результата")]),t("li",[D._v("Повышение конкурентоспособности")]),t("li",[D._v("При изменении требований, не придется начинать все с «нуля».")]),t("li",[D._v("Большое внимание уделяется проработке рисков")])]),t("h3",{attrs:{id:"недостатки-5"}},[t("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8-5","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Недостатки")]),t("ul",[t("li",[D._v("Отсутствие регламентации стадий")]),t("li",[D._v("Есть риск застрять на начальном этапе — бесконечно совершенствовать первую версию продукта и не продвинуться к следующим.")]),t("li",[D._v("Разработка длится долго и стоит дорого.")])]),t("p",[D._v("Используя эту модель, заказчик и команда разработчиков серьёзно анализируют риски проекта и выполняют его итерациями. Последующая стадия основывается на предыдущей, а в конце каждого витка — цикла итераций — принимается решение, продолжать ли проект. Эту модель начали использовать в 1988 году.")]),t("h2",{attrs:{id:"7-chaos-model--модель-хаоса"}},[t("a",{attrs:{href:"#7-chaos-model--%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C-%D1%85%D0%B0%D0%BE%D1%81%D0%B0","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("7. Chaos model — модель хаоса")]),t("p",[D._v("Вкратце Стратегия хаоса — это стратегия разработки программного обеспечения основанная на модели хаоса. Главное правило — это,всегда решать наиболее важную задачу первой.")]),t("p",[D._v("Её создатель Л.Б.С.Ракун отмечает, что такие модели управления проектами, как спиральная модель и каскадная модель, хотя и хороши в управлении расписаниями и персоналом, не обеспечивают методами устранения ошибок и решениями других технических задач, не помогают ни в управлении конечными сроками, ни в реагировании на запросы клиентов. Модель хаоса — это инструмент пытающийся помочь понять эти ограничения и восполнить пробелы.")]),t("h3",{attrs:{id:"преимущества-6"}},[t("a",{attrs:{href:"#%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0-6","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Преимущества")]),t("ul",[t("li",[D._v("учитывает взаимодействие между членами команды при внесении изменений в код;")]),t("li",[D._v("ограничивает риск чрезмерного проектирования решения")]),t("li",[D._v("прозрачность между желаниями руководства высокого уровня и пониманием командой разработчиков проблем и приоритетов.")])]),t("h3",{attrs:{id:"недостатки-6"}},[t("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8-6","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Недостатки")]),t("ul",[t("li",[D._v("критическая необходимость включить единый дизайн на уровне кода, который необходимо выполнить для удовлетворения требований на уровне программы.")])]),t("h2",{attrs:{id:"8-prototype-model--прототипная-модель"}},[t("a",{attrs:{href:"#8-prototype-model--%D0%BF%D1%80%D0%BE%D1%82%D0%BE%D1%82%D0%B8%D0%BF%D0%BD%D0%B0%D1%8F-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("8. Prototype Model — прототипная модель")]),t("p",[D._v("Данная модель основывается на разработке прототипов и прототипирования продукта.")]),t("p",[D._v("Прототипирование используется на ранних стадиях жизненного цикла программного обеспечения:")]),t("ul",[t("li",[D._v("Прояснить не ясные требования (прототип UI)")]),t("li",[D._v("Выбрать одно из ряда концептуальных решений (реализация сцинариев)")]),t("li",[D._v("Проанализировать осуществимость проекта")])]),t("h3",{attrs:{id:"классификация-протопипов"}},[t("a",{attrs:{href:"#%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F-%D0%BF%D1%80%D0%BE%D1%82%D0%BE%D0%BF%D0%B8%D0%BF%D0%BE%D0%B2","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Классификация протопипов")]),t("ul",[t("li",[D._v("Горизонтальные прототипы — моделирует исключительно UI не затрагивая логику обработки и базу данных.")]),t("li",[D._v("Вертикальные прототипы — проверка архитектурных решений.")]),t("li",[D._v("Одноразовые прототипы — для быстрой разработки.")]),t("li",[D._v("Эволюционные прототипы — первое приближение эволюционной системы.")])]),t("h2",{attrs:{id:"9-rad-model-или-rapid-application-development-model---модель-быстрой-разработки-приложений"}},[t("a",{attrs:{href:"#9-rad-model-%D0%B8%D0%BB%D0%B8-rapid-application-development-model---%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C-%D0%B1%D1%8B%D1%81%D1%82%D1%80%D0%BE%D0%B9-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B8-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B9","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("9. RAD-Model, или Rapid Application Development Model - Модель быстрой разработки приложений")]),t("p",[t("img",{attrs:{src:"https://leonardo.osnova.io/69673b21-a423-772e-3a1e-aca50d529348/-/preview/2100/-/format/webp/",alt:"RAD-Model, или Rapid Application Development Model - Модель быстрой разработки"}})]),t("p",[D._v("Разновидность инкрементной модели. Появилась в конце 80-х годов и стала одной из попыток создания гибкого процесса разработки.")]),t("p",[D._v("RAD предусматривает небольшие команды разработки,сроки до 4 месяцев и активное привлечение заказчика с ранних этапов. Данная методология опирается на требования, но также существует возможность их изменений в период разработки системы. Обязательное требование этой модели — проект должен легко разбиваться на небольшие части, которые при необходимости могут создаваться параллельно друг другу несколькими командами. Такой подход позволяет сократить расходы и свести время разработки к минимуму.")]),t("h3",{attrs:{id:"преимущества-7"}},[t("a",{attrs:{href:"#%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0-7","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Преимущества")]),t("ul",[t("li",[D._v("быстрое развитие продукта;")]),t("li",[D._v("разработка многоразовых мелких компонентов;")]),t("li",[D._v("повторный обзор в процессе разработки;")]),t("li",[D._v("интеграция повторно используемых компонентов на начальном уровне, следовательно, экономит усилия, несмотря на то, что не добавляются более крупные модули;")]),t("li",[D._v("конструктивная реакция.")])]),t("h3",{attrs:{id:"недостатки-7"}},[t("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8-7","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Недостатки")]),t("ul",[t("li",[D._v("требуется много усилий для сбора всех требований на начальном этапе.")]),t("li",[D._v("навыки моделирования имеют много зависимостей.")]),t("li",[D._v("не подходит для малобюджетного проекта.")])]),t("h2",{attrs:{id:"10-модель-большого-взрыва-big-bang-model"}},[t("a",{attrs:{href:"#10-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C-%D0%B1%D0%BE%D0%BB%D1%8C%D1%88%D0%BE%D0%B3%D0%BE-%D0%B2%D0%B7%D1%80%D1%8B%D0%B2%D0%B0-big-bang-model","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("10. Модель Большого Взрыва (Big Bang Model)")]),t("p",[D._v("Big Bang Model не имеет определенного процесса. Деньги и усилия объединяются, поскольку вход и выход представляют собой разработанный продукт, который может совпадать, а может и не совпадать с тем, что нужно заказчику. Модель Большого Взрыва не требует особого планирования и составления графиков. Разработчик выполняет анализ требований и кодирование, а также разрабатывает продукт в соответствии с его пониманием. Эта модель используется только для небольших проектов. Нет команды тестирования и формального тестирования не проводится, и это может быть причиной провала проекта.")]),t("h3",{attrs:{id:"преимущества-8"}},[t("a",{attrs:{href:"#%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0-8","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Преимущества")]),t("ul",[t("li",[D._v("Это очень простая модель. ")]),t("li",[D._v("Требуется меньше планирования и составления графиков. ")]),t("li",[D._v("Разработчик может создавать собственное программное обеспечение.")])]),t("h3",{attrs:{id:"недостатки-8"}},[t("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8-8","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Недостатки")]),t("ul",[t("li",[D._v("Модели Большого взрыва нельзя использовать для крупных, текущих и сложных проектов. ")]),t("li",[D._v("Высокий риск и неопределенность.")])]),t("h2",{attrs:{id:"11-agile"}},[t("a",{attrs:{href:"#11-agile","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("11. Agile")]),t("p",[D._v("Гибкая модель разработки, по которой сегодня работает большинство ИТ-проектов. Вы получаете определенный результат после каждой итерации, можете вносить изменения в первоначальное видение продукта практически в любой момент работы — исходя из того, какой функционал больше нравится пользователям вашего продукта.")]),t("h3",{attrs:{id:"преимущества-9"}},[t("a",{attrs:{href:"#%D0%BF%D1%80%D0%B5%D0%B8%D0%BC%D1%83%D1%89%D0%B5%D1%81%D1%82%D0%B2%D0%B0-9","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Преимущества")]),t("ul",[t("li",[D._v("чтобы начать работать над продуктом не нужно иметь детальное представление о том, что вы хотите получить в конце. Не нужно иметь весь бюджет и просчитывать все риски")])]),t("h3",{attrs:{id:"недостатки-9"}},[t("a",{attrs:{href:"#%D0%BD%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D1%82%D0%BA%D0%B8-9","aria-hidden":"true"}},[t("span",{staticClass:"icon icon-link"})]),D._v("Недостатки")]),t("ul",[t("li",[D._v("готовый продукт может на рынок так никогда и не выйти, вы постоянно будете заниматься его усовершенствованиями, дополнениями, тем временем бюджет может закончиться")])]),t("p",[D._v("Agile имеет множество вариаций и фреймворков. Среди самых известных: Scrum, Kanban, экстремальное программирование (XP), Lean.")])])}),[],!1,null,null,null);"function"==typeof s&&s(p),"function"==typeof c&&c(p);t.default=p.exports}}]);