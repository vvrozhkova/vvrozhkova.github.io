{"hash":"74078440e78cf7eff9cd218b18924da13af0a419","data":{"post":{"title":"Жизненный цикл тестирования приложений, STLC (Software Testing LifeCycle)","content":"\n**STLC, или жизненный цикл тестирования** — это последовательность действий, проводимых в процессе тестирования, с помощью которых гарантируется качество программного обеспечения и его соответствие требованиям. STLC включает действия по верификации и валидации. Тестирование состоит из серии действий, выполняемых по методике, с целью гарантирования качества продукта.\n\n![STLC, или жизненный цикл тестирования](https://testengineer.ru/wp-content/uploads/2021/08/zhiznennyj-cikl-testirovaniya-prilozhenij.svg)\n\nhttps://www.youtube.com/watch?v=bImOPDuXXiQ\n\n## Этапы STLC-цикла\n\nЦикл состоит из шести основных этапов:\n\n### 1. Анализ требований\n\nТестирование на этапе оценки требований (или анализа требований). На этом этапе отдел QA оценивает требования с точки зрения тестирования, ищет требования к софту, которые нужно предварительно оценить. Для этого QA-команда может обращаться к представителям заказчика. Требования могут быть «функциональными» или «нефункциональными», то есть касаться или не касаться функциональной составляющей софта. Также на этом этапе проводится оценка возможности применения автоматизированного тестирования.\n\n**Критерии входа:**\n- Есть документ о требованиях (как функциональных, так и нефункциональных).\n- Описаны критерии приемлемости.\n- Есть документ, описывающий архитектуру приложения.\n\n**Действия на этапе оценки требований:**\n- Анализ планируемой функциональности приложения.\n- Определение ролей пользователей.\n- Сбор требований о пользовательских интерфейсах, аутентификации, локализации и других особенностях.\n- Определение типов тестирования\n- Сбор информации о приоритетах в тестировании\n- Подготовка матрицы отслеживания требований (RTM — Requirement Traceability Matrix)\n- Определение тестового окружения\n- Анализ возможности автоматизации тестирования (если нужно)\n\n**Критерии выхода:**\n- Заполнена RTM-матрица.\n- Подготовлен и согласован отчет о возможности автоматизации\n\n**Результаты этапа оценки требований:**\n- Матрица отслеживания требований (RTM)\n- Отчет о возможности автоматизации (если нужно)\n\n### 2. Планирование тестирования\n\nНа этапе планирования руководитель команды QA определяет стратегию тестирования и оценивает трудозатраты. Также оцениваются ресурсы, тестовое окружение, возможные ограничения и график тестирования. На этом же этапе готовится и финализируется план тестирования.\n\n**Критерии входа:**\n- Есть документы с требованиями.\n- Есть RTM-матрица.\n- Есть документ о возможности автоматизации тестирования\n\n**Действия на этапе планирования:**\n- Анализ возможности различных методов тестирования.\n- Финализация наиболее подходящего метода тестирования.\n- Подготовка стратегии (или плана тестирования)\n- Выбор инструментов тестирования\n- Оценка трудозатрат\n- Планирование ресурсов, определение ролей и ответственности\n- Дополнительное обучение команды (если нужно)\n\n**Критерии выхода:**\n- Готов и согласован документа со стратегией тестирования.\n- Одобрен документ по оценке трудозатрат.\n\n**Результаты:**\n- Документ со стратегией тестирования\n- Документ с оценкой ресурсов\n\n### 3. Создание тест-кейсов\n\nНа этом этапе происходит подготовка тестовых данных и создаются тест-кейсы.\n\n**Критерии входа:**\n- Есть документы с требованиями.\n- Есть RTM-матрица и план тестирования.\n- Есть отчет о возможности автоматизации\n\n**Действия:**\n- Создание тест-кейсов (и автотестов, если будет применяться автоматизация)\n- Обновление тест-кейсов и автоматизированных тестов.\n- Подготовка исходных данных для тестирования\n\n**Критерии выхода:**\n- Готовы тест-кейсы и скрипты.\n- Готовы тестовые данные.\n\n**Результаты:**\n- Тест-кейсы и/или скрипты\n- Тестовые данные\n\n### 4. Настройка тестового окружения\n\nЭто настройка харда и софта, в которых будет осуществляться процесс тестирования. Это один из критически важных аспектов процесса, он может проходить параллельно этапу создания тест-кейсов. QA-команда может и не включаться в этот процесс, если тестовое окружение ей обеспечит команда разработки. QA-команда должна будет проверить работоспособность окружения (хотя бы smoke-тестом).\n\n**Критерии входа:**\n- Готовы документы по дизайну системы и ее архитектуре.\n- Есть план по настройке окружения.\n\n**Действия:**\n- Оценка архитектуры.\n- Создание списка требований к аппаратной и программной части окружения\n- Подготовка задач по настройке окружения.\n- Настройка тестового окружения и тестовых данных.\n- Провести smoke-тест окружения\n- Подготовка и проведение smoke-тестов билда приложения.\n\n**Критерии выхода:**\n- Окружение работает согласно списка требований.\n- Завершена подготовка тестовых данных.\n\n**Результаты:**\n- Настроенное окружение для проведения тестирования\n- Результаты smoke-тестирования окружения\n\n### 5. Выполнение тестирования\n\nНа этапе выполнения тестов QA проводит тестирование, выполняя подготовленные тест-кейсы. Процесс состоит из выполнения тестовых скриптов (при необходимости эти скрипты могут корректироваться). Далее идет создание баг-репортов. Если найдены баги, информация о них передается команде разработки для исправления и повторного тестирования QA-командой.\n\n**Критерии входа:**\n- Есть базовая RTM-матрица, план тестирования, тест-кейсы и/или автоматизированные скрипты.\n- Готово тестовое окружение.\n- Завершена настройка тестовых данных.\n\n**Действия:**\n- Выполнение тестирования в соответствии с планом\n- Получение и документирование результатов тестирования\n- Создание баг-репортов\n- Обновление тест-плана и тест-кейсов (если нужно).\n- Обновление RTM-матрицы (тест-кейсы из RTM-матрицы связываются с найденными багами)\n- Повторное тестирование исправленных багов\n- Регрессионное тестирование приложения.\n- Отслеживание проблемных мест, до закрытия тестирования.\n\n**Критерии выхода:**\n- Все запланированные тесты проведены.\n- Созданы баг-репорты.\n\n**Результаты:**\n- Завершенная RTM-матрица\n- Обновленные тест-кейсы\n- Найденные и описанные баги\n\n### 6. Завершение цикла тестирования\n\nНа этапе завершения тестирования создается отчет о результатах тестирования. QA-команда обсуждает и анализирует баги, делает выводы из возникших проблем, чтобы избежать подобных проблем в будущем.\n\n**Критерии входа:**\n- Тестирование завершено.\n- Есть результаты тестирования.\n- Есть баг-репорты.\n\n**Действия:**\n- Оценка критериев завершения цикла (основывается на времени, трудозатратах, покрытии тестами)\n- Подготовка метрик тестов\n- Подготовка документа с выводами, сделанными во время тестирования\n- Подготовка отчета о завершении тестирования\n- Подготовка отчета для клиента с количественными и качественными характеристиками тестируемой системы\n- Анализ результатов тестирования\n\n**Критерии выхода:**\n- Отчет о завершении тестирования утвержден клиентом.\n\n**Результаты:**\n- Отчет о завершении тестирования\n\n---\n\n**Этапы тестирования:**\n\n1. Анализ продукта\n2. Работа с требованиями\n3. Разработка стратегии тестирования\nи планирование процедур контроля качества\n4. Создание тестовой документации\n5. Тестирование прототипа\n6. Основное тестирование\n7. Стабилизация\n8. Эксплуатация","description":"Жизненный цикл тестирования приложений, STLC (Software Testing LifeCycle)","image":"null","category":{"id":"manual","title":"manual","path":"/category/manual/"},"date":"19/05/2022","path":"/zhiznennyj-czikl-testirovaniya-prilozhenij-stlc-software-testing-life-cycle/","links":[{"title":"","items":[{"title":"1. Тестирование, Quality control, Quality assurance","link":"/testirovanie-quality-control-quality-assurance/"},{"title":"2. Понятие качества, международные стандарты качества","link":"/ponyatie-kachestva-mezhdunarodnye-standarty-kachestva/"},{"title":"3. Жизненный цикл дефекта","link":"/zhiznennyj-czikl-defekta/"},{"title":"4. Жизненный цикл разработки ПО, SDLC (Software Development LifeCycle)","link":"/zhiznennyj-czikl-razrabotki-po-sdlc-software-development-life-cycle/"},{"title":"5. Модели разработки ПО","link":"/modeli-razrabotki-po/"},{"title":"6. Методологии разработки ПО (Scrum, Kanban, RUP, DSDM, MSF, XP)","link":"/metodologii-razrabotki-po-scrum-kanban-rup-dsdm-msf-xp"},{"title":"7. Жизненный цикл тестирования приложений, STLC (Software Testing LifeCycle)","link":"/zhiznennyj-czikl-testirovaniya-prilozhenij-stlc-software-testing-life-cycle/"},{"title":"8. Принципы тестирования, Agile принципы тестирования","link":"/princzipy-testirovaniya-agile-princzipy-testirovaniya/"},{"title":"9. Практики и подходы тестирования","link":"/praktiki-i-podhody-testirovaniya/"},{"title":"10. Виды тестирования","link":"/vidy-testirovaniya/"},{"title":"11. Уровни тестирования","link":"/urovni-testirovaniya/"},{"title":"12. Техники тест-дизайна","link":"/tehniki-test-dizajna/"},{"title":"13. Тестовая документация","link":"/testovaya-dokumentacziya/"}]}],"headings":[{"value":"Этапы STLC-цикла","anchor":"#этапы-stlc-цикла"}],"subtitles":[{"depth":2,"value":"Этапы STLC-цикла","anchor":"#этапы-stlc-цикла"},{"depth":3,"value":"1. Анализ требований","anchor":"#1-анализ-требований"},{"depth":3,"value":"2. Планирование тестирования","anchor":"#2-планирование-тестирования"},{"depth":3,"value":"3. Создание тест-кейсов","anchor":"#3-создание-тест-кейсов"},{"depth":3,"value":"4. Настройка тестового окружения","anchor":"#4-настройка-тестового-окружения"},{"depth":3,"value":"5. Выполнение тестирования","anchor":"#5-выполнение-тестирования"},{"depth":3,"value":"6. Завершение цикла тестирования","anchor":"#6-завершение-цикла-тестирования"}],"tags":[{"id":"Жизненный цикл тестирования приложений","title":"Жизненный цикл тестирования приложений","path":"/tag/%D0%96%D0%B8%D0%B7%D0%BD%D0%B5%D0%BD%D0%BD%D1%8B%D0%B9%20%D1%86%D0%B8%D0%BA%D0%BB%20%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B9/"},{"id":"STLC","title":"STLC","path":"/tag/STLC/"}]},"comments":{"edges":[]}},"context":{}}