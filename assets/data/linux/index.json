{"hash":"7ce6058f470c3851afaa44882541a7f3d1089ffc","data":{"post":{"title":"Linux","content":"\n## Terminal: основы\n\n- pwd  - вывести текущую директорию (print working directory)\n\n- ls - вывести содержимое директории (list directory content)\n    - ls --all --human-readable -l путь\n    - ls -a -h -l путь\n    - ls -ahl путь ls -lah путь\n\n-a, --all — выдавать все файлы в каталогах, включая скрытые файлы, начинающиеся с точки.\n\n-h, --human-readable — добавлять к каждому размеру файла букву размера, например, M для двоичных мегабайт (`мебибайт').\n\n-l, --format=long, --format=verbose — в дополнении к имени каждого файла, выводятся тип файла, права доступа к файлу, количество ссылок на файл, имя владельца, имя группы, размер файла в байтах и временной штамп (время последней модификации файла, если не задано другое). Для файлов с временем больше чем 6 месяцев назад или больше, чем 1 час в будущее, временной штамп содержит год вместо времени дня.\n\n- man команда - справка о команде (для выхода: Q)\n- clear - очистить экран терминала\n- exit - закрыть терминал\n\n### Специальные символы:\n- . текущая директория\n- .. директория на уровень выше\n- ~ домашняя директория\n- \\* любое количество любых символов\n- ? ровно один любой символ\n\n\n- mkdir путь_до_директории - создать директорию\n- mkdir -p путь_до_директории - создать директорию и ее “родителей”\n- touch путь_до_файла - создать файл\n- cd путь_до_директории - войти в директорию\n- rm путь_до_файла - удалить файл\n- rm -r путь_до_директории -  удалить директорию\n- rm -rf путь_до_директории - удалить директорию (без вопросов)\n- сp путь_до_файла1 путь_до_файла2 - скопировать файл1 в файл2\n- cp -r путь_до_дир1 путь_до_дир2 - скопировать дир1 в дир2\n- mv путь1 путь2 - переместить директорию или файл\n\n## Запуск исполняемых файлов\n- Ctrl + C - прервать выполнение\n- Ctrl + Z - приостановить выполнение\n    - fg продолжить (foreground)\n    - bg продолжить в фоновом режиме (background)\n- program & - запустить выполнение программы сразу в фоновом режиме\n\n- ./имя_программы - запустить выполнение программы из текущей директории\n- /полный/путь/имя_программы\n\n- chmod +x имя_программы - сделать программу исполняемой\n\n## Ввод/вывод\n- cat файл - вывести содержимое файла на экран\n- less файл - открыть файл на чтение\n    - q – выход; \n    - / – поиск;\n    - g – в начало; \n    - G – в конец\n- nano файл - редактировать файл\n    - Ctrl + X – выход\n\n- Программа < файл - брать stdin из файла\n\n- Программа > файл - выводить stdout в файл\n- Программа >> файл - аналогично, но с дозаписью в файл\n\n- Программа 2> файл - выводить stderr в файл\n- Программа 2>> файл - аналогично, но с дозаписью в файл\n\n- Прогр1 | Прогр2 | … | ПрогрN - передать stdout Прогр1 в качестве stdin для Прогр2, далее stdout Прогр2 в качестве stdin для Прогр3 и т.д.\n\n## Скачивание файлов из интернета\n- wget ссылка - скачать файл по ссылке и сохранить в текущей директории\n- wget -P путь_до_директории ссылка - скачать файл по ссылке и сохранить в директории заданной путем\n- wget -O путь_до_файла ссылка - скачать файл по ссылке и сохранить под указанным именем\n\n- wget -c ссылка - докачать файл по ссылке в случае обрыва связи\n- wget --spider ссылка - проверить доступность файла по ссылке\n- wget -i текстовый_файл - скачать несколько файлов по ссылкам из текстового файла\n\n- wget -r -l глубина ссылка - рекурсивное скачивание файлов по ссылке на указанную глубину(по умолчанию глубина 5)\n- wget -r -A тип,тип,...,тип ссылка - рекурсивное скачивание файлов только определенного типа (типов)\n\n## Работа с архивами\n\n### Распаковка архивов\n- unzip архив.zip - распаковать содержимое архива.zip\n- gunzip архив.gz - распаковать содержимое архива.gz, файл архив.gz удалить\n\n### Создание архивов\n- zip архив.zip файл1 файл2 ... - запаковать перечисленные файлы и/или папки в архив.zip\n- gzip файл - запаковать файл в файл.gz, исходный файл удалить\n- tar -cvf архив.tar файл1 файл2 ... - запаковать перечисленные файлы и/или папки в архив.tar (без сжатия)\n- gzip архив.tar - запаковать архив.tar в архив.tar.gz, исходный архив.tar удалить\n- tar -zcvf архив.tar.gz файл1 файл2 ... - запаковать перечисленные файлы и/или папки в архив.tar.gz (c сжатием при помощи gzip)\n\n### Распаковка архивов\n- tar -xvf архив.tar - распаковать архив.tar\n- tar -xzvf архив.tar.gz - распаковать архив.tar.gz (с использованием gunzip)\n\nЕще один архиватор:\n- bzip2 файл\n- bunzip2 файл.bz2\n- tar -cjvf архив.tar.bz2 файл1 файл2 ...\n- tar -xjvf архив.tar.bz2\n\n### Сжатие/распаковка без удаления\n- gzip -c файл > файл.gz\n- gunzip -c файл.gz > файл\n- bzip2 -c файл > файл.bz2\n- bunzip2 -c файл.bz2 > файл\n\n## Работа на сервере\n\nДля входа на сервер, нужно знать:\n1) адрес сервера,\n2) логин и пароль.\n\n### Команда входа\nssh логин@адрес_сервера -p порт\n\nна клиенте хранится закрытый ключ ~/.ssh/id_rsa, ~/.ssh/id_rsa.pub  \nна сервере открытый ключ ~/.ssh/authorized_keys\n\n### Создание ключа\n- ssh-keygen - создание ключа\n- ssh-add - сообщить системе о ключе\n- cat ~/.ssh/id_rsa.pub - просмотр публичного ключа:\n- nano ~/.ssh/authorised_keys - редактирование авторизованных ключей (на сервере)\n\n### Копирование файлов\n- scp -P порт логин@адрес_сервера:путь1 путь2 - с сервера (путь1) на клиента (путь2)\n- scp -P порт путь1 логин@адрес_сервера:путь2 - с клиента (путь1) на сервер (путь2)\n\n### Установка, удаление и обновление программ\n\n- sudo apt-get install программа - Установка программ через терминал\n- sudo apt-get remove программа - Удаление программ через терминал:\n- sudo apt-get update - Обновление ссылок на пакеты:\n- sudo apt-get upgrade - Обновление установленных пакетов:\n- sudo apt-get install --only-upgrade программа - Обновление отдельной программы:\n\n### контроль запускаемых программ\n- jobs - посмотреть запущенные программы\n- fg %<номер> - продолжить программу с этим номером\n- bg %<номер> - продолжить программу с этим номером в фоновом режиме \n- ps - посмотреть ваши процессы\n- top - отслеживать процессы в реальном времени\n- top -u <имя пользователя> - отслеживать процессы этого пользователя \n- kill <номер процесса> - завершить процесс с этим номером\n- kill -9 <номер процесса> - “убить” процесс с этим номером\n\n### Многопточные приложения\n- free -g - информация об оперативной памяти\n- nproc - количество ядер процессора\n- lscpu - детальная информация о процессоре\n- bowtie2-build - запуск построения индекса генома\n    - bowtie2-build <геном> <индекс>\n        - bowtie2-build ref.fasta index\n- bowtie2 - запуск выравнивателя bowtie\n    - bowtie2 -x <индекс> -U <риды>\n        - bowtie2 -x index -U reads.fastq\n    - bowtie2 -x <индекс> -U <риды> -p <количество потоков>\n        - bowtie2 -x index -U reads.fastq -p 4\n\n### Менеджер терминалов\n- Ctrl + Shift + T - открыть новую вкладку в терминале\n- Alt + <цифра> - перейти в указанную вкладку\n- Ctrl + Shift + W - закрыть текущую вкладку\n- tmux - запустить tmux\n- Ctrl + B - перейти в режим команд\n- Ctrl + B и C (зажать Ctrl+B, отпустить, затем нажать С) - создать новую вкладку\n- Ctrl + B и <цифра> - перейти в указанную вкладку\n- Ctrl + B и N / Ctrl + B и P - перейти в следующую / предыдущую вкладку\n- Ctrl + B и X (или exit) - закрыть вкладку\n- Ctrl + B и D - временно выйти из tmux\n- tmux attach / tmux a - вернуться в tmux\n- tmux list-sessions - посмотреть список запущенных tmux’ов\n- Ctrl + B и PgUp - перейти в режим просмотра истории\n- PgUp, PgDown, стрелки - перемещать курсор по истории\n- Esc, Ctrl + C - выйти из режима просмотра истории\n\n## Редактор Vim\n### Вход\nvim\nvim файл\nvim файл1 файл2 файл3 ...\n\n### Главные команды\n:q - выход\n:help - справка\nvimtutor - очень хороший автотуториал!\n\n### Режимы работы\n1. normal\n- Режим по умолчанию\n- Любая клавиша воспринимается как команда\n- «Сложные» команды начинаются с ‘:’\n\n2. insert\n- Режим ввода текста — все, что вы\nнажимаете, вставляется (заменяется).\n- Выход через `<Esc>`, `<Ctrl+c>`\n\n3. visual\n- Режим выделения\n\n### Перемещение\n- По символам:\n    - Стрелочки\n    - h,j,k,l\n- По словам:\n    - w, W — в начало следующего слова\n    - e, E — в конец\n    - b, B — в начало предыдущего\n\n- Еще крупнее:\n0,^,$ — начало строки, первый непробельный символ, конец строки\n- Совсем крупно:\n - gg — начало файла\n - G — конец\n - :21 `<Enter>` — перейти к строке 21\n - `<Ctrl+D>`, `<Ctrl+U>` — вниз/вверх на N строчек, где N обычно пол-экрана\n\n### Удаление\n- По символам:\n    - x — символ под курсором\n    - X — символ до курсора\n- Сразу много: d [<кол-во>] <ход>\n    - dе — удалить до конца текущего слова\n    - d$ — удалить до конца строки\n    - d5w — удалить пять слов\n- Специальная команда\n    - dd — удалить строку (или, например, d10d)\n\n### Создание\ni — войти в insertion mode\na — сдвинуть курсор вправо и войти в insertion mode\nI = ^i\nA = $a\no — вставить пустую строку снизу и редактировать ее\nO — то же, но строка сверху\n\n### Копирование\ny <кол-во> <ход> — скопировать\nyy — скопировать строку\n\n### Вставить\np — вставить после\nP — вставить перед\n\n### Поиск и замена\n#### Поиск\n- /<текст> — искать <текст> вперед\n- ?<текст> — назад\n- n — следующее вхождение, \n- N — предыдущее\n\n#### Замена\n- :%s/<что ищем>/<на что меняем>/<флаги>\n- флаги: \n    - g – много замен в строке, \n    - с – подтверждение\n\n### Полезные команды\n#### Отмена/возврат\n- u — отменить последнее действие\n- `<Ctrl+r>` — вернуть отмененное действие\n\n#### Сохранение работы\n- :w — сохранить изменения\n- :wq — сохранить и выйти\n- :q! — выйти без сохранения\n- :w `<файл>` — сохранить изменения в `<файл>`\n\n## Программирование на bash\n- оболочка (shell) – интерпретатор команд\n- sh (Bourne shell) – стандарт и доступна почти в любом дистрибутиве (1977)\n- bash (Bourne again shell) – усовершенствованная и модернизированная вариация sh (1989)\n- csh, tcsh, zsh, ...\n\n### Создаем программу\nvim my_first_script.sh\n```\n#!/bin/bash\necho \"Hello, world!\"\n```\n\n### Запускаем программу\nchmod +x my_first_script.sh  \n./my_first_script.sh\n\n### Переменные\nПеременная (variable) - именованная область памяти\n\n**имя (name):**\n- буквы, цифры, _;\n- не может начинаться с цифры.\n\n**значение (value):**\n- числа;\n- строки (если есть пробелы, то в кавычках);\n- отдельные символы.\n\n### Запись (перезапись) значения\n<имя>=<значение>\n```\npath=~/Docs\n```\n\n### Чтение\n$<имя> или ${<имя>}\n```\npath2=$path/file1.txt # path2=~/Docs/file1.txt\necho “Path is $path2” # Path is ~/Docs/file1.txt\necho “Path is ${path}2” # Path is ~/Docs2\n```\n\n### Аргументы\n#### Передача аргументов скрипту:\n./script.sh arg1 arg2 arg3 ...\n\n#### Обработка внутри скрипта:\n$1 первый аргумент  \n$2 второй аргумент  \n...\n\n\\$0 имя скрипта  \n$# количество аргументов\n\n```\nvar=”Первый аргумент равен $1”\necho ”Всего было передано $# аргументов”\n```\n\n### Ветвление: основы\n\n#### Синтаксис:\n```\nif [[ условие ]]\nthen\n    # действия, если условие истинно\nfi\n```\n\n\n#### Условия (строки):\n- -z <строка> # строка пуста\n- -n <строка> # строка не пуста\n- <стр1> == <стр2> # строки равны\n- <стр1> != <стр2> # строки не равны\n\nПример:\n```\nif [[ -z $1 ]]\nthen\n echo “Первый аргумент пустой!”\nfi\n```\n```\nif [[ $var1 == $var2 ]]\nthen\n echo “Переменные равны!”\nfi\n```\n\n#### Условия [числа (строки)]:\n\n<число/строка> операция <число/строка>\n\n- -eq == # равно\n- -ne != # не равно\n- -lt < # меньше\n- -le # меньше или равно\n- -gt > # больше\n- -ge # больше или равно\n\nоперации вида “-хх” – только для чисел!  \nоперации-знаки – только для строк!  \n\n#### Условия (файлы):\n- -e <путь> # путь существует\n- -f <путь> # это файл\n- -d <путь> # это директория\n- -s <путь> # размер файла больше 0\n- -x <путь> # файл исполняемый\n\n#### Условия (логические):\n- ! # отрицание логического выражения\n- && # логическое «И»\n- || # логическое «ИЛИ»\n\n### Ветвление: альтернативы\n#### Синтаксис:\n```\nif [[ условие ]]\nthen\n    # действия, если условие истинно\nеlse\n    # действия, если условие ложно\nfi\n```\n\n```\nif [[ условие1 ]]\nthen\n    # действия, если условие1 истинно\nelif [[ условие2 ]]\nthen\n    # действия, если условие1 ложно,\n    # но условие2 истинно\nеlse\n    # действия, если оба условия ложны\nfi\n```\n\n```\ncase переменная in\nзнач1)\n    # действия, если переменная==знач1\n    ;;\nзнач2)\n    # действия, если переменная==знач2\n    ;;\n*)\n    # действия, если переменная\n    # не равна ни одному из вариантов\nesac\n```\n\n### Циклы\n#### Синтаксис:\n```\nfor переменная in список_значений\ndo\n    # действия, каждый раз переменная\n    # принимает следующее значение\n    # из списка\ndone\n```\n\n```\nfor переменная in список_значений\ndo\n    # действия, каждый раз переменная\n    # принимает следующее значение\n    # из списка\ndone\n```\n\nbreak прервать выполнение  \nсontinue перейти на след. значение\n\n\n```\nwhile [[ условие ]]\ndo\n    # действия, пока условие истинно\ndone\n```\n\n- read переменная - записать введенное пользователем значение в переменную\n\n\n### Арифметика\n#### Синтаксис:\nlet “переменная = выражение”\n\nПример:\n```\nlet “c = 1 + 1”\nlet “c = a + b”\n```\n \n#### Операции:\n- +, -, /, * стандартные\n- % остаток от деления\n- ** возведение в степень\n\n#### Cокращение:\nlet “a=a+b” эквивалентно let “a+=b”\n\n### Внешние программы\n#### Синтаксис:\nпеременная=`программа`\n\nПример:\n```\na=`echo “test”`\nfiles=`ls ~`\n```\n\n#### Код возврата:\n- 0 корректное завершение\n- не 0 в процессе работы были ошибки\n\n#### Узнать код:\n$?\n\n#### Выйти с кодом:\nexit код\n\nПример:\n```\ntouch file.txt\necho $?\n```\n\n\nПроверка кода возврата:\n```\nif `программа`\nthen\n    # действия, если код 0\nеlse\n    # действия, если код не 0\nfi\n```\n\n### Функции\n#### Задаем функцию:\n```\nимя_функции ()\n{\n    # действия\n} \n```\n\n#### Используем функцию:\n...\nимя_функции\n...\n\n#### Функции с параметрами:\n```\nимя_функции ()\n{\n    # действия с $1, $2, … , $#\n}\n```\n\n#### Используем функцию:\n...\nимя_функции аргумент1 аргумент2 ...\n...\n\n#### Переменные:\n```\nимя_функции ()\n{\n    var_global=1\n    local var_local=1\n}\n```\n\n#### Используем:\nимя_функции\n```\necho $var_global # выведет 1\n```\n```\necho $var_local # ничего не выведет\n```\n\n#### Компактная запись:\n```\nимя_функции () { действ1; действ2; }\n```\n\n#### Актуально и в других конструкциях:\n```\nif [[ $var==”test ”]]; then\n...\nfor i in 1 2 3 4 5; do\n...\n```\n\n## Продвинутый поиск и редактирование\n- find -iname “<имя файла>” не учитывать регистр\n- find -path “<путь>” найти указанный путь\n- find -size <размер> выводить файлы указанного размера \n- find -maxdepth <число> искать не больше чем на заданное число уровней вниз\n- find -mindepth <число> искать начиная с заданного числа уровней вниз\n\n### Поиск строк по регулярному выражению\n- grep -l “<строка>” <файл> список файлов с этой строкой\n- grep -L “<строка>” <файл> список файлов, где этой строки нет\n- grep -n “<строка>” <файл> выводить номер строки в файле\n- grep -m <число> “<строка>” <файл> не искать дальше после заданного числа вхождений\n- grep -A <число> “<строка>” <файл> выводить это число строк после вхождения\n- grep -B <число> “<строка>” <файл> выводить это число строк до вхождения\n- grep -C <число> “<строка>” <файл> выводить это число строк вокруг вхождения\n- grep -E “<шаблон>” <файл> найти указанный шаблон в файле\n- grep -E “<шаблон>” <файл> найти указанный шаблон в файле\n- grep -E “^go” <файл> найти строки, начинающиеся с “go”\n- grep -E “go$” <файл> найти строки, оканчивающиеся на “go”\n- grep -E “c[au]t” <файл> найти все слова, содержащие cut и cat\n- grep -E “ [a-z]ight ” <файл> слова из 5 букв, кончающиеся на “ight”\n- grep -E “ [a-z]*ight ” <файл> слова из 4 и более букв, кончающиеся на “ight” \n- grep -E “ [a-z]+ight ” <файл> слова из 5 и более букв, кончающиеся на “ight”\n- grep -E “ [a-z]?ight ” <файл> слова из 4-5 букв, кончающиеся на “ight”\n- grep -E “ [a-zA-Z]*ight ” <файл> слова, кончающиеся на “ight” (разрешены большие буквы)\n\n- cat <файл> | sed ‘инструкция’\n- sed ‘инструкция’ <файл> - потоковый редактор: читает строчки из stdin (или из файла), обрабатывает их по инструкции и пишет в stdout\n\n### Если хотим писать в файл\n- \\> <файл> обычное перенаправление\n- -i, --in-place перезаписать входной файл\n- sed ‘s/John/Nick/g’ old.txt > new.txt заменить все John на Nick\n- sed -r ‘s/J[a-z]*n/Nick/g’ old.txt > new.txt заменить все слова, которые начинаются на J и кончаются на n на Nick\n- sed -n ‘2,4p’ file.txt вывести строки с 2 по 4\n- sed ‘2,4d’ file.txt вывести все строки кроме 2-4\n- sed -n ‘/[0-9]\\{2\\}/p’ file.txt вывести строки с 2 цифрами подряд\n- sed '2,/[Rr]ight/d' file.txt вывести все строки кроме со 2 до строки содержащей “right” (с большой или маленькой буквы)\n\n## Права доступа\n\n- users - узнать кто сейчас в системе\n\n- less /etc/passwd  \n    syslog&#58;x&#58;100:103::...  \n    bi&#58;x&#58;1000:1000:bi,,,...(UID >= 1000) - узнать какие вообще есть пользователи\n\n- groups <имя_пользователя> - узнать группы пользователя\n\n- ls -l <путь> - узнать права доступа\n```\nls -l <путь>\ndrwxrwxr-x 2 user group ... dir\n-rw-rw-r-- 1 user group ... file\n```\n \n- r (100, 4) – Read\n- w (010, 2) – Write\n- x (001, 1) – eXecute\n\n### Права у файлов\nr – просмотр содержимого  \nw – редактирование  \nx – запуск  \n\n### Права у директорий\nr – просмотр содержимого  \nw – создание/удаление файлов/поддиректорий  \nx – 1) вход в директорию  \n    2) просмотр inode файлов/поддиректорий\n \n### Изменить права доступа\n- chmod [ugoa][+-][rwx] <путь>\n```\nchmod ug+rw file.txt\n```\n- chmod [octal code] <путь>\n```\nchmod 777 file.txt\n```\n\n### Изменить обладателя\n- chown new_user:new_group <путь>\n```\nchown zoidberg file.txt\n```\n```\nchown :futurama file.txt\n```\n\n### Cуперпользователь\nroot (группа root)\n\n### Сделать от имени root:\n- sudo <действие>\n```\nsudo mkdir dir\n```\n```\nsudo chmod -r dir\n```\n\n### Посчитать что-то в файле:\n- wc [что-считаем] <путь>\n```\nwc -l file.txt\n```\n```\nwc -w file.txt\n```\n```\nwc -c file.txt\n```\n\n### Сравнить файлы/директории\n- diff [-q -r] <путь1> <путь2>\n```\ndiff file1.txt file2.txt | less\n```\n```\ndiff -qr dir1/ dir2/\n```\n\n### Узнать сколько места занимаем на диске\n- du [--max-depth <глубина> -h] <путь>\n```\ndu -h ~/\n```\n```\ndu –-max-depth 1 -h .\n```\n```\ndf [-h]\n```\n\n### узнать сколько места занято/свободно\n- во всей системе\n\nВывести часть файла:  \nhead [-n <количество строк>] <путь>  \ntail [-n <количество строк>] <путь>  \n```\nhead -n 10 file.txt\n```\n```\ntail -n 50 file.txt | less\n```\n\n### Работа с файлами/директориями\nможно использовать {имя1,имя2,...}  \nmkdir ./{dir1,dir2,dir3}  \ntouch ~/{file1,file2}.txt\n\n### Вывод с сортировкой:\n- ls --sort=[вид сортировки] -l <путь>\n```\nls –-sort=size -l ~/\n```\n```\nls –-sort=time -l .\n```\n\n### Перенаправление в один файл\n- &> или &>>\n```\nprogram &>> both.txt\n```\n\n### Перенаправление одного потока в другой\n- 2>&1 stderr в stdout\n- 1>&2 stdout в stderr\n\n### Перенаправление в никуда и из ниоткуда:\n- /dev/null\n```\nprogram 2>/dev/null\n```\n```\ncat /dev/null > file.txt\n```","description":"Linux","image":"null","category":{"id":"testops","title":"testops","path":"/category/testops/"},"date":"12/06/2022","path":"/linux/","links":[{"title":"","items":[{"title":"Микросервисная архитектура","link":"//mikroservisnaya-arhitektura//"},{"title":"Docker","link":"/docker/"},{"title":"Kubernetes","link":"/kubernetes/"},{"title":"Linux","link":"/linux/"},{"title":"Общие вопросы TestOps","link":"/obshhie-voprosy-test-ops/"}]}],"headings":[{"value":"Terminal: основы","anchor":"#terminal-основы"},{"value":"Запуск исполняемых файлов","anchor":"#запуск-исполняемых-файлов"},{"value":"Ввод/вывод","anchor":"#вводвывод"},{"value":"Скачивание файлов из интернета","anchor":"#скачивание-файлов-из-интернета"},{"value":"Работа с архивами","anchor":"#работа-с-архивами"},{"value":"Работа на сервере","anchor":"#работа-на-сервере"},{"value":"Редактор Vim","anchor":"#редактор-vim"},{"value":"Программирование на bash","anchor":"#программирование-на-bash"},{"value":"Продвинутый поиск и редактирование","anchor":"#продвинутый-поиск-и-редактирование"},{"value":"Права доступа","anchor":"#права-доступа"}],"subtitles":[{"depth":2,"value":"Terminal: основы","anchor":"#terminal-основы"},{"depth":3,"value":"Специальные символы:","anchor":"#специальные-символы"},{"depth":2,"value":"Запуск исполняемых файлов","anchor":"#запуск-исполняемых-файлов"},{"depth":2,"value":"Ввод/вывод","anchor":"#вводвывод"},{"depth":2,"value":"Скачивание файлов из интернета","anchor":"#скачивание-файлов-из-интернета"},{"depth":2,"value":"Работа с архивами","anchor":"#работа-с-архивами"},{"depth":3,"value":"Распаковка архивов","anchor":"#распаковка-архивов"},{"depth":3,"value":"Создание архивов","anchor":"#создание-архивов"},{"depth":3,"value":"Распаковка архивов","anchor":"#распаковка-архивов-1"},{"depth":3,"value":"Сжатие/распаковка без удаления","anchor":"#сжатиераспаковка-без-удаления"},{"depth":2,"value":"Работа на сервере","anchor":"#работа-на-сервере"},{"depth":3,"value":"Команда входа","anchor":"#команда-входа"},{"depth":3,"value":"Создание ключа","anchor":"#создание-ключа"},{"depth":3,"value":"Копирование файлов","anchor":"#копирование-файлов"},{"depth":3,"value":"Установка, удаление и обновление программ","anchor":"#установка-удаление-и-обновление-программ"},{"depth":3,"value":"контроль запускаемых программ","anchor":"#контроль-запускаемых-программ"},{"depth":3,"value":"Многопточные приложения","anchor":"#многопточные-приложения"},{"depth":3,"value":"Менеджер терминалов","anchor":"#менеджер-терминалов"},{"depth":2,"value":"Редактор Vim","anchor":"#редактор-vim"},{"depth":3,"value":"Вход","anchor":"#вход"},{"depth":3,"value":"Главные команды","anchor":"#главные-команды"},{"depth":3,"value":"Режимы работы","anchor":"#режимы-работы"},{"depth":3,"value":"Перемещение","anchor":"#перемещение"},{"depth":3,"value":"Удаление","anchor":"#удаление"},{"depth":3,"value":"Создание","anchor":"#создание"},{"depth":3,"value":"Копирование","anchor":"#копирование"},{"depth":3,"value":"Вставить","anchor":"#вставить"},{"depth":3,"value":"Поиск и замена","anchor":"#поиск-и-замена"},{"depth":4,"value":"Поиск","anchor":"#поиск"},{"depth":4,"value":"Замена","anchor":"#замена"},{"depth":3,"value":"Полезные команды","anchor":"#полезные-команды"},{"depth":4,"value":"Отмена/возврат","anchor":"#отменавозврат"},{"depth":4,"value":"Сохранение работы","anchor":"#сохранение-работы"},{"depth":2,"value":"Программирование на bash","anchor":"#программирование-на-bash"},{"depth":3,"value":"Создаем программу","anchor":"#создаем-программу"},{"depth":3,"value":"Запускаем программу","anchor":"#запускаем-программу"},{"depth":3,"value":"Переменные","anchor":"#переменные"},{"depth":3,"value":"Запись (перезапись) значения","anchor":"#запись-перезапись-значения"},{"depth":3,"value":"Чтение","anchor":"#чтение"},{"depth":3,"value":"Аргументы","anchor":"#аргументы"},{"depth":4,"value":"Передача аргументов скрипту:","anchor":"#передача-аргументов-скрипту"},{"depth":4,"value":"Обработка внутри скрипта:","anchor":"#обработка-внутри-скрипта"},{"depth":3,"value":"Ветвление: основы","anchor":"#ветвление-основы"},{"depth":4,"value":"Синтаксис:","anchor":"#синтаксис"},{"depth":4,"value":"Условия (строки):","anchor":"#условия-строки"},{"depth":4,"value":"Условия :","anchor":"#условия-числа-строки"},{"depth":4,"value":"Условия (файлы):","anchor":"#условия-файлы"},{"depth":4,"value":"Условия (логические):","anchor":"#условия-логические"},{"depth":3,"value":"Ветвление: альтернативы","anchor":"#ветвление-альтернативы"},{"depth":4,"value":"Синтаксис:","anchor":"#синтаксис-1"},{"depth":3,"value":"Циклы","anchor":"#циклы"},{"depth":4,"value":"Синтаксис:","anchor":"#синтаксис-2"},{"depth":3,"value":"Арифметика","anchor":"#арифметика"},{"depth":4,"value":"Синтаксис:","anchor":"#синтаксис-3"},{"depth":4,"value":"Операции:","anchor":"#операции"},{"depth":4,"value":"Cокращение:","anchor":"#cокращение"},{"depth":3,"value":"Внешние программы","anchor":"#внешние-программы"},{"depth":4,"value":"Синтаксис:","anchor":"#синтаксис-4"},{"depth":4,"value":"Код возврата:","anchor":"#код-возврата"},{"depth":4,"value":"Узнать код:","anchor":"#узнать-код"},{"depth":4,"value":"Выйти с кодом:","anchor":"#выйти-с-кодом"},{"depth":3,"value":"Функции","anchor":"#функции"},{"depth":4,"value":"Задаем функцию:","anchor":"#задаем-функцию"},{"depth":4,"value":"Используем функцию:","anchor":"#используем-функцию"},{"depth":4,"value":"Функции с параметрами:","anchor":"#функции-с-параметрами"},{"depth":4,"value":"Используем функцию:","anchor":"#используем-функцию-1"},{"depth":4,"value":"Переменные:","anchor":"#переменные-1"},{"depth":4,"value":"Используем:","anchor":"#используем"},{"depth":4,"value":"Компактная запись:","anchor":"#компактная-запись"},{"depth":4,"value":"Актуально и в других конструкциях:","anchor":"#актуально-и-в-других-конструкциях"},{"depth":2,"value":"Продвинутый поиск и редактирование","anchor":"#продвинутый-поиск-и-редактирование"},{"depth":3,"value":"Поиск строк по регулярному выражению","anchor":"#поиск-строк-по-регулярному-выражению"},{"depth":3,"value":"Если хотим писать в файл","anchor":"#если-хотим-писать-в-файл"},{"depth":2,"value":"Права доступа","anchor":"#права-доступа"},{"depth":3,"value":"Права у файлов","anchor":"#права-у-файлов"},{"depth":3,"value":"Права у директорий","anchor":"#права-у-директорий"},{"depth":3,"value":"Изменить права доступа","anchor":"#изменить-права-доступа"},{"depth":3,"value":"Изменить обладателя","anchor":"#изменить-обладателя"},{"depth":3,"value":"Cуперпользователь","anchor":"#cуперпользователь"},{"depth":3,"value":"Сделать от имени root:","anchor":"#сделать-от-имени-root"},{"depth":3,"value":"Посчитать что-то в файле:","anchor":"#посчитать-что-то-в-файле"},{"depth":3,"value":"Сравнить файлы/директории","anchor":"#сравнить-файлыдиректории"},{"depth":3,"value":"Узнать сколько места занимаем на диске","anchor":"#узнать-сколько-места-занимаем-на-диске"},{"depth":3,"value":"узнать сколько места занято/свободно","anchor":"#узнать-сколько-места-занятосвободно"},{"depth":3,"value":"Работа с файлами/директориями","anchor":"#работа-с-файламидиректориями"},{"depth":3,"value":"Вывод с сортировкой:","anchor":"#вывод-с-сортировкой"},{"depth":3,"value":"Перенаправление в один файл","anchor":"#перенаправление-в-один-файл"},{"depth":3,"value":"Перенаправление одного потока в другой","anchor":"#перенаправление-одного-потока-в-другой"},{"depth":3,"value":"Перенаправление в никуда и из ниоткуда:","anchor":"#перенаправление-в-никуда-и-из-ниоткуда"}],"tags":[{"id":"Автоматизация тестирования","title":"Автоматизация тестирования","path":"/tag/%D0%90%D0%B2%D1%82%D0%BE%D0%BC%D0%B0%D1%82%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F%20%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F/"}]},"comments":{"edges":[]}},"context":{}}