{"hash":"02799b688b4cb7ace869e49ff69fbf95eb6f42e6","data":{"post":{"title":"Объединение таблиц(вложенные запросы, джойны","content":"\nВложенный запрос используется для выборки данных, которые будут использоваться в условии отбора записей основного запроса. Его применяют для:\n\nсравнения выражения с результатом вложенного запроса;\nопределения того, включено ли выражение в результаты вложенного запроса;\nпроверки того, выбирает ли запрос определенные строки.\nВложенный запрос имеет следующие компоненты:\n\nключевое слово SELECT  после которого указываются имена столбцов или выражения (чаще всего список содержит один элемент) ;\nключевое слово FROM и имя таблицы, из которой выбираются данные;\nнеобязательное предложение WHERE;\nнеобязательное предложение GROUP BY:\nнеобязательное предложение HAVING.\n Вложенные запросы  могут включаться в WHERE или HAVING так (в квадратных скобках указаны необязательные элементы, через | – один из элементов):\n\nWHERE | HAVING выражение оператор_сравнения (вложенный запрос);\nWHERE | HAVING выражение, включающее вложенный запрос;\nWHERE | HAVING выражение [NOT] IN (вложенный запрос);\nWHERE | HAVING выражение  оператор_сравнения  ANY | ALL (вложенный запрос).\nТакже вложенные запросы могут вставляться в основной запрос после ключевого слова SELECT\n\nВложенный запрос, возвращающий одно значение, может использоваться в условии отбора записей WHERE как обычное значение совместно с операциями =, <>, >=, <=, >, <.\n\n```sql\nSELECT title, author, price, amount\nFROM book\nWHERE price = (\n         SELECT MIN(price) \n         FROM book\n      );\n```\nВложенный запрос, возвращающий одно значение, может использоваться в выражениях как обычный операнд, например, к нему можно что-то прибавить, вычесть и пр.\n\n```sql\nSELECT title, author, amount \nFROM book\nWHERE ABS(amount - (SELECT AVG(amount) FROM book)) >3;\n```\n\nВложенный запрос может возвращать несколько значений одного столбца.  Тогда его можно использовать в разделе WHERE совместно с оператором IN.\n\n```WHERE имя_столбца IN (вложенный запрос, возвращающий один столбец)```\n\nОператор IN определяет, совпадает ли значение столбца с одним из значений, содержащихся во вложенном запросе. При этом логическое выражение после WHERE получает значение истина. Оператор NOT IN выполняет обратное действие – выражение истинно, если значение столбца не содержится во вложенном запросе.\n\n```sql\nSELECT title, author, amount, price\nFROM book\nWHERE author IN (\n        SELECT author \n        FROM book \n        GROUP BY author \n        HAVING SUM(amount) >= 12\n      );\n```\n```sql\nSELECT author, title, amount\nFROM book\nWHERE author IN (\n        SELECT amount \n        FROM book \n        GROUP BY amount \n        HAVING COUNT(amount) = 1\n);\n```\n\n## Вложенный запрос, операторы ANY и ALL\nВложенный запрос, возвращающий несколько значений одного столбца, можно использовать для отбора записей с помощью операторов ANY и ALL совместно с операциями отношения (=, <>, <=, >=, <, >).\n\nОператоры ANY и ALL используются  в SQL для сравнения некоторого значения с результирующим набором вложенного запроса, состоящим из одного столбца. При этом тип данных столбца, возвращаемого вложенным запросом, должен совпадать с типом данных столбца (или выражения), с которым происходит сравнение.\n\nПри использовании оператора ANY в результирующую таблицу будут включены все записи, для которых  выражение со знаком отношения верно хотя бы для одного элемента результирующего запроса. Как работает оператор ANY:\n\namount > ANY (10, 12) эквивалентно amount > 10\n\namount < ANY (10, 12) эквивалентно amount < 12\n\namount = ANY (10, 12) эквивалентно (amount = 10) OR (amount = 12), а также amount IN  (10,12)\n\namount <> ANY (10, 12) вернет все записи с любым значением amount, включая 10 и 12\n\nПри использовании оператора ALL в результирующую таблицу будут включены все записи, для которых  выражение со знаком отношения верно для всех элементов результирующего запроса. Как работает оператор ALL:\n\namount > ALL (10, 12) эквивалентно amount > 12\n\namount < ALL (10, 12) эквивалентно amount < 10\n\namount = ALL (10, 12) не вернет ни одной записи, так как эквивалентно (amount = 10) AND (amount = 12)\namount <> ALL (10, 12) вернет все записи кроме тех,  в которыхamount равно 10 или 12\n\nВажно! Операторы ALL и ANY можно использовать только с вложенными запросами. В примерах выше (10, 12) приводится как результат вложенного запроса просто для того, чтобы показать как эти операторы работают. В запросах так записывать нельзя.\n\nВывести информацию о тех книгах, количество которых меньше самого маленького среднего количества книг каждого автора.\n\n```sql\nSELECT title, author, amount, price\nFROM book\nWHERE amount < ALL (\n        SELECT AVG(amount) \n        FROM book \n        GROUP BY author \n      );\n```\n\nВывести информацию о тех книгах, количество которых меньше самого большого среднего количества книг каждого автора.\n\n```sql\nSELECT title, author, amount, price\nFROM book\nWHERE amount < ANY (\n        SELECT AVG(amount) \n        FROM book \n        GROUP BY author \n      );\n```\n\n## Вложенный запрос после SELECT\nВложенный запрос может располагаться после ключевого слова SELECT. В этом случае результат выполнения запроса выводится в отдельном столбце результирующей таблицы. При этом результатом запроса может быть только одно значение, тогда оно будет повторяться во всех строках. Также вложенный запрос может использоваться в выражениях.\n\nПример\n\nВывести информацию о книгах, количество экземпляров которых отличается от среднего количества экземпляров книг на складе более чем на 3,  а также указать среднее значение количества экземпляров книг.\n\nЗапрос:\n```sql\nSELECT title, author, amount, \n    (\n     SELECT AVG(amount) \n     FROM book\n    ) AS Среднее_количество \nFROM book\nWHERE abs(amount - (SELECT AVG(amount) FROM book)) >3;\n```\n\n```\n+-----------------------+------------------+--------+--------------------+\n| title                 | author           | amount | Среднее_количество |\n+-----------------------+------------------+--------+--------------------+\n| Мастер и Маргарита    | Булгаков М.А.    | 3      | 7.6667             |\n| Братья Карамазовы     | Достоевский Ф.М. | 3      | 7.6667             |\n| Стихотворения и поэмы | Есенин С.А.      | 15     | 7.6667             |\n+-----------------------+------------------+--------+--------------------+\n```\n\n","description":"Объединение таблиц(вложенные запросы, джойны","image":"null","category":{"id":"testops","title":"testops","path":"/category/testops/"},"date":"07/07/2022","path":"/obedinenie-tablicz-vlozhennye-zaprosy-dzhojny/","links":[{"title":"","items":[{"title":"CREATE, DROP, DELETE, UPDATE, INSERT, ALTER","link":"/create-drop-delete-update-insert-alter"},{"title":"Базовые запросы с использованием LIKE, BETWEEN, ORDER BY, ALIASES, IN, TOP-LIMIT, DISTINCT","link":"/bazovye-zaprosy-s-ispolzovaniem-like-between-order-by-aliases-in-top-limit-distinct"},{"title":"Объединение таблиц(вложенные запросы, джойны","link":"/obedinenie-tablicz-vlozhennye-zaprosy-dzhojny"}]}],"headings":[{"value":"Вложенный запрос, операторы ANY и ALL","anchor":"#вложенный-запрос-операторы-any-и-all"},{"value":"Вложенный запрос после SELECT","anchor":"#вложенный-запрос-после-select"}],"subtitles":[{"depth":2,"value":"Вложенный запрос, операторы ANY и ALL","anchor":"#вложенный-запрос-операторы-any-и-all"},{"depth":2,"value":"Вложенный запрос после SELECT","anchor":"#вложенный-запрос-после-select"}],"tags":[{"id":"qa","title":"qa","path":"/tag/qa/"}]},"comments":{"edges":[]}},"context":{}}