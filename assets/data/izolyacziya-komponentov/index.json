{"hash":"74078440e78cf7eff9cd218b18924da13af0a419","data":{"post":{"title":"Изоляция компонентов","content":"\nПри выполнении теста с полным флоу можно встретить несколько проблем:\n- в интернет-магазине иногда нужно будет совершить оплату, чтобы закончить тест\n- задействовать реальную сервисную службу (чтобы собрать заказ)\n- зарезервировать ресурсы\n- долгая обратная связь тк нужно выполнить весь набор действий\n\nРешением этих проблем может стать идея тестирования приложения по частям.\n\n\n## Модульные(unit) тесты\n\n- Как правило тесты на функции или методы классов.\n- Для этих тестов не нужна сборка приложения.\n- Высокая скорость исполнения.\n\nСреди unit тестов выделяют:\n- Sociable - тесты, которые используют реальные модули приложения; \n- Solitary - тесты, которые используют подставные объекты или тестовые дублеры.\n\n### Тестовые дублеры\n\n#### Dummy\nКогда требуется передать в функцию объект, который в дальнейшем в тесте не будет использоваться. \nВ этом случае передается, например, пустая строка или пустой объект.\n\n#### Fake\nМожет иметь реальную реализацию, но не может использоваться в продакшене.\nНапример, использование In Memory DataBase вместо ORM(Object-Relational Mapping), которую скорее всего не получится использовать в продакшене.\n\n#### Stub\nВсегда возвращает статичный ответ по заданному запросу.\nЕсли нужно протестировать взаимодействие с внешним API, которое может быть недоступно, то его можно заменить stub'ом.\n\n#### Spy\nПохоже на stub, но еще может следить за вашим приложением.\nНапример, вы тестируете функцию в результате, которой происходит отправка письма пользователю, но в тестах не нужно рассылать настоящие письма, поэтому в функцию можно встроить \"шпиона\", который будет следить был ли вызвов отправки письма пользователю или нет, но при этом сам он отправлять письмо не будет. Такие тесты больше на поведение, чем на состояние.\n\n#### Mock\nВключает преимущества всех предыдущих дублеров. Это заранее запрограммированный объект который может принимать на вход различные значения и иметь некоторые ожидания. В зависимости от этих ожиданий, он возвращает ответ. ","description":"Изоляция компонентов","image":"null","category":{"id":"mobile","title":"mobile","path":"/category/mobile/"},"date":"28/08/2022","path":"/izolyacziya-komponentov/","links":[{"title":"","items":[{"title":"Алгоритмы (курс Яндекс)","link":"/algoritmy-kurs-yandeks/"}]}],"headings":[{"value":"Модульные(unit) тесты","anchor":"#модульныеunit-тесты"}],"subtitles":[{"depth":2,"value":"Модульные(unit) тесты","anchor":"#модульныеunit-тесты"},{"depth":3,"value":"Тестовые дублеры","anchor":"#тестовые-дублеры"},{"depth":4,"value":"Dummy","anchor":"#dummy"},{"depth":4,"value":"Fake","anchor":"#fake"},{"depth":4,"value":"Stub","anchor":"#stub"},{"depth":4,"value":"Spy","anchor":"#spy"},{"depth":4,"value":"Mock","anchor":"#mock"}],"tags":[{"id":"qa","title":"qa","path":"/tag/qa/"}]},"comments":{"edges":[]}},"context":{}}