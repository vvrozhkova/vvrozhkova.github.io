{"hash":"aa5a7ff62b399012289acf12f7cc1503ba4e22e5","data":{"category":{"title":"nets","path":"/category/nets/","belongsTo":{"totalCount":2,"pageInfo":{"totalPages":1,"currentPage":1},"edges":[{"node":{"id":"cc667eaa58f6aa157b8997aa91218af2","title":"Ethernet, WI-FI, IP, MAC, Маска подсети, VLAN","content":"\nВсе компьютеры соединены между собой в сеть, соединены неким образом кабелями или по wi-fi и как-то между собой взаимодействуют. \n\n## Хост\nКогда компьютер находится в сети он называется хостом. **Хост** - единица в сети, это любой уствройство в сети которое имеет интерфейс. \n\n## Сетевой итерфейс\n**Итнерфейс** - способ управления чем-то, **сетевой интерфейс** - это сетевая карта в компьютере. \n\nКоманда ipconfig, ifconfig(MacOS, Linux) - посмотреть сетевые интерфейсы. \nИнтерфейсов может быть несколько, но если его не будет то он не будет хостом, тк у него не будет сети. \n\n## Hostname\nHostname - имя хоста в сети, как он называется. \n\nwww.google.com\n\nwww - имя хоста  \ngoogle.com - домен\n\n## IP адрес\nКомпьютеры не понимают по именам. Но понимают адреса - IP address. \n\n**IP адрес** - это идентификатор интерфейса. IP адрес - это 4 числа через точку (.), от 0 до 255. \n\nПочему не больше 255?\n\nУ нас под адрес выделяется пространство и оно занимает 32 бита. Поэтому больше чем 4 числа, каждое по 8 бит и от 0 до 255, мы туда поместить не можем. \n\nПример IP адреса: 192.168.1.76\n\n## Маска подсети \nЛюбая сеть имеет размер, он задается **маской (сетевая маска)**. Маска задает размер сети.\n\nКогда мы говорим, что у нас IP адрес 192.168.1.0 с маской 255.255.255.0 - это значит в диапазоне моей сети все адреса будут от 192.168.1.0 до 192.168.1.255.\n\nЕсли в маске идет число 255 это значит, что дальше менять это число нельзя, а там где 0 может быть любое число. Чтобы расширять сеть маска корректируется с конца.\n\n192.168 обычно роутер работает в диапазоне начинающемся с этих цифр.\n\nЕсть несколько диапазонов сетей которые имеют особое значение:\n- 192.168.0.0/16\n- 10.0.0.0/8\n- 172.15.0.0/16\n- 127.0.0.0/8 - 127.0.0.1/32- диапазон который используется только один адрес\n\nВ маске каждая часть 255 - это 8 бит, получается 255.255.255.255 = 8+8+8+8 = 32.\nПоэтому для сокращения пишут просто количество бит которое можно добавить.\n\n## Диапазон сети\nДиапазон сети - это размер сети, внутри которой компьютеры будут видеть друг друга, компьютеры за пределами сети видеть компьютеры внутри сети не будут.\n\n127.0.0.1/32 - адрес нашего компьютера, и другие компьютеры по этому адресу увидят только свой компьютер, а не наш.\n\nИнтернет - это совокупность сетей, которые соединены между собой и работают. 0.0.0.0/0 - весь интернет.\n\nРоутер (маршрутизатор, getway) - устройство у которого есть больше одного интерфейса и они находятся в разных сетях и роутер соединяет одну подсеть с другой подсетью и благодаря этому мы можем взаимодействовать.\n\n**VLAN порт** - это второй интерфейс роутера - порт к которому подключен провайдер и на VLAN будет другая подсеть.\n\n192.168.0.0/16 - локальные сети.\n\n## NAT\nNAT - ретрансляция адресов.\nКогда мы обращаемся в сеть, мы обращаемся через VLAN и наш ip меняется.\n\n**Проброска порта** - это когда то что приходит на адрес VLAN можно пробросить к локальному адресу. Чтобы наш компьютер стал доступен из вне.\n\n**Толстый клиент** - 1С бухгалтерия, компьютерные онлайн игры;\n\n**Тонкий клиент** - браузерные приложения;\n\n## MAC\nMAC - физический адрес, назначается утсройству заводом изготовителем.\n\nИспользуется при первичной адресации, чтобы вас можно было найти в сети при первичном обращении.\n\n## DHCP\nDHCP протсокл динамических хостов, протокол к котрому обращается клиент и он выдает настройки: ip адрес, маску, шлюз, DNS.\nDHCP выдает настройки в аренду.\n\n## DNS\nDNS, Domain Name System - серверное приложение, которое хранит таблицу, в которой записано доменное имя и его ip адрес и слушает запросы от пользователей и выдает ip адрес запрашиваемого сайта.\n\n## Протокол\nПротокол - набор правил, описание того, как работают между собой клиент и сервер.\n\nПротоколы и порты по умолчанию:\n- DHCP \n- DNS :53\n- HTTP :80\n- FTP :21\n- POP3 :110\n- UDP/TCP\n\n## Порт\nКогда серверное прилодение работает оно занимает опрелеленный порт.\n\nПорт - это число от 1- 65535. IP адрес можно сравнить с домом, а порт - это квартира.\n\nОдин порт может использовать только одно приложение. Если нужно несколько приложений нужно добавить еще один порт.\n","date":"2022-06-24T00:00:00.000Z","icon":"fas fa-bug","image":"null","path":"/ethernet-wi-fi-ip-mac-maska-podseti-vlan/","order":1,"category":{"title":"nets","path":"/category/nets/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[{"value":"Хост","anchor":"#хост"},{"value":"Сетевой итерфейс","anchor":"#сетевой-итерфейс"},{"value":"Hostname","anchor":"#hostname"},{"value":"IP адрес","anchor":"#ip-адрес"},{"value":"Маска подсети","anchor":"#маска-подсети"},{"value":"Диапазон сети","anchor":"#диапазон-сети"},{"value":"NAT","anchor":"#nat"},{"value":"MAC","anchor":"#mac"},{"value":"DHCP","anchor":"#dhcp"},{"value":"DNS","anchor":"#dns"},{"value":"Протокол","anchor":"#протокол"},{"value":"Порт","anchor":"#порт"}]}},{"node":{"id":"2793248ccd806c635d93023fd7da0d80","title":"Модель OSI vs стек протоколов TCP/IP","content":"\n## Модель OSI\nМодель OSI - это описание уровней и какие протоколы используются на этих уровнях.\n\n### Уровни\n\n- Прикладной: HTTP, FTP, POP3\n- Представления: JPG, ASCII\n- Сеансовый: RPC, PAP\n- Транспортный: TCP, UDP\n- Сетевой: IP(IPv4, IPv6)\n- Канальный: Ethernet, 802.22\n- Физический: радиоканал или витая пара\n\n### Разница между TCP и UDP\n\n\n**UDP** - транспортный протокол без подтверждения доставки;  \nТак как нам не всегда нужно подтверждение доставки и не важна точность данных, например, разговор по скайпу, прослушивание музыки.\n\n**TCP** - транспортный протокол с подтверждением доставки;  \nНапример, открытие страницы в интернет -  если что то не дойдет, то поедет верстка, отправка письма - если что то потеряется, то будет потерян смысл пиисьма, отправка файла и т.д.\n\nЕсли смотреть на процесс открытия web-страницы в интернете то это будет выглядеть так:  \n\nесли смотреть с **физического уровня**, то  мы подключены к интернету по витой паре или радиоканалу(wi-fi);\n\nесли с **канального уровня**, то у wi-fi есть стандарт 802.11g 802.11ab мы подкючаемся по нему;\n\nс точки зрения **сетевого уровня**, у нас ip адресация - откуда и куда нужно отправить информацию;\n\nс точки зрения **транспортного уровня**, http работает по TCP, проверка целостности данных;\n\n**сеансовый уровень** не используется;\n\nс точки зрения **представления** мы отправили наш запрос в виде текста (ASCII - текст);\n\nс точки зрения **прикладного уровня**, мы используем HTTP;\n\n## Модель TCP/IP\n\nTCP/IP - название стека протоколов\n\n- Прикладной: HTTP, FTP, POP3\n- Транспортный: TCP, UDP\n- Сетевой: IP(IPv4, IPv6)\n- Сетевого доступа: Ethernet, 802.22 + радиоканал или витая пара\n\n\nЧек-лист API тестов\nКорректность структуры данных\nPOST запросы\nЗаполнены все поля валидными данными\nЗаполнены только обязательные поля\nЗаполнены не все обязательные поля\nНе заполнено ни одно поле\nВалидация данных в полях (корректные и некорректные данные)\nПустой JSON\nДата создания объекта\nGET запросы\nПустой список (если возможно)\nЗаполненный список\nПагинация в списке (limit, offset)\nПолучение списка с ограничением на количество записей\nПолучение списка начиная с указанного номера\nВ случае передачи параметров с некорректным значением возвращается 400 с описанием ошибки в теле ответа\nПри отрицательном offset список пользователей возвращается начиная с первой позиции\nПри несуществующем offset возвращается пустой список пользователей\nСортировка списка\nЗапрос данных по валидному ID, проверка возвращения корректных данных\nЗапрос данных по несуществующему ID, но в валидном формате\nЗапрос данных по невалидному ID\nPUT запросы\nОбновление с корректными данными\nОбновление по несуществующему ID\nОбновление по невалидному ID\nВалидация полей (корректные и некорректные данные)\nЧастичное обновление (в JSON присутствуют не все поля)\nDELETE запросы\nУдаление существующего объекта\nУдаление уже удаленного объекта\nУдаление по несуществующему ID\nУдаление по невалидному ID\nУдаление и повторное добавление такой же сущности (если есть уникальные поля)\nПроверка статусов ответов\nПроверка всех возможных ошибок\nОстальные специфичные проверки в случае сложной логики","date":"2022-06-24T00:00:00.000Z","icon":"fas fa-bug","image":"null","path":"/model-osi-vs-stek-protokolov-tcp-ip/","order":1,"category":{"title":"nets","path":"/category/nets/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[{"value":"Модель OSI","anchor":"#модель-osi"},{"value":"Модель TCP/IP","anchor":"#модель-tcpip"}]}}]}},"relatedCategory":null},"context":{}}