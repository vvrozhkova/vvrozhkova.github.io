{"hash":"74078440e78cf7eff9cd218b18924da13af0a419","data":{"post":{"title":"Подходы к автоматизации тестирования","content":"\n## Виды подходов\nВ автоматизированном тестировании выделяют следующие подходы:\n\n1. TDD (англ. Test Driven Development);\n2. BDD (англ. Behaviour Driven Development);\n3. KDT (англ. Keyword Driven Testing);\n4. DDT (англ. Data-driven testing).\n\n## Data-Driven Testing\nЭто тестирование, управляемое данными. При таком подходе тестовые данные хранятся отдельно от тест-кейсов, допустим, в файле либо в базе данных. Такое разделение логически упрощает тесты.\n\nData-Driven Testing используется в тех проектах, где нужно выполнить тестирование отдельных приложений в нескольких средах с большими наборами данных и стабильными test cases.\n\nОбычно при DDT выполняются следующие операции:\n- извлечение части тестовых данных из хранилища;\n- ввод данных в форму приложения;\n- проверка результатов;\n- продолжение тестирования со следующим набором входных данных.\n\nЧтобы проверка приложения была успешна, потребуются разные комбинации данных. \n\n## Keyword Driven Testing\nРечь идёт о тестах, управляемых ключевыми словами. Данный подход предполагает использование ключевых слов, описывающих набор действий, нужных для выполнения конкретного шага тестового сценария. \n\nПри таком подходе в первую очередь определяется набор ключевых слов, а только после этого ассоциируется функция либо действие, связанное с данным ключевым словом. Например, каждые шаги теста, такие как щелчок мышью, нажатие клавиши, открытие либо закрытие браузера описываются определёнными ключевыми словами («открыть» — openbrowser, «нажать» — click и т. п.).\n\nПри KDT-подходе вы можете создавать простые функциональные тесты на самых ранних этапах разработки и тестировать приложение по частям. \n\nЭтапы разработки KDT-тестов:\n\n1. Определяем ключевые слова.\n2. Реализуем ключевые слова как исполняемые файлы.\n3. Создаём тест-кейсы.\n4. Создаём скрипты.\n5. Выполняем автоматизированные сценарии.\n\nПлюсы подхода:\n\n1. функциональные тестировщики могут планировать автоматизацию тестирования до того, как приложение будет готово;\n2. тесты можно разработать без знаний программирования;\n3. подход не зависит от выбранного языка программирования. \n\n## Test Driven Development\nПодход разработки через тестирование (TDD) предполагает организацию автоматического тестирования посредством написания модульных, функциональных и интеграционных тестов, определяющих требования к коду перед написанием кода.\nТо есть в первую очередь пишется тест, проверяющий корректность работы ещё ненаписанного кода. Тест, само собой, не проходит. Далее программист пишет код, где выполняются действия, необходимые для прохождения теста. Когда тест будет успешно пройден, возможна доработка имеющегося кода.\n\nРазработка через тестирование — это больше, чем просто проверка корректности, так как она оказывает влияние и на дизайн программы. Если вы изначально сфокусированы на тестах, вам проще представить, какая именно функциональность нужна пользователю. В результате разработчик продумает детали интерфейса до его реализации. Это, в свою очередь, сократит время на разработку и отладку.\n\nКроме того, разработка через TDD сосредотачивается на тестировании отдельно взятых модулей, при этом используются заглушки (mock-объекты) для представления внешнего мира.\n\n## Behavior Driven Development\nПодход BDD — это разработка, основанная на поведении. По сути, BDD является разновидностью (расширением) TDD с той лишь разницей, что BDD-подход ориентирован на поведение сущности, которую вы тестируете (в TDD основной фокус идёт непосредственно на сам код). Суть BDD заключается в описании системы архитектуры приложения в терминах, понятных неспециалисту. Это даёт возможность ускорить процесс получения обратной связи, убрав традиционные барьеры. То есть описание пользовательских сценариев происходит на естественном языке — грубо говоря, на языке бизнеса.\n\n#### Источник информации:\n1. [Подходы к автоматизации тестирования веб-приложений](https://otus.ru/nest/post/1083/)","description":"Подходы к автоматизации тестирования","image":"null","category":{"id":"interview","title":"interview","path":"/category/interview/"},"date":"04/08/2022","path":"/podhody-k-avtomatizaczii-testirovaniya/","links":[{"title":"","items":[{"title":"Собеседование в 2ГИС","link":"/sobesedovanie-v-2-gis/"}]}],"headings":[{"value":"Виды подходов","anchor":"#виды-подходов"},{"value":"Data-Driven Testing","anchor":"#data-driven-testing"},{"value":"Keyword Driven Testing","anchor":"#keyword-driven-testing"},{"value":"Test Driven Development","anchor":"#test-driven-development"},{"value":"Behavior Driven Development","anchor":"#behavior-driven-development"}],"subtitles":[{"depth":2,"value":"Виды подходов","anchor":"#виды-подходов"},{"depth":2,"value":"Data-Driven Testing","anchor":"#data-driven-testing"},{"depth":2,"value":"Keyword Driven Testing","anchor":"#keyword-driven-testing"},{"depth":2,"value":"Test Driven Development","anchor":"#test-driven-development"},{"depth":2,"value":"Behavior Driven Development","anchor":"#behavior-driven-development"},{"depth":4,"value":"Источник информации:","anchor":"#источник-информации"}],"tags":[{"id":"Автоматизация тестирования","title":"Автоматизация тестирования","path":"/tag/%D0%90%D0%B2%D1%82%D0%BE%D0%BC%D0%B0%D1%82%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D1%8F%20%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F/"},{"id":"подходы к автоматизации","title":"подходы к автоматизации","path":"/tag/%D0%BF%D0%BE%D0%B4%D1%85%D0%BE%D0%B4%D1%8B%20%D0%BA%20%D0%B0%D0%B2%D1%82%D0%BE%D0%BC%D0%B0%D1%82%D0%B8%D0%B7%D0%B0%D1%86%D0%B8%D0%B8/"}]},"comments":{"edges":[]}},"context":{}}