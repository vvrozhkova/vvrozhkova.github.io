{"hash":"aa5a7ff62b399012289acf12f7cc1503ba4e22e5","data":{"post":{"title":"Критерии приемки","content":"\n## Критерии приемки (Acceptance Criteria)\n\n_Критерии приемки (acceptance criteria): Критерии выхода, которым должны соответствовать компонент или система, для того, чтобы быть принятыми пользователем, заказчиком или другим уполномоченным лицом. (IEEE 610)_\n\nКритерии приемки - это условия, которым должен удовлетворять программный продукт, чтобы быть принятым пользователем, заказчиком или, в случае функциональности системного уровня, потребляющей системой. Проще говоря - это список деталей (также известных как требования) о том, как новая функция (feature) программного обеспечения должна работать / выглядеть. Это гарантирует, что:\n\n* Функция разработана хорошо. В противном случае важный или полезный аспект может быть упущен - и никто этого не заметит до самого конца.\n* Это работает так, как было задумано. Если описание расплывчато, разработчикам, возможно, придется сделать предположения о том, как должна работать каждая область. С критериями приемки разработчики точно знают, какой дизайн и функциональность ожидаются.\n* QA знает, чего ожидать во время тестирования. Даже если функция не выглядит сломанной, она может работать не так, как хотели менеджеры по продукту. Если критерии приемки отсутствуют, тестировщики не могут сообщать о подобных проблемах.\n\nХорошие критерии приемки должны быть простыми для понимания, но с достаточной детализацией, чтобы убедиться, что они не слишком расплывчаты. Это не всегда универсальный подход. Но они всегда должны предоставлять достаточно информации для разработчиков, чтобы создать функцию, а для QA - для ее тестирования. Это не значит, что в процессе разработки программного обеспечения не возникнет вопросов. Но в целом функция должна быть понятной.\n\nФормат / макет / шаблон критериев приемки (Acceptance Criteria Format/Layout/Template): существует два основных типа критериев приемки, основанные на сценариях и правилах:\n\n* Критерии приемлемости, основанные на сценариях (Scenario-based acceptance criteria), используют шаблон для подробного описания конкретного поведения / последовательности действий пользователя;\n* Критерии приемлемости на основе правил (Rule-based acceptance criteria) - это скорее простой список того, как функция должна выглядеть / работать;\n\n**Scenario-based acceptance criteria** соответствует формату “Дано/Когда/Тогда” (“Given/When/Then”) (основан на BDD - [behavior driven development](https://en.wikipedia.org/wiki/Behavior-driven\\_development)):\n\n* Given /_какой-то аспект, связанный с поведением пользователя_/\n* When /_пользователь выполняет определенное действие_/\n* Then /_происходит определенный результат_/\n\nМежду ними в случае нескольких условий можно добавлять “И” (“AND”).\n\n**Rule-Based Acceptance Criteria** - это простой список «правил» о том, как функция должна выглядеть / работать:\n\n* Все кнопки должны быть определенного цвета;\n* Кнопка входа должна перенаправлять пользователя в определенный раздел;\n* Кнопка регистрации должна находиться в определенной области;\n* Все кнопки должны быть серыми, если не выполняются определенные требования;\n* и многое другое;\n\nХотя критерии, основанные на правилах, имеют более простой формат, нет причин, по которым они не могут быть длинными и подробными.\n\n**Кто пишет критерии приемки?** Обычно в создании критериев приемки участвуют несколько человек или команд. Тем не менее, это в первую очередь делает product manager (или “product owner”). Разработчики несут ответственность за обеспечение функциональности функции, а QA - за подтверждение ее удобства использования. Но критерии приемки создаются человеком или командой, ответственной за решение, какие новые функции добавить в продукт (независимо от типа приложения или веб-сайта).\n\nБольшая часть Agile включает внесение изменений по мере развития проекта. Так **могут ли критерии приемки измениться в середине спринта?** Ответ: «Это зависит от обстоятельств». Если спринт начался, но разработчики еще не завершили эту функцию, можно изменить требования. Но важно всегда сначала согласовывать с разработчиками и держать других (например, QA) в курсе. Тестировщики могли написать test cases, которые больше не актуальны после изменений. Кроме того, новый объем работы может оказаться слишком большим, чтобы разработчики могли завершить его вовремя.\n\n\\*\\*User Stories vs Acceptance Criteria: \\*\\*пользовательские истории и критерии приемки идут рука об руку. Пользовательская история описывает основную цель новой функции - обзор того, как она поможет пользователям. Критерии приемки перечисляют способы работы функции с технической точки зрения. Обычно в тикетах (например, в Jira или Trello) вверху указывается пользовательская история, за которой следуют критерии приемки\n\n**Definition of Done:** чтобы заявка (или функция) считалась «выполненной», все критерии должны работать. Например, предположим, что пользовательская история была: “Как пользователь, я хочу иметь возможность войти в систему, чтобы получить доступ к панели управления моей учетной записи”. Как уже упоминалось, пользователь может войти в систему, чтобы получить доступ к панели управления своей учетной записи. Но тикет не считался бы «done», если бы он также содержал следующие критерии приемки: “Кнопка входа должна быть бирюзовой”, а фактически кнопка входа была бы, например, желтой. Иногда команда решает запустить функцию даже с незначительными несоответствиями. Таким образом, они могут пометить тикет как выполненный (или создать отдельный для решения оставшихся аспектов), даже если не все критерии работают. Но с точки зрения технического определения, это не «готово», пока не пройдут все критерии приемки.\n\nИсточник: [What is Acceptance Criteria?](https://www.mindfulqa.com/acceptance-criteria/)\n","description":"Критерии приемки","image":"null","category":{"id":"manual","title":"manual","path":"/category/manual/"},"date":"13/05/2022","path":"/kriterii-priemki/","links":[{"title":"","items":[{"title":"13. Тестовая документация","link":"/testovaya-dokumentacziya/"},{"title":"Тестовая политика и стратегия","link":"/testovaya-politika-i-strategiya/"},{"title":"Международные стандарты тестовой документации","link":"/mezhdunarodnye-standarty-testovoj-dokumentaczii/"},{"title":"Master Test Plan и тестовые планы для каждого уровня","link":"/master-test-plan-i-testovye-plany-dlya-kazhdogo-urovnya/"},{"title":"Понятие Test Case и Test Suite","link":"/ponyatie-test-case-i-test-suite/"},{"title":"Понятие Test Basis, Test Condition и Test Procedure","link":"/ponyatie-test-basis-test-condition-i-test-procedure/"},{"title":"Check-list, как представитель Experience-Based","link":"/check-list-kak-predstavitel-experience-based/"},{"title":"Bug Report","link":"/bug-report/"},{"title":"Summary Report","link":"/summary-report/"},{"title":"Requirements Tracebility Matrix","link":"/requirements-tracebility-matrix/"},{"title":"Test Data Tables","link":"/test-data-tables/"},{"title":"Test Scenario","link":"/test-scenario/"},{"title":"External Test Reports","link":"/external-test-reports/"},{"title":"Критерии приемки","link":"/kriterii-priemki/"},{"title":"Метрики тестирования","link":"/metriki-testirovaniya/"},{"title":"Требования","link":"/trebovaniya/"},{"title":"Тестовый оракул","link":"/testovyj-orakul/"}]}],"headings":[{"value":"Критерии приемки (Acceptance Criteria)","anchor":"#критерии-приемки-acceptance-criteria"}],"subtitles":[{"depth":2,"value":"Критерии приемки (Acceptance Criteria)","anchor":"#критерии-приемки-acceptance-criteria"}],"tags":[{"id":"Тестовая документация","title":"Тестовая документация","path":"/tag/%D0%A2%D0%B5%D1%81%D1%82%D0%BE%D0%B2%D0%B0%D1%8F%20%D0%B4%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F/"}]},"comments":{"edges":[]}},"context":{}}