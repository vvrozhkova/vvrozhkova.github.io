{"hash":"02799b688b4cb7ace869e49ff69fbf95eb6f42e6","data":{"tag":{"title":"qa","path":"/tag/qa/","belongsTo":{"totalCount":39,"pageInfo":{"totalPages":4,"currentPage":1},"edges":[{"node":{"id":"9dbf86a57a0665da8cf1e6f212d1348b","title":"Чек лист проверок API","content":"\n## Чек-лист API тестов\n- Корректность структуры данных\n- POST запросы\n  - Заполнены все поля валидными данными\n  - Заполнены только обязательные поля\n  - Заполнены не все обязательные поля\n  - Не заполнено ни одно поле\n  - Валидация данных в полях (корректные и некорректные данные)\n  - Пустой JSON\n  - Дата создания объекта\n- GET запросы\n  - Пустой список (если возможно)\n  - Заполненный список\n  - Пагинация в списке (limit, offset)\n  - Получение списка с ограничением на количество записей\n  - Получение списка начиная с указанного номера\n  - В случае передачи параметров с некорректным значением возвращается 400 с описанием ошибки в теле ответа\n  - При отрицательном offset список пользователей возвращается начиная с первой позиции\n  - При несуществующем offset возвращается пустой список пользователей\n  - Сортировка списка\n  - Запрос данных по валидному ID, проверка возвращения корректных данных\n  - Запрос данных по несуществующему ID, но в валидном формате\n  - Запрос данных по невалидному ID\n- PUT запросы\n  - Обновление с корректными данными\n  - Обновление по несуществующему ID\n  - Обновление по невалидному ID\n  - Валидация полей (корректные и некорректные данные)\n  - Частичное обновление (в JSON присутствуют не все поля)\n- DELETE запросы\n  - Удаление существующего объекта\n  - Удаление уже удаленного объекта\n  - Удаление по несуществующему ID\n  - Удаление по невалидному ID\n  - Удаление и повторное добавление такой же сущности (если есть уникальные поля)\n- Проверка статусов ответов\n- Проверка всех возможных ошибок\n- Остальные специфичные проверки в случае сложной логики","date":"2022-06-09T00:00:00.000Z","path":"/chek-list-proverok-api/","icon":"fas fa-bug","image":"null","order":null,"category":{"title":"api","path":"/category/api/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[{"value":"Чек-лист API тестов","anchor":"#чек-лист-api-тестов"}]}},{"node":{"id":"e2ee3d5b1de78d3b249f973bb2f483f2","title":"Assertions","content":"\nВместо сложения слов лучше использовать supplier\n\n()-> \"gfdg\"+ test + \"expected \";","date":"2022-06-08T00:00:00.000Z","path":"/assertions/","icon":"fas fa-bug","image":"null","order":null,"category":{"title":"automation","path":"/category/automation/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[]}},{"node":{"id":"6f27ad167274af18748e3dabc1d1618d","title":"Курс по автоматизации тестирования Java","content":"\n## Вводное занятие. Сразу к практике!\n\n❌ [Вводное занятие. 13-ый поток](https://qa.guru/pl/teach/control/lesson/view?id=242247981&editMode=0)\n\n❌ [Selenium 4. Новые возможности](https://qa.guru/pl/teach/control/lesson/view?id=234815403&editMode=0)\n\n## Профессионально работаем с IntelliJ IDEA Юрий Артамонов\n\n1. Основы\n2. Git and Github\n3. Docker\n4. Базы данных\n5. HTTP Client\n6. Selenium\n7. BDD Support\n\n✅ https://www.youtube.com/watch?v=5qrn-Z5Put4\n\n✅ https://www.youtube.com/watch?v=zp0qC6JT0rE\n\n## 2. Git. Github. Погружаемся. Дмитрий Тучс\n\n1. Еще раз повторим основы Git & Github.\n2. Основы ветвления, pull requests.\n\n✅ [Дополнительное занятие. Станислав Васенков. «GitHub. Readme»](https://www.youtube.com/watch?v=ERYv-g2l0QE)\n\n❌ [Принимаем пулреквесты](https://www.youtube.com/watch?v=X0X1N39ciUw)\n\n## 3. Погружаемся в инструментарий и библиотеки. Станислав Васенков.\n\n1. Теория: Gradle, JUnit5, Selenide.\n2. Практика. Работаем с тренажером demoqa.com\n3. Рассмотрим подробнее возможности Selenide и CSS/Xpath-селекторы\n\n## 4. Основы Java. Дмитрий Тучс.\n\n1. Src - main\n2. Класс с точки зрения файлов\n3. Класс с точки зрения Java\n4. Class fields - переменные (в чем разница)\n5. Примитивные типы данных\n6. Литералы\n7. Операторы\n8. Управляющие конструкции\n9. Метод, как описание поведения\n10. Создание обьектов и вызов методов\n\n✅ [QA.GURU 13-ый поток. Дмитрий Тучс. «Основы Java»](https://www.youtube.com/watch?v=JyLdYQPNOi8)\n\n✅ [Основы Java #2. Продолжение](https://qa.guru/pl/teach/control/lesson/view?id=231894553&editMode=0)\n\n✅ [QA.GURU 11-ый поток. Дополнительное занятие. Дмитрий Тучс. «Java. Продолжение»](https://www.youtube.com/watch?v=IFqwHW5PtSM)\n\n✅ [Дополнительное занятие. Дмитрий Тучс. ООП на примере Java](https://qa.guru/pl/teach/control/lesson/view?id=222958479&editMode=0)\n\n✅ [QA.GURU 8-ой поток. Дополнительное занятие. Дмитрий Тучс. «Основы Java. Продолжение»](https://www.youtube.com/watch?v=Arb5Zt1ydgI)\n\n✅ [Основы Java #3. Продолжение](https://qa.guru/pl/teach/control/lesson/view?id=231894597&editMode=0)\n\n✅ [QA.GURU 11-ый поток. Дополнительное занятие. Дмитрий Тучс. «Основы Java. Продолжение»](https://www.youtube.com/watch?v=sCRgsgREWKU)\n\n✅ [QA.GURU 11-ый поток. Дмитрий Тучс. Дополнительное занятие «Основы Java. Продолжение. Часть II»](https://www.youtube.com/watch?v=icT5QaOC_Yg)\n\n## 5. Продолжаем разрабатывать автотесты. PageObjects. Станислав Васенков.\n\n1. Добавляем в код PageObjects\n2. Изучаем подходы - степовой, сценарный, dsl\n3. Добавляем PageComponents\n\n❌ [Станислав Васенков — Как Testid-strategy победила PageObject и BDD/Cucumber монстров](https://www.youtube.com/watch?v=w5EgCZgj5yE)\n\n## 6. Продолжаем разрабатывать автотесты. Генерация тестовых данных. Станислав Васенков.\n\n1. Генерим рандомные значения используя встроенные библиотеки\n2. Используем JavaFaker\n\n## 7. JUnit 5. Дмитрий Тучс\n\n1. Аннотация @Test\n2. Что из себя представляют аннотации в Java\n3. Пишем свою простейшую реализацию JUnit\n4. @Disabled , @DisplayName\n5. тест кейс - что такое и из чего состоит\n6. Параметризованные тесты - концепция\n- Sources (дата-провайдеры)\n- Нэйминг\n\n❌ [junit5/junit4/assertions: кто как готовит свои тесты, кто на чем обжегся и какие вещи никогда не стал бы использовать](https://www.youtube.com/watch?v=w1ey2zjf3-s)\n\n❌ [Дмитрий Тучс — JUnit 5 Parallel test execution. Теория и практика](https://youtu.be/ZIkIUCyJBGU)\n\n❌ [QA.GURU 10-ый поток. Дополнительное занятие. Дмитрий Тучс. «JUnit 5. Продолжение»](https://www.youtube.com/watch?v=3pOjh6O7-cg)\n\n## 8. Selenide #1. Алексей Виноградов\n\n1. Лайвкодинг - тесты для GitHub\n2. DOM для начинающих\n3. Основные функции библиотеки Selenide (справочник-шпаргалка)\n\n❌ [Обзор новинок Selenide и Q&A](https://qa.guru/pl/teach/control/lesson/view?id=222958530&editMode=0)\n\n## 10. Allure Reports. Артём Ерошенко\n\n1. Практика. Подключение Allure Reports и настройка отчетности о прохождении автотестов.\n2. Практика. Построение более информативной отчетности c вложениями:\n- Прикладываем скриншоты, файлы, логи и другие вложения в отчет.\n3. Теория. Обзор возможностей Allure Reports.\n\n## 9. Работаем с файлами. Дмитрий Тучс\n\n1. Как скачать и прочитать файл\n2. Проверяем контент в .txt, .pdf, .xls/.xlsx, .doc/.docx, .zip\n\n## 11. Jenkins. Создаем первую задачу. Станислав Васенков.\n1. Практика. Создаем задачу (Job), связываем с репозиторием в Github, запускаем тесты удаленно.\n2. Теория. Основы Jenkins.\n3. Теория. Основы CI/CD.\n4. Работа в парах: создаем друг другу джобы и запускаем чужой код\n\n## 12. Управляем параметрами в коде и в Jenkins. Станислав Васенков.\n1. Передаем параметры в код из командной строки\n2. Прячем приватные данные с библиотекой owner\n3. Передаем параметры из jenkins\n\n## 13. Телеграм-бот. Отправляем уведомления о результатах прохождении автотестов. Станислав Васенков.\n1. Практика. Пишем телеграмм-бота.\n2. Практика. Постобработка сборки. Настраиваем отправку уведомлений в Jenkins.\n3. Теория. Обзор возможностей Telegram API.\n\n## 14. Учимся быстро разрабатывать готовые проекты для тестовых заданий. Станислав Васенков.\n\nНабиваем руку небольшими проектами.\n\n1. Находим интересную нам вакансию (hh.ru / linkedin / @qa_jobs)\n2. Делаем небольшой проект:\n- разрабатываем 5-10 простых автотестов на сайт из вакансии,\n    - создаем задачу в jenkins,\n- прячем секретные данные с owner (более развернуто будет в следующем занятии)\n- настраиваем Allure-отчет, добавляем вложения:\n    - снимки экрана,\n    - логи браузера,\n    - видеозапись теста,\n- настраиваем нотификация в telegram / slack.\n\nПо мере прохождения курса добавим сюда:\n- автотесты на API\n- тест-план Allure TestOps - с ручными и автоматизированными тестами\n- интеграцию с Jira\n3. Отправляем наш проект hr c сопроводительным письмом\n\n\n## 15. Selenoid. Роман Орлов\n1. Практика. Добавляем контейнеризацию к задаче в Jenkins.\n2. Теория. Основы Docker. Selenoid\n\n❌ [Дополнительное занятие. Selenoid. Роман Орлов (на GO)](https://qa.guru/pl/teach/control/lesson/view?id=225328797&editMode=0)\n\n## 16. Библиотека Owner. Артём Ерошенко\n\n1. Правильно организуем хранение свойств (properties) в проекте с библиотекой Owner\n2. Прячем секретные данные в Jenkins\n\n## 17. Selenide #2. Алексей Виноградов\n\n1. Практика:\n- Написание автотестов на Selenide.\n- Тестирование виджетов.\n2. Теория:\n- Закрепление знаний полученных на практике\n- Java\n- JUnit5\n\n## 18. REST API. Пишем автотесты с Rest-assured. Станислав Васенков.\n\n1. Практика. Пишем тесты на REST API при помощи библиотеки Rest-assured\n2. Теория. Основы HTTP-протокола, типы запросов, коды ответов.\n\n❌ [Алексей Кузнецов. «Retrofit2»](https://qa.guru/pl/teach/control/lesson/view?id=229174108&editMode=0)\n\n## REST API. Декомпозируем UI-тесты. Подключаем отчетность\n\n1. Превращаем UI-взаимодействия в Api-запросы.\nБольше возможностей REST-assured\n2. Подключаем Allure-listener\n3. Добавляем шаблоны для более красивого отчета\n\n## 19. REST API. Продолжаем изучать. Станислав Васенков.\n\n1. Практика. Декомпозируем UI-автотест в несколько API-автотестов.\nБольше возможностей REST-assured\n2. Изучаем вспомогательные инструменты:\n- Postman,\n- Charles/Fiddler,\n- chrome dev tools (вкладка Network)\n3. Теория. Больше про REST API.\n4. Теория. Обзор SOAP API\n\n## 20. REST API/ Groovy. Алексей Кузнецов\n\n- Groovy для ассертов и основы языка\n- Немного магии java\n- Спецификации\n- Шаблоны для Allure\n\n## Дополнительное занятие. REST API. Дмитрий Тучс\n\n- Swagger\n- API с другой стороны (backend на spring boot)\n- Интеграция backend со Swagger\n- Контроллеры, возвращающие списки объектов\n- Практика\n\n## Дополнительное занятие. SOAP API. Дмитрий Тучс\n\n1. Основы протокола\n2. Soap UI\n\n## 21. Мобильная автоматизация #1. Разрабатываем автотесты с Browserstack\n\n1. Практика. Учимся пользоваться инспектором в Browserstack, разрабатываем первые автотесты на iOS / Android с Selenide\n2. Практика. Browserstack-API. Забираем логи, видео.\n3. Теория. Основы тестирования мобильных приложений.\n\n## 22. Мобильная автоматизация #2. Разрабатываем автотесты с эмулятором Android-устройства и на своем телефоне\n\n1. Настраиваем рабочее место:\n- Appium\n- Android Studio\n- Настраиваем переменные среды\n2. Эмулируем Android устройство\n3. Подключаем свой телефон\n4. Практика. Разрабатываем автотесты с Appium.\n5. Теория. Основы Appium.\n\n[BONUS] Запускаем тесты на школьном Selenoid - Android\n\n## 23. Allure TestOps #1. Артем Ерошенко\n1. Знакомство с системой.\n2. Заведение тест-кейсов.\n3. Создание первого тест-плана.\n\n## 24. Allure TestOps #2. Артем Ерошенко\n1. Интеграции с Jenkins и Jira\n2. Объединение ручных тестов и автотестов в единый тест-план\n3. Метрики, графики, углубленное изучение платформы\n4. Администрирование\n5. Обзор решений и внедренных проектов\n\n## 25. Дипломный проект\n\nНабиваем руку небольшими проектами.\n\n1. Находим интересную нам вакансию (hh.ru / linkedin / @qa_jobs)\n2. Делаем небольшой проект - разрабатываем 5-10 простых автотестов на сайт из вакансии, добавляем джобу в дженкинсе с аллюр-отчетом\nДобавляем сюда Selenoid, Allure TestOps, Jira, Telegram notifications\n3. Отправляем наш проект hr c сопроводительным письмом\n\n❌ [Проверка дипломных проектов 7-го потока](https://qa.guru/pl/teach/control/lesson/view?id=223930680&editMode=0)\n\n❌ [Проверка дипломных проектов 8-го потока](https://www.youtube.com/watch?v=wI8dVgOQzJ8)\n\n## 26. Переезд на собственную инфраструктуру с ресурсов школы. Егор Иванов (выпускник первого потока)\n\nНастроим тестовый стенд локально. Точно также стенд настраивается на любом VPS, например в DigitalOcean.com\n\n1. Рассмотрим базовые команды Linux, которые понадобятся\n2. Доступ к удаленному серверу через ssh Ubuntu  \n  2.1 Доступ к Ubuntu через ssh при помощи публичного RSA ключа\n3. На виртуальной машине установим:  \n  3.1 Java  \n  3.2 Docker  \n  3.3 Docker-compose\n4. Создаем конфиг для docker-compose\n5. Поднимаем Selenoid + Selenoid UI  \n  5.1 Проверяем, как это работает\n6. Поднимаем Jenkins  \n  6.1 Первичные настройки Jenkins.  \n  6.2 Проверка работоспособности.\n  \nЗадание не обязательное. Доступ к инфраструктуре школы останется после окончания обучения (в разумных пределах, конечно).\n\n❌ [Дополнительное занятие. SQL + работа с базой из Java. Дмитрий Тучс.](https://qa.guru/pl/teach/control/lesson/view?id=222958523&editMode=0)\n\n❌ [Дополнительное занятие. Дмитрий Тучс. Тестируем gRPC](https://qa.guru/pl/teach/control/lesson/view?id=222958538&editMode=0)\n\n❌ [Делаем ревью библиотеки allure-notifications. Дмитрий Тучс. Алексей Кузнецов](https://qa.guru/pl/teach/control/lesson/view?id=242453199&editMode=0)\n\n❌ [Делаем ревью автотестов для Allure TestOps. Дмитрий Тучс. Александр Киреев](https://qa.guru/pl/teach/control/lesson/view?id=243490573&editMode=0)\n\n❌ [Дорабатываем сервис генерации проектов start.autotests.cloud. Станислав Васенков](https://qa.guru/pl/teach/control/lesson/view?id=244143788&editMode=0)\n\n❌ [QA.GURU. Станислав Васенков. «Расширенное занятие по уведомлениям о статусе ваших автотестов.»](https://www.youtube.com/watch?v=ybbGlgCusOQ)\n\n\n\n","date":"2022-06-10T00:00:00.000Z","path":"/kurs-po-avtomatizaczii-testirovaniya-java/","icon":"fas fa-bug","image":"null","order":null,"category":{"title":"automation","path":"/category/automation/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[{"value":"Вводное занятие. Сразу к практике!","anchor":"#вводное-занятие-сразу-к-практике"},{"value":"Профессионально работаем с IntelliJ IDEA Юрий Артамонов","anchor":"#профессионально-работаем-с-intellij-idea-юрий-артамонов"},{"value":"2. Git. Github. Погружаемся. Дмитрий Тучс","anchor":"#2-git-github-погружаемся-дмитрий-тучс"},{"value":"3. Погружаемся в инструментарий и библиотеки. Станислав Васенков.","anchor":"#3-погружаемся-в-инструментарий-и-библиотеки-станислав-васенков"},{"value":"4. Основы Java. Дмитрий Тучс.","anchor":"#4-основы-java-дмитрий-тучс"},{"value":"5. Продолжаем разрабатывать автотесты. PageObjects. Станислав Васенков.","anchor":"#5-продолжаем-разрабатывать-автотесты-pageobjects-станислав-васенков"},{"value":"6. Продолжаем разрабатывать автотесты. Генерация тестовых данных. Станислав Васенков.","anchor":"#6-продолжаем-разрабатывать-автотесты-генерация-тестовых-данных-станислав-васенков"},{"value":"7. JUnit 5. Дмитрий Тучс","anchor":"#7-junit-5-дмитрий-тучс"},{"value":"8. Selenide #1. Алексей Виноградов","anchor":"#8-selenide-1-алексей-виноградов"},{"value":"10. Allure Reports. Артём Ерошенко","anchor":"#10-allure-reports-артём-ерошенко"},{"value":"9. Работаем с файлами. Дмитрий Тучс","anchor":"#9-работаем-с-файлами-дмитрий-тучс"},{"value":"11. Jenkins. Создаем первую задачу. Станислав Васенков.","anchor":"#11-jenkins-создаем-первую-задачу-станислав-васенков"},{"value":"12. Управляем параметрами в коде и в Jenkins. Станислав Васенков.","anchor":"#12-управляем-параметрами-в-коде-и-в-jenkins-станислав-васенков"},{"value":"13. Телеграм-бот. Отправляем уведомления о результатах прохождении автотестов. Станислав Васенков.","anchor":"#13-телеграм-бот-отправляем-уведомления-о-результатах-прохождении-автотестов-станислав-васенков"},{"value":"14. Учимся быстро разрабатывать готовые проекты для тестовых заданий. Станислав Васенков.","anchor":"#14-учимся-быстро-разрабатывать-готовые-проекты-для-тестовых-заданий-станислав-васенков"},{"value":"15. Selenoid. Роман Орлов","anchor":"#15-selenoid-роман-орлов"},{"value":"16. Библиотека Owner. Артём Ерошенко","anchor":"#16-библиотека-owner-артём-ерошенко"},{"value":"17. Selenide #2. Алексей Виноградов","anchor":"#17-selenide-2-алексей-виноградов"},{"value":"18. REST API. Пишем автотесты с Rest-assured. Станислав Васенков.","anchor":"#18-rest-api-пишем-автотесты-с-rest-assured-станислав-васенков"},{"value":"REST API. Декомпозируем UI-тесты. Подключаем отчетность","anchor":"#rest-api-декомпозируем-ui-тесты-подключаем-отчетность"},{"value":"19. REST API. Продолжаем изучать. Станислав Васенков.","anchor":"#19-rest-api-продолжаем-изучать-станислав-васенков"},{"value":"20. REST API/ Groovy. Алексей Кузнецов","anchor":"#20-rest-api-groovy-алексей-кузнецов"},{"value":"Дополнительное занятие. REST API. Дмитрий Тучс","anchor":"#дополнительное-занятие-rest-api-дмитрий-тучс"},{"value":"Дополнительное занятие. SOAP API. Дмитрий Тучс","anchor":"#дополнительное-занятие-soap-api-дмитрий-тучс"},{"value":"21. Мобильная автоматизация #1. Разрабатываем автотесты с Browserstack","anchor":"#21-мобильная-автоматизация-1-разрабатываем-автотесты-с-browserstack"},{"value":"22. Мобильная автоматизация #2. Разрабатываем автотесты с эмулятором Android-устройства и на своем телефоне","anchor":"#22-мобильная-автоматизация-2-разрабатываем-автотесты-с-эмулятором-android-устройства-и-на-своем-телефоне"},{"value":"23. Allure TestOps #1. Артем Ерошенко","anchor":"#23-allure-testops-1-артем-ерошенко"},{"value":"24. Allure TestOps #2. Артем Ерошенко","anchor":"#24-allure-testops-2-артем-ерошенко"},{"value":"25. Дипломный проект","anchor":"#25-дипломный-проект"},{"value":"26. Переезд на собственную инфраструктуру с ресурсов школы. Егор Иванов (выпускник первого потока)","anchor":"#26-переезд-на-собственную-инфраструктуру-с-ресурсов-школы-егор-иванов-выпускник-первого-потока"}]}},{"node":{"id":"5589b8535773fb9a787c3643c3654afd","title":"Ресурсы для написания проекта по автоматизации 1","content":"\n## Kubernetes, Docker, Selenoid\n\n[Ресурсы. Kubernetes, Docker, Selenoid](/resursy-kubernetes-docker-selenoid/)\n\n## Selenium 4\n\n[Ресурсы. Selenium 4](/resursy-selenium-4/)\n\n## API\n\n[Ресурсы. API](/resursy-api/)\n\n## UI\n\n[Ресурсы. UI](/resursy-ui/)\n\n## CI\n\n[Ресурсы. CI](/resursy-ci/)\n\n## Тест дизайн\n\n[Ресурсы. Тест дизайн](/resursy-test-dizajn/)\n\n## Паттерны проектирования\n\nhttps://www.youtube.com/watch?v=EnooA2kEhY0\n\nhttps://www.youtube.com/watch?v=-JI9tcWr8E4\n\nhttps://www.youtube.com/watch?v=oVx1Z04Ajq0\n\nhttps://www.youtube.com/watch?v=pln38fIbYqA\n\n## Статический анализ\n\nhttps://youtube.com/watch?v=O0-vAiqGrVk\n\nhttps://www.youtube.com/watch?v=E87YkXhdxAA\n\n## Тестовое покрытие\n\nhttps://www.youtube.com/watch?v=vl79g-0zzP0\n\nhttps://www.youtube.com/watch?v=lMD82Pj3Llk\n\nhttps://www.youtube.com/watch?v=rtwjMceVRaw\n\n## kotlin в автоматизации\n\nhttps://www.youtube.com/watch?v=fkboozZ2CWA\n\nhttps://www.youtube.com/watch?v=2For6QVZqsg\n\n## Appium\n\nhttps://www.youtube.com/watch?v=2ECGcMejda0\n\nhttps://www.youtube.com/watch?v=qYu0CrXqPps\n\n## Карьера в IT\n\nhttps://www.youtube.com/watch?v=Euh4ohO9Ong\n\nhttps://www.youtube.com/watch?v=1wvYjuq9508\n\nhttps://www.youtube.com/watch?v=cNxX4cyrviA\n\n## Code Review\n\nhttps://www.youtube.com/watch?v=RFUMO7XTAQY\n\nhttps://www.youtube.com/watch?v=edNscDtiYGE\n\n## Тестовые данные \n\nhttps://www.youtube.com/watch?v=E21AxgHX2B0\n\n## Разное\n\nhttps://www.youtube.com/watch?v=99q5KnqycmY\n\nhttps://www.youtube.com/watch?v=x-tNXvvz_KA\n\nhttps://www.youtube.com/watch?v=AoJb6QLeIMI\n\nhttps://www.youtube.com/watch?v=hYSQq4XqWIw\n\nhttps://www.youtube.com/watch?v=roLrGhpQeq4\n\nhttps://www.youtube.com/watch?v=13KmFOo8Qag\n\nhttps://www.youtube.com/watch?v=hQqjXjwWH_4","date":"2022-06-08T00:00:00.000Z","path":"/resursy-dlya-napisaniya-proekta-po-avtomatizaczii-1/","icon":"fas fa-bug","image":"null","order":null,"category":{"title":"automation","path":"/category/automation/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[{"value":"Kubernetes, Docker, Selenoid","anchor":"#kubernetes-docker-selenoid"},{"value":"Selenium 4","anchor":"#selenium-4"},{"value":"API","anchor":"#api"},{"value":"UI","anchor":"#ui"},{"value":"CI","anchor":"#ci"},{"value":"Тест дизайн","anchor":"#тест-дизайн"},{"value":"Паттерны проектирования","anchor":"#паттерны-проектирования"},{"value":"Статический анализ","anchor":"#статический-анализ"},{"value":"Тестовое покрытие","anchor":"#тестовое-покрытие"},{"value":"kotlin в автоматизации","anchor":"#kotlin-в-автоматизации"},{"value":"Appium","anchor":"#appium"},{"value":"Карьера в IT","anchor":"#карьера-в-it"},{"value":"Code Review","anchor":"#code-review"},{"value":"Тестовые данные","anchor":"#тестовые-данные"},{"value":"Разное","anchor":"#разное"}]}},{"node":{"id":"7d259c24b7fc3b35d9985fd391d1dbea","title":"Ресурсы. UI","content":"\n## Разработка фреймворка\n\n✅ [Слои тестового фрамеворка: Что? Где? Когда? Антон Шапин. COMAQA Piter 2017](https://youtu.be/8Qm9TJtclYw)\n\n❌ [Секция QA: Полезные практики создания автоматических тестов с использованием Cucumber-JVM](https://youtu.be/tX3V90K8VIU)\n\n✅ [Практика создания модульного тестового проекта (Денис Кудряшов, Leroy Merlin)](https://youtu.be/eIOyQ4Axktk)\n\n✅ [Десять причин моей ненависти - Андрей Солнцев. QA Fest 2019](https://youtu.be/pln38fIbYqA)\n\n❌ [Mocks and network tricks in UI automation - Дмитрий Прокопук. QA Fest 2019](https://youtu.be/rYl3HV_43qg)\n\n❌ [Не изобретайте велосипед! Грамотные функциональные тесты с WebDriver и Thucydides -Николай Алименков](https://youtu.be/mlS5n6ykAgg)\n\n❌ [Sergey Pirogov - Test Cases as a Code](https://youtu.be/dAJ9CIioTIA)\n\n✅ [Что делать, если у вас слишком много автотестов (Сергей Потанин, Wrike, Воронеж)](https://youtu.be/N2eOA4t_xaM)\n\n❌ [Артем Ерошенко — Воркшоп. Fullstack QA: Разбираемся в зоопарке тестов. Часть 1](https://youtu.be/wMm2mxVv1h0)\n\n❌ [Артем Ерошенко — Воркшоп. Fullstack QA: Разбираемся в зоопарке тестов. Часть 2](https://youtu.be/lRSevfOCqwM)\n\n✅ [Сергей Разуваев — Проблемы и решения при тестировании тяжелого энтерпрайза](https://youtu.be/q7G3825dueQ)\n\n❌ [Андрей Солнцев — Воркшоп: Как начать свой проект автоматизации с нуля. Продолжение (часть 1)](https://youtu.be/h254Tccxgq4)\n\n❌ [Андрей Солнцев — Воркшоп: Как начать свой проект автоматизации с нуля. Продолжение (часть 2)](https://youtu.be/WETyt87o_R4)\n\n✅ [Дмитрий Тучс — JUnit 5 Parallel test execution. Теория и практика](https://youtu.be/ZIkIUCyJBGU)\n\n❌ [#11 Артем и Сева. Моки(Mocks) и стабы(Stubs).](https://youtu.be/VbVcGpS8HV4)\n\n❌ [Николай Алименков Автоматизация тестирования Web UI](https://youtu.be/cUoSTBkeFy4)\n\n❌ [А вы знаете что тестируют ваши тесты? (Николай Алименков, SQADays-11)](https://youtu.be/irldaKe-PwU)\n\n❌ [Андрей Солнцев, Антон Кекс — Воркшоп: Парное программирование. Часть 1](https://youtu.be/8K1apzz8Ml4)\n\n❌ [Андрей Солнцев, Антон Кекс — Воркшоп: Парное программирование. Часть 2](https://youtu.be/Itm_KUGo8Ro)\n\n❌ [Владимир Ситников — assertTrue, как много в этом слове...](https://youtu.be/1XoQv5oeAm8)\n\n[Артем Ерошенко — TestOps: DevOps для тестировщиков](https://youtu.be/Iam2NlTukFQ)\n\n[Артем Ерошенко — Нужно сделать рефакторинг проекта? Есть IDEA!](https://youtu.be/Y6oryeeFZYc)\n\n[Артем Ерошенко — Простота, доверие, контроль — три кита автоматизации веб-тестирования](https://youtu.be/gwXpYB6ZayE)\n## Ускорение тестов\n\nhttps://www.youtube.com/watch?v=GZXq6oovGcw\n\nhttps://www.youtube.com/watch?v=yyzGP2CyMRM\n\n### Flaky tests\n\n- 2017\n\n❌ [2017.11.29 Андрей Солнцев - Flaky tests](https://youtu.be/y5TqMKdzmlk) //27.12\n\n- 2018\n\n❌ [Flaky tests are a pain (Andrei Solntsev, Estonia) [RU]](https://youtu.be/zOiSo1hYjF8) // 31.03\n\n❌ [Андрей Солнцев — Flaky tests](https://youtu.be/jLG3RXECQU8) // 2.04\n\n\n- 2019\n\n❌ [Flaky tests 2.0 - (Andrey Solntsev, Estonia)](https://youtu.be/ibx8nVvt-Js) //18.04\n\n❌ [2019.04.30 Андрей Солнцев — Flaky tests. Часть 2](https://youtu.be/elQ2LGGU2bg) // 6.05\n\n- 2020\n\n❌ [Flaky tests: The method. (Andrei Solntsev, Estonia) [RU]](https://youtu.be/6MfMtky-0q4) //15.03\n\n❌ [2020.08.31 Андрей Солнцев - Flaky tests: Метод](https://youtu.be/SSglWLW40Ac) //1.11\n\n\n- 2021\n\n❌ [Андрей Солнцев — Flaky tests. Порядок имеет значение](https://youtu.be/fFe3reCoeBQ) // 9.02\n\n❌ [Андрей Солнцев — Flaky tests. Метод](https://youtu.be/LDjDtR6kd2c) // 9.09\n\n\n## BDD\n\nhttps://www.youtube.com/watch?v=5FM88buqCYU\n\nhttps://www.youtube.com/watch?v=OYj-kWmLcns\n\n## Page Object\n\nhttps://www.youtube.com/watch?v=3aA5roxhlrQ\n\nhttps://www.youtube.com/watch?v=bMwthP9JMmM\n\nhttps://www.youtube.com/watch?v=jT1mIQmdVuo\n\n## интеграционные тесты\n\nhttps://www.youtube.com/watch?v=S4PblsCWANA\n\n## Xpath\n\nhttps://www.youtube.com/watch?v=nuWWl1jE3Vg\n\nhttps://www.youtube.com/watch?v=QcrLCYB_ckc\n\nhttps://www.youtube.com/c/SoftwareTestingMaterialWebsite/videos\n\n\n## test data \n\nhttps://www.youtube.com/watch?v=E21AxgHX2B0\n\nhttps://www.youtube.com/watch?v=dMRlZQMuKNc\n\nhttps://www.youtube.com/watch?v=STsuxvFQTI8\n\n## отчеты\n\nhttps://www.youtube.com/watch?v=4UjOXFnwDOo\n\nhttps://www.youtube.com/watch?v=tcH9-wrkVrk\n\nhttps://www.youtube.com/watch?v=C72RC7hz6Cw\n\nhttps://www.youtube.com/watch?v=rONnA66Ud1A\n\n## интеграция с TMS\n\nhttps://www.youtube.com/watch?v=P-vureOnDWY\n\nhttps://www.youtube.com/watch?v=epXQp6Sq2Oc\n\nhttps://www.youtube.com/watch?v=xjyacUQ3598\n\nhttps://www.youtube.com/watch?v=s5pendRUgKM\n\nhttps://www.youtube.com/watch?v=p4WU6cMMsls\n\nhttps://youtu.be/ipWx2sIcIeI\n\n## Разное\n\nhttps://www.youtube.com/watch?v=zpB3u0vFJnk\n\nhttps://www.youtube.com/watch?v=kYm-lHutUBI\n\nhttps://www.youtube.com/watch?v=aElDbHjJrV0\n\nhttps://www.youtube.com/watch?v=wIOX_I69zYg\n\nhttps://youtu.be/YnEfNzJauvM\n\nhttps://youtu.be/BEPGrEWZVUE\n\nhttps://www.youtube.com/watch?v=oSIqXLxzR0s\n\n","date":"2022-06-09T00:00:00.000Z","path":"/resursy-ui/","icon":"fas fa-bug","image":"null","order":null,"category":{"title":"automation","path":"/category/automation/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[{"value":"Разработка фреймворка","anchor":"#разработка-фреймворка"},{"value":"Ускорение тестов","anchor":"#ускорение-тестов"},{"value":"BDD","anchor":"#bdd"},{"value":"Page Object","anchor":"#page-object"},{"value":"интеграционные тесты","anchor":"#интеграционные-тесты"},{"value":"Xpath","anchor":"#xpath"},{"value":"test data","anchor":"#test-data"},{"value":"отчеты","anchor":"#отчеты"},{"value":"интеграция с TMS","anchor":"#интеграция-с-tms"},{"value":"Разное","anchor":"#разное"}]}},{"node":{"id":"1afd0e96bb915d4dc17e2e8e2eda1796","title":"Ресурсы. API","content":"\n\n## API testing\n\nhttps://www.youtube.com/watch?v=kAZYAs8Mta4\n\nhttps://www.youtube.com/watch?v=vRl2oO7hCFY\n\nhttps://www.youtube.com/watch?v=FRkelR5H3ho\n\nhttps://www.youtube.com/watch?v=vaEHDkDcPTo\n\nhttps://www.youtube.com/watch?v=woB6yiX-Ll8\n\nhttps://www.youtube.com/watch?v=9VnBVmo1Muc\n\nhttps://www.youtube.com/watch?v=syapweRMiOQ\n\nhttps://www.youtube.com/watch?v=gc4jlXfjNow\n\nhttps://www.youtube.com/watch?v=VTVx5Rx6rsY\n\n## Rest Assured\n\nhttps://www.youtube.com/watch?v=c3V7N0MCm6g\n\nhttps://www.youtube.com/watch?v=x0-uXN2JnFQ","date":"2022-06-09T00:00:00.000Z","path":"/resursy-api/","icon":"fas fa-bug","image":"null","order":null,"category":{"title":"api","path":"/category/api/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[{"value":"API testing","anchor":"#api-testing"},{"value":"Rest Assured","anchor":"#rest-assured"}]}},{"node":{"id":"4004b2e972ad55a09e6121f380403fc3","title":"Ресурсы. Тест дизайн","content":"\nhttps://www.youtube.com/watch?v=LcTymHYm1MM\n\nhttps://www.youtube.com/watch?v=SO3o43A4jVw\n\nhttps://www.youtube.com/watch?v=yzOiGpLA0Jc\n\nhttps://www.youtube.com/watch?v=hBl5pV2xnQg\n\nhttps://www.youtube.com/watch?v=Bqmuw3ZJ75g\n\nhttps://www.youtube.com/watch?v=EGtUFuZmaQ8","date":"2022-06-10T00:00:00.000Z","path":"/resursy-test-dizajn/","icon":"fas fa-bug","image":"null","order":null,"category":{"title":"manual","path":"/category/manual/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[]}},{"node":{"id":"46f764e6fd31743c5f8112a1d7b7483f","title":"Ресурсы. Kubernetes, Docker, Selenoid","content":"\n## Docker\n\nhttps://www.youtube.com/watch?v=0OIgiYVRDiI\n\nhttps://www.youtube.com/watch?v=LeA2_GJ1e70\n\nhttps://www.youtube.com/watch?v=QF4ZF857m44\n\n## Kubernetes\n\nhttps://www.youtube.com/watch?v=_-NRlfur9gE\n\nhttps://youtu.be/Hv1LjlTD3Dk\n\nhttps://www.youtube.com/watch?v=HsWsFuuOjKM\n\nhttps://www.youtube.com/watch?v=fVhpWxqBm2I\n\nhttps://www.youtube.com/watch?v=yPU7sYMGIgM\n\nhttps://www.youtube.com/watch?v=VqLW2TLJM3E\n\nhttps://www.youtube.com/watch?v=EnhwnuJRSXY\n\nhttps://www.youtube.com/watch?v=Mw_rEH2pElw&list=PL8D2P0ruohOBSA_CDqJLflJ8FLJNe26K-\n\n\n## Selenoid. How to.\n\nhttps://www.youtube.com/watch?v=0z3FFTCdYDY&t\n\nhttps://www.youtube.com/watch?v=L01F3i_ZZpA\n\nhttps://www.youtube.com/watch?v=zxMPrUOO48w&t=1242s\n\nhttps://www.youtube.com/watch?v=wAKcBinMn6o&t=1575s\n\nhttps://www.youtube.com/watch?v=Ig24ZJtRI-Y\n\n---\n\nhttps://www.youtube.com/watch?v=w-VXxYa8EJY\n\nhttps://youtu.be/hNBMavE_70Q\n","date":"2022-06-08T00:00:00.000Z","path":"/resursy-kubernetes-docker-selenoid/","icon":"fas fa-bug","image":"null","order":null,"category":{"title":"testops","path":"/category/testops/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[{"value":"Docker","anchor":"#docker"},{"value":"Kubernetes","anchor":"#kubernetes"},{"value":"Selenoid. How to.","anchor":"#selenoid-how-to"}]}},{"node":{"id":"aa7b4cd5a8b428d469d433c4c9796f4f","title":"Ресурсы. CI","content":"\n## Ресурсы. CI\n\nhttps://www.youtube.com/watch?v=RmziIx1D_Lo\n\nhttps://www.youtube.com/watch?v=jX9K5MqTNYM\n\nhttps://www.youtube.com/watch?v=XwQ65qaoPzw\n\nhttps://www.youtube.com/watch?v=hgi7AEEr2B0\n\nhttps://www.youtube.com/watch?v=Xos_J-byz3E\n\nhttps://www.youtube.com/watch?v=rg2PK0jECeM\n\nhttps://www.youtube.com/watch?v=1AJS74luWyI\n\nhttps://www.youtube.com/watch?v=oxbbnDpghCM\n\nhttps://www.youtube.com/watch?v=PeA1QLDxaFQ\n\nhttps://www.youtube.com/watch?v=xERPGjUVSCc\n\nhttps://www.youtube.com/watch?v=Iam2NlTukFQ\n\nhttps://www.youtube.com/watch?v=dxGGZQiuD6Q","date":"2022-06-08T00:00:00.000Z","path":"/resursy-ci/","icon":"fas fa-bug","image":"null","order":null,"category":{"title":"testops","path":"/category/testops/"},"tags":[{"title":"qa","path":"/tag/qa/"}],"headings":[{"value":"Ресурсы. CI","anchor":"#ресурсы-ci"}]}},{"node":{"id":"c4bec020c5b0f9925458ae2fb597657f","title":"Понимание DOM модели","content":"\nDOM — это объектная модель документа, которую браузер создает в памяти компьютера на основании HTML-кода, полученного им от сервера. Иными словами, это представление HTML-документа в виде дерева тегов.\n\nБраузер запрашивает у сервера веб-страницу и получает в ответ ее исходный HTML-код. Браузеру такой код сначала нужно разобрать на элементы. В процессе разбора он строит на основе HTML-кода DOM-дерево. После этого браузер отрисовывает страницу, используя созданное им DOM-дерево, а не исходный HTML-документ.\n\nТакое дерево нужно для правильного отображения сайта и внесения изменений на страницах с помощью JavaScript. JavaScript — это «живой» язык, он может изменять страницу в реальном времени уже после того, как она «пришла» с сервера в браузер. Этим JavaScript принципиально отличается от PHP, который компилирует страницу и только потом посылает в браузер уже готовый HTML-код.\n\n![Схема отображения страницы в браузере](https://blog.skillfactory.ru/wp-content/uploads/2021/09/image6-1.png)\n\nДля чтения и изменения DOM браузеры предоставляют DOM API (программный интерфейс). DOM API — это набор различных объектов, которые разработчик использует для чтения и изменения DOM с помощью JavaScript.\n\n### Из чего состоит HTML-код страницы\nСтраница на HTML состоит из тегов, вложенных в друг друга. Самый общий тег — это HTML. В него вкладываются два дочерних тега head и body.\n\nТег head используется для подключения информации, которая не будет отображаться непосредственно на странице, но будет использоваться для подключения важных файлов. Тут бывает, например, подключение одного или нескольких CSS-файлов, подключенные шрифты, название сайта, язык, кодировка, скрипты, которые должны выполняться в первую очередь, иконка сайта или базовый фон.\n\nВ body находится значимое содержимое. Обычно в body выделяют три части: шапка сайта, основное содержимое и подвал. В шапке обычно содержится верхнее меню сайта, за это отвечает тег header. Для содержимого нет определенного тега, но обычно используется section. Для подвала используется footer, там обычно содержатся контактная информация, ссылки на ключевые страницы сайта и копирайт. Теги header и footer должны быть единственными на странице, а section может бесконечно повторяться.\n\n## Как строится DOM-дерево\nДля описания структуры DOM потребуются термины: корневой, родительские и дочерние элементы. Корневой элемент находится в основании всей структуры и не имеет родительского элемента. Дочерние элементы не просто находятся внутри родительских, но и наследуют различные свойства от них. На картинке ниже изображено DOM-дерево.\n\n![DOM-дерево](https://blog.skillfactory.ru/wp-content/uploads/2021/09/image4-1.png)\n\nКорневой элемент здесь html — без него страница не будет скомпилирована. Он не имеет родительского (вышестоящего) элемента, но имеет два наследника или дочерних элемента — head и body.\n\nПо отношению друг к другу элементы head и body являются сиблингами (братьями и сестрами). В каждый из них можно вложить еще много дочерних элементов. Например, в head обычно находятся link, meta, script или title.\n\nВсе эти теги не являются уникальными, и в одном документе может быть по несколько экземпляров каждого из них.\n\nВ body могут находиться разнообразные элементы. Например, в родительском body — дочерний элемент header, в элементе header — дочерний элемент section, в родительском section — дочерний div, в div — элемент h3, и наконец, в h3 — элемент span. В этом случае span не имеет дочерних элементов, но их можно добавить в любой момент.\n\nМожно описать это так:\n\n![Графическое представление элементов HTML-страницы](https://blog.skillfactory.ru/wp-content/uploads/2021/09/image5-1.png)\n\nА если бы система была бы более разветвленная и с большим количеством вложений — так:\n\n![Графическое представление элементов HTML-страницы](https://blog.skillfactory.ru/wp-content/uploads/2021/09/image1-2.png)\n\nНа схеме изображено довольно большое DOM-дерево, и его сложно воспринимать из-за его размера. Для удобства часто используется система многоуровневых списков. Например, предыдущее дерево можно преобразовать в такой список:\n![Представление элементов HTML-страницы в виде списка](https://blog.skillfactory.ru/wp-content/uploads/2021/09/image2-2.png)\n\nЕсли преобразовать дерево на предыдущем рисунке в код, то получится так:\n\n```js\n<html>\n  <head>\n    <link>\n    <link>\n    <link>\n    <meta>\n    <meta>\n    <title></title>\n  </head>\n  <body>\n    <header>\n      <div>\n        <h3></h3>\n      </div>\n      <div>\n        <h4>\n          <span></span>\n        </h4>\n      </div>\n      <div>\n        <p></p>\n      </div>\n      <div>\n        <img>\n      </div>\n    </header>\n    <section>\n      <div>\n        <h3></h3>\n        <p>\n          <span></span>\n        </p>\n      </div>\n      <div>\n        <p>\n          <span></span>\n        </p>\n        <img>\n        <p></p>\n        <div>\n          <img>\n          <iframe></iframe>\n        </div>\n      </div>\n    </section>\n    <footer>\n      <div>\n        <img>\n        <p></p>\n      </div>\n      <div>\n        <h6></h6>\n      </div>\n    </footer>\n  </body>\n</html>\n```\n\nКак видно из кода, некоторые теги должны закрываться, а некоторые — нет.\n\nЭту схему важно понимать, чтобы разобраться с темой наследования свойств. Элементы могут наследовать не все, но многие свойства своих родителей — например, цвет, шрифт, видимость и т.д.\n\nТаким образом, чтобы задать стиль шрифта на всей странице, потребуется не прописывать цвет для каждого элемента, а задать его только для body. А чтобы изменить наследуемое свойство у дочернего элемента, нужно прописать только ему новые свойства. Наследование удобно для создания единообразной страницы.\n\n### Зачем нужно знать, как строится DOM-дерево?\nБольшинство действий при работе с DOM сводится к поиску нужных элементов. Не понимая, как строится DOM-дерево, и не зная, каковы связи между узлами, найти нужный элемент будет сложно.\n\n### Как просмотреть DOM-дерево?\nВ любом браузере есть инструменты, с помощью которых можно отобразить DOM-дерево. Если выбрать какой-либо объект в структуре, он будет подсвечен на странице. При этом для него будут выведены свойства CSS, которые работают сейчас, и те, которые не задействованы.\n\nЧтобы посмотреть DOM в браузере, нужно зайти в инструменты разработчика. В большинстве браузеров для этого надо нажать на F12 — тогда откроется дополнительная панель с вкладками и зонами.\n\n![Просмотр DOM-дерева в браузере](https://blog.skillfactory.ru/wp-content/uploads/2021/09/image3-2.png)\n\nНа изображении выше во вкладке Elements представлена структура DOM в виде многоуровневого вложенного списка. Каждый элемент можно открыть и посмотреть, что у него внутри, его расположение на странице и размеры этого элемента со всеми отступами.\n\nТакже там находятся другие инструменты — например консоль, где выводится информация об ошибках и куда можно ввести необходимые данные, например для отладки (исправления ошибок в коде).\n\nПанель ресурсов отображает подключенные ресурсы — это шрифты, изображения, JavaScript- и CSS-файлы.\n\n\nПо Web могут спросить что-то типа такого: «Что происходит, когда пользователь набирает в браузере адрес сайта?». Можно раскрыть, как браузер начинает искать сервер, как отправляет запрос к DNS-серверам, как попакетно устанавливается соединение с сервером, процесс обработки запросов и так далее.\n\nКроме того, могут спросить про коды состояний HTTP (Informational/Success/Redirection/Client Error/Server Error) и методы HTTP (GET/POST/PUT/DELETE).\n\nкак функционирует веб-приложение: понимать устройство HTTP-протокола, разбираться в связке HTML/CSS/JS.","date":"2022-05-26T00:00:00.000Z","path":"/ponimanie-dom-modeli/","icon":"fas fa-bug","image":"null","order":null,"category":{"title":"web","path":"/category/web/"},"tags":[{"title":"qa","path":"/tag/qa/"},{"title":"Понимание DOM модели","path":"/tag/%D0%9F%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%BD%D0%B8%D0%B5%20DOM%20%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D0%B8/"}],"headings":[{"value":"Как строится DOM-дерево","anchor":"#как-строится-dom-дерево"}]}}]}},"relatedTag":{"id":"4b276a3a6b99e78392dc449c5d9ba01b","title":"qa","path":"/tag/qa/","related":[{"id":"java","path":"/tag/java/","title":"java"}]}},"context":{}}